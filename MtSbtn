-- // === Teleport Checkpoints + Player + Spawn (Dropdown Fix) ===
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local function getCharacter()
    return LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
end
local function getHRP()
    return getCharacter():WaitForChild("HumanoidRootPart", 5)
end

-- === Kumpulkan Checkpoints ===
local folder = workspace:WaitForChild("Checkpoints")
local MAX = 46
local checkpoints = {}
for i = 1, MAX do
    local name = ("Checkpoint%d"):format(i)
    local obj = folder:FindFirstChild(name)
    if obj then
        local cf = obj:GetPivot()
        table.insert(checkpoints, {name=name, cf=cf, pos=cf.Position, index=i})
    end
end
table.sort(checkpoints, function(a,b) return a.index < b.index end)

local Y_OFFSET = 3
local currentIndex = 1
local autoTeleport = false
local autoDelay = 0.75
local autoConn

local function safeTeleportToIndex(idx)
    idx = math.clamp(idx, 1, #checkpoints)
    currentIndex = idx
    local item = checkpoints[idx]
    if not item then return end
    local hrp = getHRP()
    hrp.CFrame = item.cf + Vector3.new(0, Y_OFFSET, 0)
    local hum = hrp.Parent:FindFirstChildOfClass("Humanoid")
    if hum then hum:MoveTo(item.pos + Vector3.new(0, Y_OFFSET, 0)) end
end
local function nextCheckpoint()
    if #checkpoints == 0 then return end
    local idx = math.min(currentIndex+1, #checkpoints)
    safeTeleportToIndex(idx)
end
local function prevCheckpoint()
    if #checkpoints == 0 then return end
    local idx = math.max(currentIndex-1, 1)
    safeTeleportToIndex(idx)
end

-- === Buat Window ===
local Window = Rayfield:CreateWindow({
    Name = "Checkpoint & Teleport Hub",
    LoadingTitle = "Teleport Utility",
    LoadingSubtitle = "Rayfield • Delta",
    Theme = "Default",
})

-- === Tab Checkpoints ===
local Tab = Window:CreateTab("Checkpoints")
Tab:CreateParagraph({
    Title = "Status",
    Content = ("Ditemukan %d checkpoint."):format(#checkpoints)
})
local names = {}
for _, c in ipairs(checkpoints) do
    table.insert(names, ("%02d • %s"):format(c.index, c.name))
end

local dropdown = Tab:CreateDropdown({
    Name = "Pilih Checkpoint",
    Options = names,
    CurrentOption = names[1] or "",
    MultipleOptions = false,
    Callback = function(option)
        -- handle Rayfield return type
        if typeof(option) == "table" then option = option[1] end
        if typeof(option) == "string" then
            local idx = tonumber(option:match("^(%d+)"))
            if idx then safeTeleportToIndex(idx) end
        end
    end,
})

Tab:CreateButton({Name="◀ Prev", Callback=function() prevCheckpoint() dropdown:Set(names[currentIndex]) end})
Tab:CreateButton({Name="Next ▶", Callback=function() nextCheckpoint() dropdown:Set(names[currentIndex]) end})

Tab:CreateToggle({
    Name = "Auto Teleport 1-1",
    CurrentValue = false,
    Callback = function(val)
        autoTeleport = val
        if autoConn then autoConn:Disconnect() autoConn=nil end
        if autoTeleport and #checkpoints>0 then
            local last=0
            autoConn = RunService.Heartbeat:Connect(function(dt)
                last += dt
                if last>=autoDelay then
                    last=0
                    if currentIndex < #checkpoints then
                        nextCheckpoint()
                        dropdown:Set(names[currentIndex])
                    else
                        autoTeleport=false
                        if autoConn then autoConn:Disconnect() autoConn=nil end
                        Rayfield:Notify({Title="Auto Teleport", Content="Sudah sampai checkpoint terakhir.", Duration=5})
                    end
                end
            end)
        end
    end
})
Tab:CreateSlider({
    Name="Delay Auto (detik)", Range={0.1,3}, Increment=0.05,
    CurrentValue=autoDelay,
    Callback=function(v) autoDelay=v end
})
Tab:CreateButton({Name="Teleport Ulang (Current)", Callback=function() safeTeleportToIndex(currentIndex) dropdown:Set(names[currentIndex]) end})
Tab:CreateButton({
    Name="Copy Semua World Pivot",
    Callback=function()
        local lines={}
        for _,c in ipairs(checkpoints) do
            local p=c.pos
            table.insert(lines,string.format("%d,%s,(%.2f,%.2f,%.2f)",c.index,c.name,p.X,p.Y,p.Z))
        end
        local text=table.concat(lines,"\n")
        if setclipboard then setclipboard(text) Rayfield:Notify({Title="Copied!",Content="Semua pivot ke clipboard.",Duration=5})
        else print(text) Rayfield:Notify({Title="Clipboard tidak ada",Content="Lihat console.",Duration=5}) end
    end
})

-- === Tab Player & Spawn ===
local Tab2 = Window:CreateTab("Player & Spawn")
local function getAllPlayers()
    local list={}
    for _,plr in ipairs(Players:GetPlayers()) do
        if plr~=LocalPlayer then table.insert(list,plr.Name) end
    end
    return list
end

local allPlayers = getAllPlayers()
local playerDropdown = Tab2:CreateDropdown({
    Name="Teleport ke Player",
    Options=allPlayers,
    CurrentOption = allPlayers[1] or "",
    MultipleOptions=false,
    Callback=function(option)
        if typeof(option) == "table" then option = option[1] end
        if typeof(option) == "string" then
            local target=Players:FindFirstChild(option)
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                getHRP().CFrame = target.Character.HumanoidRootPart.CFrame + Vector3.new(0,3,0)
            end
        end
    end
})
Players.PlayerAdded:Connect(function()
    local opts = getAllPlayers()
    playerDropdown:Set(opts[1] or "")
end)
Players.PlayerRemoving:Connect(function()
    local opts = getAllPlayers()
    playerDropdown:Set(opts[1] or "")
end)

local spawnLocation = workspace:FindFirstChildWhichIsA("SpawnLocation")
if spawnLocation then
    Tab2:CreateButton({
        Name="Teleport ke Respawn Awal",
        Callback=function() getHRP().CFrame = spawnLocation.CFrame + Vector3.new(0,5,0) end
    })
end

-- start at checkpoint 1
if #checkpoints>0 then safeTeleportToIndex(1) dropdown:Set(names[currentIndex]) end
