local AldyToikG = {
		"\119\113\112\051\056\072\107\097",
		"\080\115\052\074\106\080\061\061",
		"\100\050\112\099\080\090\078\075\073\090\057\051\114\102\117\066\106\115\100\061",
		"\100\074\048\081\100\084\112\088\056\067\110\088\056\067\102\120\048\090\101\086",
		"\112\113\110\098\048\084\112\120\043\072\054\088\109\103\102\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\053\056\050\043\053\121\090\078\084\109\090\057\066\048\076\118\061",
		"\114\084\112\088\048\090\117\120\048\090\107\100\121\090\112\098\114\111\061\061",
		"\119\103\107\102\056\103\079\061",
		"\119\090\107\088\048\119\054\119\048\103\117\111\109\103\073\099\043\110\107\066\056\090\100\061",
		"\119\090\078\084\048\090\078\120\056\050\122\078\119\103\107\102\056\080\061\061",
		"\121\072\107\120\114\072\079\055\105\098\052\120\121\090\047\120\056\084\088\099\109\084\052\047\105\084\110\088\048\072\102\120\056\084\074\061",
		"\100\115\112\086\121\090\057\066\048\090\078\070\048\080\061\061",
		"\100\050\107\051\073\072\112\086\080\084\052\074\048\080\061\061",
		"\100\084\051\068\073\101\107\102\106\072\080\061",
		"\100\074\100\068\100\115\112\111\056\113\102\070\109\103\107\102\112\113\112\118\073\067\112\115\048\115\112\070\073\077\061\061",
		"\112\113\051\098\048\103\117\097\056\084\057\074\043\067\107\066\114\113\112\098\109\115\110\098\073\090\074\061",
		"\056\113\052\068\114\067\107\102\056\113\110\078",
		"\080\084\052\099\073\113\112\099\073\077\061\061",
		"\104\113\052\086\073\076\054\104\121\113\052\098\048\080\061\061",
		"\100\074\109\068\080\103\073\051\121\103\107\100\114\115\110\074\048\112\122\102\114\050\054\068\056\075\117\102",
		"\087\080\061\061",
		"\080\103\112\120\056\101\107\098\109\090\107\102\112\113\110\108",
		"\112\113\112\088\048\103\054\068\114\075\107\080\056\113\110\078\048\103\122\067\114\115\052\111\048\113\052\050\056\053\061\061",
		"\118\066\089\053\071\071\108\116\043\067\112\098\114\115\052\098\043\072\117\051\109\103\080\053\048\090\078\070\121\113\110\099\073\076\118\053\119\113\112\099\073\113\102\049\109\090\118\099",
		"\048\090\078\051\109\115\057\102\048\077\061\061",
		"\080\084\052\099\073\113\110\066\056\115\112\098",
		"\119\115\052\066\056\108\054\079\121\090\078\049",
		"\104\090\112\120\121\113\052\074",
		"\080\090\107\047\121\090\118\053\105\119\054\072\121\113\052\086\073\076\054\103\056\050\122\047",
		"\119\103\107\102\056\100\117\051\109\084\051\102",
		"\100\113\052\086\121\103\107\066\056\084\118\061",
		"\107\050\112\066\100\084\112\098\073\115\102\070\048\080\061\061",
		"\107\090\078\070\121\113\110\099\073\110\117\120\056\084\078\102\114\111\061\061",
		"\107\103\122\098\056\050\043\061",
		"\048\115\102\086\121\113\102\099\048\120\110\099\121\090\101\051\073\113\102\068\056\053\061\061",
		"\109\084\110\088\048\090\078\074\109\103\043\061",
		"\119\084\052\097\109\090\078\051\043\110\048\068\056\113\117\051\056\115\083\061",
		"\056\115\112\050",
		"\100\084\102\055\048\080\061\061",
		"\100\115\052\088\056\067\107\051\073\113\067\061",
		"\104\103\112\088\073\113\102\111\056\113\112\116\114\072\107\066\056\084\078\086",
		"\100\050\054\102\109\084\102\051\056\067\101\102\114\084\053\061",
		"\119\090\101\051\048\084\112\076\073\103\107\120\056\084\118\061",
		"\107\103\110\101\121\103\054\122\048\113\057\102\119\110\080\061",
		"\100\084\112\088\048\090\117\120\043\110\054\088\109\103\102\102\114\053\061\061",
		"\103\108\053\099\105\119\074\102\114\098\097\102\087\076\112\086\087\102\110\120\106\119\112\086\087\070\097\102\114\098\097\102\048\076\088\102\114\098\097\102\087\119\080\061",
		"\080\050\112\120\114\084\117\102\056\115\112\117\109\090\078\051\048\084\112\098",
		"\080\090\078\066\056\090\110\120\121\090\052\099",
		"\104\090\112\120\109\090\107\051\073\113\067\061",
		"\100\074\109\068\100\072\112\098\109\084\051\051\114\084\112\113\121\103\117\097\121\090\078\075\100\115\052\074",
		"\121\090\078\070\114\115\112\051\114\084\100\061",
		"\080\103\112\120\056\098\054\113\121\103\117\097\121\090\078\075",
		"\114\113\057\051\106\090\112\098\080\084\052\101\056\075\080\061",
		"\100\084\051\068\073\101\054\098\121\090\117\102\112\113\052\075\048\084\057\102",
		"\107\090\078\051\109\115\057\102",
		"\107\090\078\070\121\113\110\099\073\072\079\061",
		"\112\113\112\118\073\067\107\051\073\113\067\061",
		"\100\074\100\068\107\103\110\101\121\103\054\100\056\084\052\088\107\075\122\068\056\100\051\068\073\113\122\051\114\053\061\061",
		"\107\113\112\115\109\103\112\088\073\069\097\053\079\086\077\061",
		"\079\069\043\061",
		"\100\115\110\078\048\115\102\102\056\113\107\110\056\115\110\108\056\113\112\074",
		"\083\122\065\079\074\076\054\104\048\103\122\084\048\103\043\053\119\113\052\111\043\076\051\087\056\084\102\099\043\110\122\051\056\115\107\068\056\119\054\104\048\103\122\084\048\103\043\066",
		"\079\104\112\049\043\067\117\068\121\090\078\086",
		"\080\084\052\047\056\090\052\099",
		"\100\113\112\098\048\115\112\070\073\067\117\051\114\050\080\061",
		"\080\053\061\061",
		"\048\090\078\074\114\113\052\066\056\075\107\112\114\115\111\061",
		"\104\090\110\075\056\115\102\120\073\090\107\102",
		"\080\115\110\086\048\112\054\051\114\075\080\061",
		"\104\103\112\120\109\103\107\066\056\084\078\117\073\090\057\120\121\103\054\088\121\090\112\098",
		"\100\084\101\051\056\113\111\053\104\115\052\120\121\090\048\066\109\084\110\120\121\090\052\099",
		"\080\103\112\120\056\101\117\102\056\113\111\061",
		"\100\074\100\068\107\115\102\086\121\113\102\099\048\120\117\068\056\103\054\088\048\103\107\102\048\077\061\061",
		"\100\115\110\098\048\080\061\061",
		"\080\084\052\111\121\090\112\074\043\072\107\068\043\113\117\088\121\103\054\108\056\084\110\098\048\076\067\061",
		"\112\112\112\122\107\077\061\061",
		"\048\113\112\088\109\103\074\061",
		"\122\090\080\049",
		"\080\050\112\120\114\084\117\102\056\115\100\053\109\090\107\051\056\113\110\097\043\113\110\099\121\090\101\051\114\084\074\053\121\084\112\120\121\090\047\051\043\113\101\102\056\115\107\051\114\113\110\120\121\084\110\099\043\110\107\066\048\103\043\053\104\103\102\120\121\113\102\070\043\113\110\120\109\103\100\053\100\120\112\069\100\074\112\100",
		"\100\113\110\098\073\113\102\070\056\113\112\110\056\090\102\120\073\113\112\098",
		"\100\072\122\066\073\115\110\120\048\119\054\086\048\103\122\084\048\103\043\053\109\084\052\074\048\119\054\120\121\090\107\051\121\098\054\074\121\103\107\102\056\103\112\049\109\090\118\061",
		"\122\119\053\097\105\108\088\066\122\119\074\061",
		"\100\113\057\051\106\090\112\098\114\098\054\066\056\108\054\086\048\103\122\084\048\103\043\055\043\077\061\061",
		"\112\113\112\098\114\115\110\066\056\053\061\061",
		"\107\103\051\070\056\113\110\066\056\080\061\061",
		"\112\072\122\051\056\075\117\111\109\103\122\102\056\115\117\078",
		"\080\084\051\051\056\115\117\102",
		"\073\113\052\120\109\090\057\069\109\103\112\075\121\072\080\061",
		"\100\074\048\081\080\084\051\051\114\115\073\102\107\115\102\086\121\113\102\099\048\101\122\068\048\077\061\061",
		"\114\113\052\086\121\103\107\066\056\084\118\061",
		"\104\090\052\074\048\090\111\061",
		"\104\113\112\075\048\090\078\074\109\103\122\078",
		"\100\074\100\068\107\103\110\101\121\103\054\122\073\113\112\047",
		"\100\074\048\081\119\090\078\066\073\113\102\051\073\113\112\100\114\115\110\074\048\080\061\061",
		"\056\115\112\120",
		"\107\115\110\084\056\050\122\066\073\113\112\100\056\084\073\075\056\113\112\086",
		"\114\113\057\051\106\090\112\098\107\072\122\068\114\113\107\068\073\084\118\098",
		"\119\113\110\098\048\084\067\053\119\090\047\051\056\108\054\067\121\103\107\051\056\103\054\066\056\113\047\051\056\053\061\061",
		"\100\072\122\066\056\090\110\098\106\112\054\051\114\075\080\061",
		"\107\113\112\115\109\103\112\088\073\069\097\053\079\104\077\061",
		"\109\050\122\102\048\113\102\120\105\090\117\051\114\115\080\061",
		"\073\084\110\086\080\103\112\120\056\120\048\066\114\084\051\066\056\115\114\061",
		"\100\113\110\075\048\103\079\061",
		"\056\113\110\086\073\110\107\066\048\103\122\082\109\090\101\102",
		"\048\103\048\102\056\075\107\079\121\103\117\120",
		"\100\084\112\088\048\090\117\120\043\110\073\102\109\103\107\097\048\103\043\097\114\098\074\053\073\113\083\053\080\103\112\120\056\098\054\076\073\103\074\061",
		"\107\113\102\086\109\084\052\098\048\076\054\112\114\084\112\098\043\067\102\067\043\076\051\116\114\072\107\066\056\084\078\051\056\076\074\061",
		"\107\084\112\120\112\113\102\102\114\074\048\098\056\084\101\119\109\103\122\066\073\072\074\061",
		"\080\115\110\086\048\100\057\101\109\084\088\061",
		"\100\074\109\068\100\084\112\088\056\067\110\088\056\067\102\120\048\090\101\086",
		"\100\050\107\051\073\072\112\086",
		"\109\084\057\051\056\103\077\061",
		"\100\072\122\068\056\103\054\120\104\115\110\047\048\080\061\061",
		"\107\115\102\086\121\113\102\099\048\098\054\119\056\084\107\086",
		"\112\072\102\111\048\080\061\061",
		"\080\103\112\120\056\120\110\070\109\084\112\111\073\110\107\098\109\090\107\102",
		"\048\115\102\086\121\067\117\068\073\090\078\120",
		"\100\084\112\088\056\110\054\098\121\090\117\102\104\113\110\108\048\090\111\061",
		"\104\090\110\066\056\053\061\061",
		"\109\090\107\047\121\090\118\061",
		"\080\084\057\066\048\090\078\120",
		"\114\113\057\051\106\090\102\099\048\111\061\061",
		"\112\113\102\102\114\074\048\066\056\072\107\102\114\074\048\088\109\090\114\061",
		"\100\084\112\088\048\090\117\120\043\072\107\097\048\119\054\066\114\084\057\051\056\115\080\053\106\090\052\101\043\072\073\051\056\075\080\053\073\113\083\053\048\115\110\098\056\119\111\053\073\113\051\102\056\108\054\086\048\103\080\053\073\113\051\102\043\072\107\102\056\113\112\111\056\050\122\120\043\072\107\097\114\115\112\086\121\113\052\088\048\077\061\061",
		"\100\084\112\088\048\090\117\120\043\067\112\099\109\084\051\051\056\075\080\061",
		"\100\084\047\078\109\115\052\118\112\103\077\061",
		"\083\122\065\100\053\119\054\119\048\090\066\068\121\090\118\053\100\084\112\098\073\115\112\098",
		"\119\113\112\051\048\113\112\098\114\111\061\061",
		"\100\115\112\047\056\050\107\102\107\103\048\102\056\075\080\061",
		"\121\072\107\120\114\072\079\055\105\098\052\066\121\084\047\108\114\098\078\066\056\115\107\068\109\103\122\086\121\103\077\099\109\084\083\099\121\090\080\068\106\072\117\102\114\075\048\102\114\074\107\051\073\113\067\099\114\113\051\111",
		"\112\113\112\118\073\067\057\051\109\115\112\088",
		"\104\090\110\118\100\050\054\051\056\112\117\102\109\084\052\099\048\072\079\061",
		"\073\113\102\102\114\074\110\098\114\115\110\078",
		"\112\072\073\102\048\090\078\104\048\103\122\084\121\090\117\102",
		"\090\080\061\061",
		"\112\113\102\102\114\102\083\061",
		"\048\113\110\111\109\103\107\122\121\084\110\099",
		"\112\084\110\088\121\098\054\104\114\113\112\102\048\077\061\061",
		"\090\090\112\086",
		"\114\115\110\099\048\113\052\047\112\113\051\102\056\090\100\061",
		"\083\122\065\056\074\108\054\054\073\103\107\068\043\110\117\102\056\113\111\053\080\075\074\053\080\115\110\070\114\113\110\070\121\111\061\061",
		"\116\084\107\051\073\113\067\052",
		"\080\103\112\120\056\101\117\051\073\115\112\110\056\115\110\108\056\113\112\074",
		"\073\090\078\066\073\115\112\098\114\084\110\088\104\115\052\070\056\113\102\111",
		"\073\113\102\102\114\074\048\066\056\072\107\102\114\102\107\068\048\084\073\088\048\080\061\061",
		"\100\084\112\120\073\113\102\099\048\050\117\100\109\090\043\061",
		"\073\113\051\098\048\103\117\097\056\084\057\074\112\110\077\061",
		"\100\050\107\051\114\075\107\119\056\084\107\069\121\113\110\098\048\084\112\043\112\077\061\061",
		"\122\076\077\061",
		"\080\115\110\070\121\084\073\098\056\050\112\099\048\067\117\068\056\113\052\098\079\111\061\061",
		"\109\103\112\120\056\120\122\101\106\112\073\102\109\103\107\097\048\103\043\061",
		"\100\050\107\068\114\072\054\102\048\076\054\054\073\103\107\068\043\067\122\101\106\090\102\099\048\111\061\061",
		"\112\103\117\102\114\074\102\099\114\072\112\120\100\084\112\098\073\115\102\070\048\080\061\061",
		"\100\084\110\050\048\103\122\066\109\080\061\061",
		"\104\113\112\084\048\090\111\111\079\080\061\061",
		"\107\090\078\070\121\113\110\099\073\076\054\070\056\084\117\068\121\098\054\074\121\103\107\102\056\103\112\049\109\090\118\055\043\077\061\061",
		"\112\113\112\118\073\110\107\098\109\090\078\086\114\113\110\098\048\090\078\070\106\080\061\061",
		"\080\103\112\120\056\098\054\104\109\103\048\102\043\076\109\053\100\115\112\086\073\113\052\098\048\119\054\079\109\103\117\120\043\110\054\068\114\084\102\120\121\090\052\099",
		"\080\084\052\099\073\113\052\097\043\069\097\053\117\080\061\061",
		"\073\072\122\051\048\113\100\053\109\084\052\047\114\113\057\102\073\113\112\074\043\080\061\061",
		"\119\103\107\102\056\100\078\051\056\090\100\061",
		"\104\090\102\099\121\090\101\101\056\119\054\080\056\113\110\078\048\103\122\086\043\072\107\068\043\067\066\068\121\090\118\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098\114\111\061\061",
		"\121\090\078\086\048\103\122\120",
		"\100\084\112\098\073\115\112\098\104\072\112\070\121\111\061\061",
		"\056\113\110\086\073\110\107\066\048\103\122\067\109\103\107\051",
		"\100\074\112\081\080\090\117\120\121\103\048\051\073\113\112\110\056\115\117\097\109\090\078\120\121\090\078\075\080\090\057\120\109\103\043\061",
		"\107\115\102\086\121\113\112\086",
		"\100\074\112\081\107\115\102\086\121\113\102\099\048\120\112\115\048\115\112\070\073\077\061\061",
		"\100\074\109\068\100\072\112\098\109\084\051\051\114\084\112\103\048\090\110\120\121\113\112\098\107\103\048\102\056\075\080\061",
		"\112\103\117\102\114\074\102\074",
		"\116\110\122\102\048\075\122\102\114\084\053\053\073\113\083\053\056\113\052\051\048\076\054\066\073\113\112\047\114\086\118\061",
		"\048\084\057\068\073\111\061\061",
		"\100\115\110\098\121\103\107\078",
		"\048\084\110\047\048\100\102\099\114\050\107\051\056\115\117\102\119\090\080\052\087\110\088\102\073\098\100\047\103\119\088\066",
		"\100\084\112\074\109\090\078\075\043\072\107\098\109\090\107\066\056\115\114\053\122\090\080\068\122\090\080\087\100\050\112\049\114\084\112\086\082\108\077\102\048\076\054\083\043\067\073\051\048\084\110\088\082\108\077\102\048\076\054\083\043\110\117\066\114\084\067\055\043\076\112\074",
		"\112\115\102\086\121\090\122\088\048\080\061\061",
		"\112\113\102\102\114\070\112\079\048\090\073\102\056\115\107\051\114\075\074\061",
		"\079\104\079\061",
		"\100\113\057\051\106\090\112\098\100\115\112\047\056\050\048\066\056\115\114\061",
		"\100\120\112\069\100\074\112\100",
		"\100\074\109\068\119\090\078\066\073\113\102\051\073\113\112\100\114\115\110\074\048\080\061\061",
		"\100\084\051\068\073\098\054\069\109\103\112\075\121\072\080\053\104\115\052\120\121\090\048\066\109\084\110\120\121\090\052\099",
		"\104\115\083\053\048\113\112\086\109\050\122\066\114\072\107\066\056\084\118\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098\080\090\107\074\048\090\080\061",
		"\104\084\078\069\056\113\102\102\056\075\107\110\073\115\112\099\073\077\061\061",
		"\104\115\083\053\112\084\112\051\073\113\051\102\114\108\054\104\048\090\057\102\109\050\107\102\048\076\067\053\100\113\057\102\109\103\117\102\043\072\117\102\056\113\112\070\073\076\054\051\073\076\054\088\048\090\110\086\073\076\054\068\056\115\100\053\073\084\112\051\073\113\051\102\114\108\054\120\056\098\054\051\073\103\107\068\043\113\122\101\106\119\118\061",
		"\114\113\112\098\048\115\112\070\073\067\117\051\114\050\080\061",
		"\048\115\102\088\073\113\112\098\112\090\078\115\109\103\048\068\114\115\102\120\048\090\080\061",
		"\107\084\110\075\109\090\111\053\056\113\052\051\048\076\054\108\109\090\102\120\082\053\061\061",
		"\109\103\112\120\056\120\048\066\114\084\051\100\056\084\073\075\056\113\100\061",
		"\056\113\112\051\048\113\112\098\114\050\107\051\073\072\079\061",
		"\112\084\110\066\073\113\102\099\048\098\054\115\056\050\043\053\114\050\107\051\114\075\080\053\073\072\122\051\048\113\100\099\105\108\118\061",
		"\080\090\078\070\121\113\052\098\048\090\080\061",
		"\100\113\057\102\109\103\117\102\043\072\117\102\056\113\112\070\073\076\054\066\073\113\112\047\114\098\111\053\109\090\101\068\073\090\078\120\105\076\054\068\114\108\054\111\056\113\110\078\048\103\043\099",
		"\100\113\057\051\106\080\061\061",
		"\103\120\102\099\048\113\112\118",
		"\107\115\102\099\048\113\102\099\048\098\054\051\043\113\078\102\073\098\054\086\048\103\122\084\048\103\043\053\073\113\083\053\121\115\052\066\056\108\118\099\105\053\061\061",
		"\107\111\061\061",
		"\056\113\110\086\073\110\107\066\048\103\122\119\048\090\117\102\121\103\048\102\048\077\061\061",
		"\076\074\101\102\056\115\117\068\109\115\067\053\056\113\110\075\121\119\118\099\105\053\061\061",
		"\112\090\078\113\109\103\048\068\114\115\102\120\048\119\054\054\056\113\111\061",
		"\119\090\078\070\114\115\112\047\048\090\078\120",
		"\119\084\112\078\114\113\052\066\056\075\107\086",
		"\112\072\122\068\114\113\102\070\109\090\111\053\107\050\122\068\073\115\100\061",
		"\112\084\112\051\073\113\051\102\114\108\054\117\109\090\117\097\121\090\078\102",
		"\107\103\054\066\109\111\061\061",
		"\100\074\109\068\080\084\110\099\109\084\112\088\107\115\102\086\121\113\102\099\048\120\102\099\114\072\112\120\114\111\061\061",
		"\083\122\065\079\066\082\065\118\070\098\054\080\073\103\122\070\121\113\110\086\048\119\054\103\048\090\110\120\121\113\112\098\043\067\112\084\048\090\078\120\114\111\061\061",
		"\112\113\112\088\048\103\054\068\114\075\080\053\073\113\083\053\107\103\048\102\056\075\080\061",
		"\100\115\112\115\056\113\112\070\073\113\110\099\109\084\100\061",
		"\100\115\112\111\056\113\102\070\109\103\107\102\048\110\117\120\056\050\122\051\048\084\100\061",
		"\107\115\057\051\048\111\061\061",
		"\119\090\107\088\048\090\080\061",
		"\122\120\117\097\109\103\122\051\109\050\107\102\114\075\079\075\043\113\048\068\056\113\107\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\099",
		"\104\050\054\120\121\090\052\099\114\111\061\061",
		"\048\084\057\068\109\115\100\061",
		"\107\084\110\075\109\090\111\053\114\113\110\098\114\084\102\099\048\098\054\111\056\113\110\070\048\100\102\074\043\076\083\053\048\084\110\047\048\100\102\099\114\050\107\051\056\115\117\102\119\090\080\061",
		"\114\084\112\088\048\090\117\120\048\090\107\110\073\115\112\099\073\072\079\061",
		"\107\090\110\086\121\090\078\075\107\113\102\098\048\090\117\120\121\090\052\099",
		"\119\090\078\111\073\103\080\053\112\113\102\074\109\090\088\053\112\115\110\088\121\090\080\061",
		"\122\103\079\089\122\090\043\097\087\080\061\061",
		"\080\084\052\099\073\113\112\099\073\076\101\100\106\103\054\102",
		"\079\104\067\061",
		"\122\119\118\057\048\074\120\053\080\084\052\066\056\075\079\061",
		"\100\113\057\051\106\090\112\098\114\111\061\061",
		"\112\113\112\118\073\110\117\070\109\090\057\102\048\077\061\061",
		"\048\115\052\098\056\090\110\120",
		"\121\090\078\115\056\111\061\061",
		"\100\072\122\068\114\072\079\061",
		"\080\103\112\120\056\098\054\100\114\115\110\074\048\080\061\061",
		"\090\090\112\086\080\075\112\120\073\113\052\099\104\115\110\047\048\080\061\061",
		"\104\113\102\099\121\098\054\049\056\050\117\068\056\115\114\051",
		"\100\074\109\068\112\103\054\074\109\103\107\102\080\103\112\120\056\120\048\066\114\084\051\066\056\115\073\104\073\113\110\120\048\080\061\061",
		"\080\090\122\068\073\103\107\100\109\090\043\061",
		"\107\090\078\120\048\103\043\053\106\090\052\101\114\108\054\067\121\103\117\070\056\050\122\074\043\067\102\067",
		"\119\113\052\088\106\119\054\100\114\115\102\074\048\090\078\120\043\076\120\053\100\050\107\051\114\075\107\119\056\084\107\069\121\113\110\098\048\084\100\061",
		"\112\113\112\118\073\077\061\061",
		"\104\050\073\099\048\103\122\122\048\077\061\061",
		"\114\084\112\088\048\090\117\120\048\090\107\100\121\090\112\098",
		"\112\113\112\088\048\103\054\068\114\075\080\061",
		"\100\113\057\102\109\103\117\102\043\113\112\099\073\113\112\098\043\113\067\053\073\115\110\088\121\090\080\053\056\075\112\047\109\115\112\098\105\053\061\061",
		"\107\115\102\098\048\112\117\102\114\075\048\102\114\053\061\061",
		"\100\074\100\068\107\115\102\086\121\113\102\099\048\101\117\120\056\050\054\111\048\090\080\061",
		"\112\113\102\102\114\053\061\061",
		"\079\069\109\061",
		"\119\113\052\088\106\119\054\100\114\115\102\074\048\090\078\120\043\076\120\053\100\115\052\074\112\113\051\098\056\050\114\061",
		"\100\115\112\120\114\075\102\067\048\090\057\051\106\080\061\061",
		"\104\113\102\075\121\072\107\066\056\115\114\061",
		"\073\072\122\051\048\113\112\104\048\103\080\061",
		"\100\113\110\070\121\084\110\075\048\103\079\061",
		"\112\084\110\066\073\113\102\099\048\098\054\115\056\050\043\053\048\103\048\102\056\075\080\099\105\108\118\061",
		"\112\115\102\098\073\072\112\051\056\110\112\086\048\103\043\061",
		"\080\084\110\086\073\110\117\097\109\090\107\068\073\111\061\061",
		"\119\072\112\047\109\090\078\068\121\090\107\119\056\084\052\120\100\113\110\098\073\077\061\061",
		"\080\115\057\101\114\074\112\115\048\115\112\070\073\077\061\061",
		"\048\115\057\068\109\103\107\100\056\084\073\075\056\113\100\061",
		"\119\115\052\066\056\108\054\067\121\103\117\070\056\050\122\074\043\110\117\102\114\075\048\102\114\053\061\061",
		"\107\115\110\084\056\050\122\066\073\113\112\074",
		"\112\113\102\102\114\070\073\104\048\090\117\098\048\103\080\061",
		"\104\115\083\053\109\103\048\051\121\090\057\051\109\115\057\102\043\072\117\102\114\075\048\102\114\108\054\115\056\050\112\099\048\076\054\120\056\098\054\097\056\050\077\053\073\084\102\120\121\076\077\065\043\077\061\061",
		"\079\069\053\061",
		"\114\084\112\088\048\090\117\120\048\090\107\080\056\113\110\078\048\103\122\122\048\077\061\061",
		"\100\050\107\051\114\075\080\053\112\072\122\051\048\113\100\051",
		"\100\074\048\081\080\103\112\120\056\120\048\066\114\084\053\061",
		"\100\072\122\068\106\113\102\047\121\103\107\078\100\072\122\068\056\103\054\120\100\084\112\098\073\115\102\070\048\080\061\061",
		"\107\113\110\120\109\080\061\061",
		"\112\084\110\120\048\103\122\103\109\103\048\102\100\084\102\055\048\080\061\061",
		"\104\090\110\120\048\103\122\066\109\090\111\061",
		"\119\075\112\047\056\113\110\097\043\067\122\051\073\072\100\061",
		"\121\072\107\120\114\072\079\055\105\098\052\075\109\090\101\102\114\098\078\098\056\084\122\088\056\050\053\099\109\084\052\047\105\050\109\057\105\084\073\051\056\090\112\086\105\111\061\061",
		"\056\113\110\086\073\067\048\066\114\084\053\061",
		"\107\075\122\102\114\103\112\102\056\115\117\078",
		"\100\103\112\051\056\113\102\120\106\100\057\102\073\115\112\088",
		"\079\069\114\061",
		"\107\115\102\086\121\113\102\099\048\098\054\119\109\090\107\051\114\053\061\061",
		"\100\084\112\070\114\115\112\120",
		
		"\104\113\110\086\073\110\054\068\114\084\102\120\121\090\052\099",
		"\080\103\112\120\056\120\048\051\114\115\101\100\056\084\073\075\056\113\112\069\056\084\078\115\121\090\114\061",
		"\107\113\112\070\109\090\057\086",
		"\090\053\061\061",
		"\104\090\052\074\073\090\057\102\100\084\117\098\121\103\054\120",
		"\109\115\052\068\056\110\052\051\073\103\107\068\107\115\102\086\121\077\061\061",
		"\090\077\061\061",
		"\080\115\110\070\121\084\073\098\056\050\112\099\048\110\107\098\109\090\078\086\114\113\110\098\048\090\078\070\106\080\061\061",
		"\080\050\112\098\114\115\112\099\073\067\117\051\056\090\112\098\109\080\061\061",
		"\109\103\054\111\056\113\102\070\109\103\107\066\056\084\118\068\121\075\117\068\056\053\061\061",
		"\114\050\054\051\073\084\118\061",
		"\100\074\112\081\107\115\102\086\121\113\102\099\048\120\117\068\056\103\054\088\048\103\107\102\048\077\061\061",
		"\080\075\112\078\043\110\122\068\048\076\077\115\043\067\122\051\121\103\080\061",
		"\119\090\078\115\121\090\078\066\073\072\074\053\119\075\112\047\114\077\061\061",
		"\109\103\112\120\056\101\107\098\109\090\107\102\104\084\118\061",
		"\104\103\102\120\121\113\102\070",
		"\073\084\112\108\121\113\052\068\121\101\117\102\073\072\107\066\056\115\114\061",
		"\079\104\079\120\082\104\109\101\117\069\043\101\117\070\109\120\079\069\079\120",
		"\080\084\057\066\109\084\047\067\048\090\057\051\106\080\061\061",
		"\114\084\052\098\073\077\061\061",
		"\107\075\122\051\056\090\100\061",
		"\073\113\051\102\056\090\112\086",
		"\080\115\052\098\048\113\112\098",
		"\100\115\112\047\056\050\048\102\112\113\112\118\073\067\110\115\073\113\112\098\107\115\052\070\073\103\117\079\056\050\117\120",
		"\121\072\107\120\114\072\079\055\105\098\052\050\073\050\114\099\114\115\052\108\056\113\052\118\105\115\117\068\056\119\052\075\109\090\101\102\114\098\052\086\073\113\110\098\073\069\052\111\056\113\110\070\048\100\102\074\116\119\112\074\122\115\073\051\056\090\112\122\056\075\117\120\109\090\078\070\048\100\102\074\116\119\112\086",
		"\104\113\102\099\121\098\054\120\121\090\107\051\121\098\054\084\109\090\057\066\048\077\061\061",
		"\114\084\110\084\048\090\107\069\107\075\122\051\056\090\100\061",
		"\107\090\078\070\121\113\110\099\073\110\107\051\109\053\061\061",
		"\104\090\112\086\121\113\112\086",
		"\112\112\122\110\105\101\112\111\048\113\110\120\048\100\052\118\106\090\073\102\056\053\061\061",
		"\114\084\112\088\048\090\117\120\048\090\107\080\056\113\110\078\048\103\122\082\109\090\101\102",
		"\112\084\052\098\056\119\054\043\073\090\078\120",
		"\119\100\080\061",
		"\112\072\122\051\048\113\112\104\073\113\052\099\048\112\107\051\109\053\061\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098\043\113\052\098\043\067\051\101\056\090\110\099\056\084\102\074\100\115\052\068\073\110\054\051\114\075\080\053\056\115\052\120\043\113\048\068\073\090\078\074\105\053\061\061",
		"\043\067\117\068\121\090\078\086",
		"\112\115\102\098\073\072\112\051\056\067\102\099\114\072\112\120\104\090\110\099\109\090\073\102\114\053\061\061",
		"\114\115\110\098\121\103\107\078",
		"\121\090\078\115\119\075\112\047\114\077\061\061",
		"\080\115\110\070\121\050\054\051\109\084\088\061",
		"\107\115\057\051\048\050\079\061",
		"\107\113\112\115\109\103\112\088\073\069\097\053\117\104\077\111\079\077\061\061",
		"\100\084\047\066\114\076\054\113\121\103\117\097\121\090\078\075\043\067\110\099\121\090\101\051\073\113\102\068\056\053\061\061",
		"\080\103\112\120\056\101\122\102\114\050\054\051\073\084\118\061",
		"\080\103\112\120\056\098\054\113\109\103\048\068\114\115\102\120\048\080\061\061",
		"\112\090\078\049\056\115\052\050\056\053\061\061",
		"\112\084\112\051\073\113\051\102\114\074\101\051\109\084\051\066\056\115\112\080\114\115\102\070\048\080\061\061",
		"\119\077\061\061",
		"\080\084\052\099\073\113\112\118\073\072\112\051\056\077\061\061",
		"\107\113\102\086\109\084\052\099\056\115\112\070\073\113\112\074\105\101\107\102\056\113\112\111\056\050\122\120\048\090\080\061",
		"\107\113\112\070\109\090\111\061",
		"\112\084\052\098\056\113\107\080\121\103\048\068\073\076\054\099\056\050\080\053\109\103\048\051\121\090\057\051\109\115\057\102\043\113\048\068\114\108\054\082\100\067\079\055\043\077\061\061",
		"\121\072\107\120\114\072\079\055\105\098\052\074\121\103\117\070\056\050\122\074\105\115\073\075\105\050\054\102\117\102\112\087\104\075\066\043\112\112\080\061",
		"\100\084\112\088\056\110\054\098\121\090\117\102",
		"\104\113\052\070\109\090\057\080\056\113\110\078\048\103\043\061",
		"\080\084\052\099\073\072\122\068\056\113\057\102\114\075\079\061",
		"\109\103\112\120\056\101\122\102\114\050\054\051\073\084\118\061",
		"\119\113\052\088\106\119\054\100\114\115\102\074\048\090\078\120\043\076\120\053\107\115\102\086\121\067\117\051\073\090\073\097\073\077\061\061",
		"\100\074\112\081\107\103\110\101\121\103\054\100\056\084\052\088",
		"\119\075\112\047\056\113\110\097\043\113\057\068\056\050\077\053\048\113\074\047\114\084\112\120\043\113\047\102\082\053\061\061",
		"\100\050\107\051\114\075\107\102\048\076\054\054\073\103\107\068\043\067\122\101\106\090\102\099\048\098\054\104\048\090\057\102\109\050\107\102\048\076\054\103\048\090\110\120\121\113\112\098\087\072\079\066",
		"\080\090\078\075\056\113\112\086",
		"\107\050\112\066\104\084\122\089\048\090\117\120",
		"\121\072\107\120\114\072\079\055\105\098\052\086\109\103\073\102\114\115\102\051\105\115\117\068\105\084\110\088\048\072\102\120\056\084\074\061",
		"\119\090\078\084\056\084\047\102\100\084\112\098\073\115\112\098",
		"\056\113\052\068\114\067\117\068\073\090\078\120",
		"\122\115\117\101\114\075\117\068\114\070\120\061",
		"\048\115\102\088\073\113\112\098\100\115\112\075\048\103\053\061",
		"\056\113\052\050\048\103\043\061",
		"\083\122\065\100\051\076\054\119\048\090\048\098\048\103\117\097\043\110\054\088\109\103\102\102\114\108\054\079\121\103\117\120",
		"\100\074\112\119\056\084\057\088\107\090\078\070\121\113\110\099\073\077\061\061",
		"\100\084\047\078",
		"\107\113\102\086\109\084\052\098\048\076\054\122\056\075\048\066\073\113\100\061",
		"\080\120\048\098\109\090\101\102",
		"\119\072\107\120\114\110\117\102\114\075\048\066\109\084\100\061",
		"\112\115\110\098\121\090\110\099\073\067\102\074",
		"\100\084\051\066\056\075\102\117\073\090\057\120\121\103\054\088\121\090\112\098",
		"\119\090\047\051\056\108\054\051\121\084\110\099\043\113\107\066\121\075\112\051\056\076\054\068\073\113\052\047\109\103\107\066\114\098\054\086\109\090\110\120\043\113\066\101\056\090\057\051\121\076\054\047\048\090\078\070\109\103\054\051\121\119\077\061",
		"\056\090\110\118\100\113\057\051\106\090\112\098\114\111\061\061",
		"\104\115\052\120\043\113\112\099\056\050\112\075\121\076\054\066\073\113\112\047\114\111\061\061",
		"\119\115\052\066\056\115\102\099\048\098\118\099\105\053\061\061",
		"\107\115\102\086\121\113\112\098\056\090\110\099\043\067\102\086\056\113\110\099\048\077\061\061",
		"\121\103\117\088\109\090\078\074\104\113\052\070\109\103\107\066\056\084\118\061",
		"\114\072\122\066\109\084\112\090\109\090\057\101\048\080\061\061",
		"\100\115\052\120\109\103\107\066\056\084\118\061",
		"\080\050\112\098\114\115\112\099\109\050\102\069\056\050\112\099\073\113\112\098",
		"\112\090\078\070\056\084\101\047\056\084\118\061",
		"\100\084\112\088\048\090\117\120\043\110\107\066\048\103\043\061",
		"\107\115\102\086\121\067\117\051\073\090\073\097\073\067\051\100",
		"\080\090\078\070\121\113\052\098\100\113\052\066\056\075\080\061",
		"\073\072\122\051\048\113\112\107\073\072\074\061",
		"\107\113\112\086\109\050\122\066\114\072\107\066\056\084\118\061",
		"\080\075\112\078\121\090\078\075\043\077\061\061",
		"\080\090\057\074\106\112\107\068\121\119\073\086\043\067\048\066\114\084\053\053\119\103\080\051",
		"\073\084\112\051\073\113\051\102\114\075\079\061",
		"\104\090\052\101\114\084\112\076\073\103\107\120\056\084\118\057\080\084\057\066\109\084\088\061",
		"\114\113\057\051\106\090\112\098\107\072\122\068\114\113\107\068\073\084\118\086",
		"\107\113\112\115\109\103\112\088\073\069\097\053\079\053\061\061",
		"\080\103\112\120\056\120\101\102\048\084\110\088\056\084\107\068\056\053\061\061",
		"\104\113\110\108\048\090\111\061",
		"\080\090\078\120\121\119\054\079\109\090\114\053\105\098\054\079\056\050\114\053\112\113\112\118\073\072\112\098\048\080\061\061",
		"\109\090\122\086",
		"\107\103\048\102\056\075\107\086",
		"\100\084\110\084\048\100\052\098\121\090\073\066\056\115\110\088",
		"\073\113\052\120\109\090\057\069\056\084\102\099",
		"\100\113\057\051\106\090\112\098\107\050\112\066",
		"\107\084\110\075\109\090\111\053\056\090\112\047\109\115\110\070\109\119\054\108\109\090\102\120\043\113\101\068\048\072\112\088\048\104\097\061",
		"\107\115\110\098\056\112\107\097\114\115\112\086\121\113\052\088\048\077\061\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098\043\113\078\068\073\076\054\115\056\050\112\099\048\077\061\061",
		"\121\103\117\054\073\067\112\084\048\090\078\120",
		"\080\090\078\066\056\090\110\120\121\090\052\099\114\111\061\061",
		"\100\084\051\051\114\115\112\074",
		"\104\103\102\120\121\113\102\070\109\090\111\061",
		"\100\113\057\051\106\090\112\098\043\110\107\102\056\113\100\061",
		"\100\113\057\051\109\084\112\122\048\077\061\061",
		"\100\115\112\115\114\115\112\086\121\076\054\110\073\115\112\099\073\076\054\079\121\103\117\120",
		"\100\113\110\098\073\077\061\061",
		"\107\072\112\098\109\103\107\066\056\084\118\061",
		"\100\050\107\068\114\067\052\099\112\113\112\118\073\067\101\051\073\113\117\097\048\103\079\061",
		"\112\103\117\102\112\074\102\117",
		"\080\090\078\066\056\090\110\120\056\050\043\061",
		"\080\084\110\101\048\084\051\120",
		"\100\072\122\068\048\050\122\102\114\050\079\053\112\072\122\051\048\113\100\053\080\115\110\120\073\080\061\061",
		"\090\090\052\101\114\108\054\070\121\113\110\098\109\090\117\120\048\103\043\053\056\115\052\120\043\113\048\068\073\090\078\074\105\053\061\061",
		"\073\113\110\108\056\113\100\061",
		"\080\050\112\086\073\113\052\047\112\084\112\108\121\113\052\068\121\111\061\061",
		"\109\050\112\086\073\113\052\047\112\103\122\088",
		"\109\090\117\120\121\103\048\102\107\103\048\102\056\075\107\082\109\090\101\102",
		"\080\050\112\098\114\115\112\099\073\067\052\111\073\113\102\068\056\053\061\061",
		"\080\084\052\098\109\090\111\053\100\115\112\102\048\075\079\061",
		"\103\108\053\099\105\119\074\102\114\098\097\102\087\076\112\074\087\050\053\102\087\119\080\061",
		"\107\113\102\074\109\103\054\051\073\069\097\053",
		"\073\084\052\098\056\080\061\061",
		"\119\113\112\051\048\077\061\061",
		"\073\113\102\102\114\074\048\066\056\072\107\102\114\053\061\061",
		"\112\084\110\120\048\103\122\119\048\090\048\088\048\090\117\120\109\090\078\070\048\080\061\061",
		"\112\084\110\088\121\101\117\111\048\090\112\074",
		"\112\113\102\102\114\102\112\120\121\090\057\066\073\072\074\061",
		"\100\084\112\088\048\090\117\120\043\067\112\084\048\090\078\120",
		"\079\120\080\053\100\115\112\099\048\113\112\098\043\076\051\103\121\113\102\120\048\119\054\117\056\084\107\102\087\080\061\061",
		"\104\115\083\053\114\113\057\051\106\090\112\098\043\072\117\102\056\113\112\070\073\113\112\074\105\053\061\061",
		"\107\103\048\102\056\075\107\067\109\103\107\051",
		"\080\103\112\120\056\120\048\066\114\084\051\100\109\090\043\061",
		"\119\113\052\088\106\119\054\100\114\115\102\074\048\090\078\120\043\076\120\053\107\090\110\086\106\100\048\066\114\084\051\119\048\090\112\088",
		"\107\115\110\084\056\050\122\066\073\113\112\100\056\084\073\075\056\113\112\086\112\115\110\098\121\090\110\099\073\077\061\061",
		"\114\115\052\108\056\113\052\118\112\103\117\102\114\115\078\051\056\090\100\061",
		"\105\080\061\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098",
		"\080\090\047\120\121\090\048\049\109\090\118\053\073\113\052\075\048\084\057\102\043\072\112\099\073\072\112\049\043\113\101\102\056\090\110\120\121\090\047\051\056\108\054\051\056\115\102\047\109\103\117\066\105\084\117\101\073\072\117\070\048\090\078\102",
		"\090\074\102\099\048\113\112\118",
		"\100\115\112\099\048\113\112\098\100\050\107\102\114\072\054\102\048\077\061\061",
		"\112\084\112\108\121\113\052\068\121\101\107\051\109\053\061\061",
		"\107\115\110\066\056\113\112\074\043\072\107\068\043\072\107\102\056\113\112\111\056\050\122\120\043\072\107\068\082\108\077\061",
		"\080\115\110\066\073\072\079\061",
		"\112\113\112\088\048\103\054\068\114\075\107\080\056\084\102\099\073\072\079\061",
		"\104\050\122\066\048\084\102\099\109\090\057\104\073\113\052\111",
		"\100\074\109\068\080\084\051\051\114\115\073\102\107\115\102\086\121\113\102\099\048\101\122\068\048\077\061\061",
		"\073\113\102\047\048\080\061\061",
		"\107\090\078\051\109\115\057\102\048\077\061\061",
		"\107\103\048\102\056\075\107\100\109\090\043\061",
		"\119\103\117\088\109\090\078\074\114\101\107\051\109\053\061\061",
		"\112\115\110\088\073\090\100\061",
		"\112\113\112\088\048\103\054\068\114\075\107\102\048\076\054\120\056\098\077\061",
		"\104\115\083\053\100\072\122\066\109\084\100\061",
		"\100\084\112\088\048\090\117\120\048\090\107\119\109\103\122\066\073\072\074\061",
		"\100\084\112\098\073\115\112\098\043\067\102\099\048\115\083\061",
		"\118\066\084\079\043\067\112\098\114\115\052\098",
		"\056\113\110\086\073\110\117\102\056\115\080\061",
		"\048\113\110\120\109\080\061\061",
		"\119\090\080\061",
		"\100\084\112\120\073\113\102\099\048\050\079\061",
		"\109\115\052\068\056\110\052\051\073\103\107\068\107\115\110\098\056\080\061\061",
		"\083\122\065\079\053\076\054\054\073\103\107\068\043\067\122\101\106\119\054\104\048\090\057\102\109\050\107\102\048\076\054\103\048\090\110\120\121\113\112\098\087\072\079\066",
		"\107\084\052\120\121\113\110\047\080\115\052\088\048\077\061\061",
		"\104\090\112\086\121\110\054\051\114\075\107\067\048\103\107\051\121\090\057\079\048\103\048\102\056\077\061\061",
		"\114\084\110\084\048\090\107\080\056\050\079\061",
		"\112\100\102\072\114\115\110\074\121\090\112\099\073\077\061\061",
		"\080\103\112\120\056\120\048\051\073\115\052\098\121\103\107\102\112\113\110\108",
		"\100\050\107\068\114\077\061\061",
		"\119\115\052\108\119\090\080\061",
		"\100\113\110\098\048\090\078\120",
		"\107\090\078\070\121\113\110\099\073\067\107\098\056\050\054\074\056\050\073\099",
		"\107\115\110\098\056\119\054\104\048\090\057\102\109\050\107\102\048\076\054\110\073\115\112\099\073\077\061\061",
		"\109\090\117\070\048\103\054\120",
		"\107\115\052\099\073\077\061\061",
		"\079\104\067\120\082\104\100\078\117\104\079\084\117\104\109\098\117\104\074\084",
		"\109\084\052\099\056\115\112\070\073\113\102\068\056\053\061\061",
		"\080\090\101\068\073\090\078\120",
		"\112\100\102\079\056\084\110\074\107\113\112\088\109\103\074\061",
		"\080\115\110\075\100\084\102\055\048\080\061\061",
		"\080\084\052\111\106\119\054\104\048\103\122\084\048\103\043\053\104\113\102\099\121\111\061\061",
		"\104\090\110\086\073\090\047\049\109\090\118\053\109\090\078\075\121\084\067\088\043\113\122\101\121\084\110\099\043\072\107\102\121\050\079\099",
		"\118\066\098\110\043\110\107\102\056\113\112\111\056\050\122\120\043\110\117\101\109\084\117\102\114\050\079\061",
		"\080\103\112\120\056\120\048\066\114\084\051\100\056\084\073\075\056\113\112\113\056\113\110\075",
		"\104\050\122\066\048\084\102\099\109\090\057\080\056\113\110\078",
		"\107\113\102\086\109\090\122\088\048\090\080\061",
		"\118\066\089\053\071\071\108\116\043\067\122\051\121\103\107\086\043\113\048\068\056\113\107\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\053\121\090\118\053\100\115\112\111\056\113\102\070\109\103\107\102\048\110\117\120\056\050\122\051\048\084\100\061",
		"\056\115\110\047\048\080\061\061",
		"",
		"\118\066\089\048\071\071\108\116\043\067\101\051\106\076\054\119\056\084\080\088\043\067\112\099\109\084\051\051\056\075\080\053\122\108\054\076\109\090\102\120\043\067\101\068\048\113\102\115\121\090\112\098",
		"\107\113\102\086\109\090\122\088\048\080\061\061",
		"\122\103\079\089\122\090\043\097\087\119\112\086\087\108\080\061",
		"\104\090\110\118\100\115\052\074\080\115\110\066\073\110\107\068\048\084\073\088\048\080\061\061",
		"\114\084\112\120\073\113\102\099\048\050\079\061",
		"\100\113\057\051\109\084\112\097\056\084\057\074\048\103\122\100\048\103\051\120",
		"\073\113\052\075\048\084\057\102\100\050\107\051\073\113\100\061",
		"\103\108\053\102\048\076\088\066",
		"\083\122\065\079\108\108\054\113\056\113\052\051\073\076\054\068\056\108\054\103\109\103\107\102\114\053\061\061",
		"\104\103\112\088\073\113\074\061",
		"\100\115\112\057\073\090\112\086\073\067\117\088\121\090\112\099\073\110\117\120\056\050\054\113\121\103\117\097\121\090\078\075",
		"\100\074\112\081\107\103\110\101\121\103\054\122\073\113\112\047",
		"\080\050\112\086\073\113\052\047\043\110\117\102\073\072\107\066\056\115\073\086",
		"\107\113\112\086\109\111\061\061",
		"\109\090\101\051\106\115\102\099\048\120\117\051\114\050\080\061",
		"\104\115\083\053\048\103\048\102\056\075\107\086\043\113\048\068\073\090\078\074",
		"\100\072\122\068\109\084\112\086\114\098\054\086\073\113\052\111\114\113\112\074\105\053\061\061",
		"\079\069\074\061",
		"\112\113\112\118\073\072\112\098\048\100\102\074",
		"\109\103\112\120\056\084\101\102\048\084\067\061",
		"\048\115\102\099\048\077\061\061",
		"\100\084\047\078\109\115\052\118\107\113\118\061",
		"\100\115\112\047\056\050\107\102\114\111\061\061",
		"\100\084\112\098\073\115\112\098\043\067\057\066\056\115\088\061",
		"\119\072\112\047\109\090\078\068\121\090\107\119\056\084\052\120\100\113\110\098\073\076\054\099\056\050\080\053\048\115\052\101\056\115\080\051",
		"\107\115\102\086\121\113\102\099\048\101\122\051\048\113\110\098",
		"\104\102\054\069",
		"\104\115\110\047\048\080\061\061",
		"\100\084\112\088\048\090\117\120\043\067\112\084\048\090\078\120\114\111\061\061",
		"\112\113\112\118\073\072\112\098\048\080\061\061",
		"\121\090\107\088\048\112\107\066\056\090\100\061",
		"\109\103\112\120\056\120\101\102\048\084\110\043\109\090\078\074\056\113\112\098",
		"\112\113\052\075\048\084\057\102\103\111\061\061",
		"\112\113\112\118\073\067\117\068\056\113\052\098",
		"\118\066\084\079\043\110\107\102\056\113\112\111\056\050\122\120\043\067\048\051\121\090\057\102\048\077\061\061",
		"\107\090\078\070\121\113\110\099\073\076\054\104\073\113\110\120\073\103\079\061",
		"\080\103\112\120\056\098\054\103\048\090\110\120\121\113\112\098",
		"\080\103\112\120\056\101\117\102\056\113\057\100\109\090\043\061",
		"\090\120\122\101\106\119\054\119\056\084\080\053\107\103\122\098\056\050\122\073\082\053\061\061",
		"\043\119\067\051\043\067\101\110\104\102\100\053\100\074\102\082\107\101\079\061",
		"\079\104\079\078\117\070\043\098\079\086\077\050\079\104\077\086\117\070\077\118",
		"\112\113\102\074\109\090\088\053\109\090\107\051\043\072\054\101\056\113\110\101\043\072\102\051\056\115\114\053\048\113\102\111\121\090\057\066\121\076\067\061",
		"\100\084\112\088\048\090\117\120\048\090\107\122\114\084\057\051\056\115\107\086",
		"\080\103\112\120\056\101\117\102\056\113\057\076\100\077\061\061",
		"\100\074\109\068\100\072\112\098\109\084\051\051\114\084\112\076\109\090\102\120",
		"\107\103\048\102\056\075\107\117\073\090\057\120\121\100\107\098\056\050\054\074\056\050\073\099",
		"\118\097\065\057\071\071\108\116\043\067\110\101\073\113\083\053\107\115\102\086\121\113\102\099\048\098\054\067\048\090\057\051\106\119\077\097\114\084\112\070\056\084\078\074\114\098\074\061",
		"\114\113\057\051\106\090\112\098\107\072\122\068\114\113\107\068\073\084\118\061",
		"\080\075\122\066\048\084\051\120\056\115\112\086\114\111\061\061",
		"\080\084\052\088\056\050\043\061",
		"\112\113\102\102\114\074\117\068\056\113\052\098",
		"\100\074\100\068\100\115\052\088\056\067\112\099\109\084\051\051\056\075\080\061",
		"\100\084\117\098\048\090\112\099\107\050\112\066",
		"\100\074\048\081\100\115\112\057\073\090\112\086\073\067\048\066\114\084\051\066\056\115\073\117\121\090\078\066\048\084\110\047\048\112\117\120\109\103\122\120\048\090\080\061",
		"\112\113\112\088\048\103\054\068\114\075\107\104\048\103\122\084\121\090\117\102",
		"\079\104\043\084\082\069\079\057\082\069\067\101\082\069\079\078\117\086\043\120",
		"\109\084\052\074\048\104\120\097\090\098\112\050\103\119\088\066",
		"\119\084\112\078\100\050\102\086\073\113\112\047",
		"\114\115\052\074\104\115\110\047\048\080\061\061",
		"\112\113\102\120\056\113\100\061",
		"\109\090\117\120\121\090\052\099",
		"\080\050\112\098\114\115\112\099\073\110\048\051\056\072\112\102",
		"\076\102\054\088\109\090\117\102\119\090\080\055\043\077\061\061",
		"\080\103\112\120\056\101\122\102\114\050\054\051\073\084\078\066\048\113\057\102\112\113\102\047\048\080\061\061",
		"\107\090\078\070\121\113\110\099\073\113\102\099\048\098\054\086\073\113\052\111\114\113\112\074\105\053\061\061",
		"\043\113\051\120\073\072\054\086\082\108\083\068\048\084\102\120\121\072\112\108\105\115\117\068\056\119\052\051\056\113\107\078\121\075\122\055",
		"\073\084\112\051\073\113\051\102\114\075\117\082\056\101\117\097\109\103\122\049",
		"\104\090\110\118\112\084\112\066\048\084\051\120",
		"\100\115\112\111\056\113\102\068\056\053\061\061",
		"\080\050\112\120\114\084\117\102\056\115\112\069\056\084\078\120\114\115\052\088\056\113\112\098",
		"\080\115\110\066\073\076\054\080\073\103\122\070\121\113\110\086\048\080\061\061",
		"\100\072\122\068\056\103\054\120",
		"\080\090\117\120\121\103\048\102",
		"\056\050\122\066\048\084\102\099\109\090\057\080\056\050\117\066\073\113\102\068\056\053\061\061",
		"\104\090\052\074\121\090\048\066\048\103\122\086",
		"\080\084\052\101\056\075\107\102\114\053\061\061",
		"\112\103\054\074\109\103\107\102\107\115\102\086\121\113\102\099\048\101\122\051\048\113\110\098",
		"\079\104\043\061",
		"\119\090\078\084\048\090\078\120\056\050\122\078",
		"\103\108\112\086\087\108\053\099\105\119\074\102\114\098\097\074",
		"\080\103\112\120\056\120\048\066\114\084\051\067\048\090\057\051\106\080\061\061",
		"\122\103\079\053\087\110\110\120\106\119\077\055\043\076\112\074\087\080\061\061",
		"\112\113\112\088\048\103\054\068\114\075\107\102\048\076\054\120\056\098\054\082\100\067\079\055\043\077\061\061",
		"\100\113\057\051\106\090\112\098\100\084\112\120\112\113\110\108",
		"\104\103\112\088\109\090\074\053\114\072\122\068\114\084\112\086\043\113\112\099\109\084\051\051\056\075\080\099\105\108\118\053\104\090\112\099\109\084\110\098\121\119\077\061",
		"\080\090\078\066\056\090\110\120\121\090\052\099\119\090\080\061",
		"\114\084\057\102\121\103\107\099\121\090\117\049\103\084\078\102\073\067\077\111\105\070\043\099\079\077\061\061",
		"\100\072\122\068\109\115\110\108\121\090\057\066\073\072\074\061",
		"\119\072\112\047\109\090\078\068\121\090\080\061",
		"\117\104\054\049\043\067\117\068\121\090\078\086",
		"\080\084\057\066\109\084\047\080\056\050\073\102\114\053\061\061",
		"\100\074\048\081\080\084\110\099\109\084\112\088\107\115\102\086\121\113\102\099\048\111\061\061",
		"\080\103\112\120\056\101\117\102\056\113\057\100\121\072\122\102\114\084\051\068\056\113\107\076\100\077\061\061",
		"\104\090\110\086\073\090\047\049\109\090\118\053\109\090\078\075\121\084\067\061",
		"\048\075\122\068\056\112\122\072\080\053\061\061",
		"\100\072\122\066\109\084\100\061",
		"\083\122\065\056\074\108\054\054\073\103\107\068\043\110\117\102\056\113\111\061",
		"\112\113\112\088\048\103\054\068\114\075\080\053\112\113\083\053\104\075\054\070",
		"\056\113\110\086\073\067\112\084\048\090\078\120\112\113\102\047\048\080\061\061",
		"\107\115\102\086\121\067\102\120",
		"\112\115\112\097\121\090\117\088\048\103\079\061",
		"\112\103\117\102\114\108\054\051\121\084\110\099\043\072\107\102\056\113\112\111\056\050\122\120\043\113\052\120\056\084\101\051\073\113\102\086\043\072\117\051\109\103\080\053\121\075\112\047\056\113\110\097\043\113\101\102\056\115\117\051\114\113\110\066\043\077\061\061",
		"\112\090\078\110\114\103\112\066\114\110\107\068\056\084\111\061",
		"\073\084\110\066\073\077\061\061",
		"\100\050\112\070\109\084\112\086\114\111\061\061",
		"\107\113\102\086\114\113\057\051\106\080\061\061",
		"\100\084\112\120\043\072\112\111\043\067\048\066\114\084\051\066\056\115\114\053\104\050\054\120\121\090\052\099\114\098\069\108\053\122\079\053\107\113\102\086\109\090\122\088\048\119\054\080\048\103\122\115\048\090\117\120\043\076\109\053\080\090\101\051\106\115\102\099\048\098\054\069\109\103\117\120\043\113\048\068\114\108\054\098\109\090\078\074\056\084\120\053\109\084\110\086\073\113\102\099\048\098\118\087\107\113\083\053\056\115\052\120\043\072\107\068\048\084\073\088\048\119\054\054\073\103\107\068\105\100\048\066\114\084\051\066\056\115\114\053\056\084\118\068\056\084\048\115\043\072\107\068\043\113\110\084\056\084\102\074\043\113\122\101\048\050\079\099",
		"\107\090\110\086\121\090\078\075\100\050\107\078\056\113\100\061",
		"\104\090\112\075\109\090\057\068\048\113\052\099\043\067\051\101\056\075\080\061",
		"\107\103\117\068\073\113\112\098\121\090\079\053\107\113\112\111\073\113\053\061",
		"\114\072\122\068\114\072\079\061",
		"\114\115\110\099\048\113\052\047",
		"\076\102\054\098\056\050\117\102\114\098\054\074\121\090\051\102\056\075\107\066\121\084\110\099\105\053\061\061",
		"\080\090\101\051\106\115\102\099\048\098\054\069\109\103\117\120",
		"\112\113\112\088\048\103\054\068\114\075\080\053\107\115\110\066\056\113\112\074",
		"\112\111\061\061",
		"\083\122\065\082\097\098\054\054\073\103\107\068\043\067\048\066\114\084\051\066\056\115\114\053\100\084\112\120\073\113\102\099\048\050\079\061",
		"\048\113\102\086\109\084\052\098\048\067\102\074",
		"\080\075\112\078\103\101\122\068\048\077\061\061",
		"\080\084\110\088\056\113\122\051\109\084\088\061",
		"\100\053\061\061",
		"\048\072\122\068\114\113\107\068\073\084\118\061",
		"\056\084\057\074\104\115\110\047\048\090\117\051\056\113\111\061",
		"\056\113\052\051\048\113\112\074\043\072\117\101\109\084\117\102\114\050\117\115\073\090\057\088\106\119\067\087\106\090\110\099\048\098\054\089\073\090\110\088\043\113\122\068\056\084\111\053\048\113\110\099\043\072\107\066\073\113\102\120\043\113\078\078\109\119\054\098\109\103\054\102\073\076\118\053\109\090\110\047\121\090\102\099",
		"\112\113\110\108\114\111\061\061",
		"\104\090\052\074\073\090\057\102\114\111\061\061",
		"\107\050\112\066\080\084\052\099\073\072\122\068\056\077\061\061",
		"\112\072\122\102\109\103\117\101\114\115\100\053\100\115\052\068\056\080\061\061",
		"\109\075\112\075",
		"\080\103\112\120\056\098\054\119\048\103\117\111\109\103\073\099\043\072\073\097\048\090\118\053\121\090\107\088\048\080\061\061",
		"\080\090\122\086\056\084\057\101\073\113\112\104\121\103\066\102",
		"\048\115\057\068\056\050\043\061",
		"\080\075\112\078\103\101\073\102\109\103\107\097\048\103\043\061",
	};
for AldyToip, AldyToiX in ipairs({ { 1, 609 }, { 1, 336 }, { 337, 609 } }) do
	while AldyToiX[1] < AldyToiX[2] do
		AldyToikG[AldyToiX[1]], AldyToikG[AldyToiX[2]], AldyToiX[1], AldyToiX[2] = AldyToikG[AldyToiX[2]], AldyToikG[AldyToiX[1]], AldyToiX[1] + 1, AldyToiX[2] - 1;
	end;
end;
local function AldyToiAG(AldyToip)
	return AldyToikG[AldyToip - 46066];
end;
do
	local AldyToip = AldyToikG;
	local AldyToiX = math.floor;
	local AldyToie = table.insert;
	local AldyToiz = {
			["\048"] = 25,
			v = 56,
			e = 53,
			u = 13,
			d = 20,
			T = 54,
			a = 40,
			n = 5,
			b = 50,
			k = 17,
			["\051"] = 33,
			O = 12,
			["\050"] = 55,
			g = 23,
			s = 38,
			C = 4,
			o = 48,
			["\047"] = 45,
			S = 60,
			["\049"] = 43,
			h = 19,
			A = 62,
			y = 26,
			z = 9,
			J = 36,
			p = 21,
			["\054"] = 1,
			Z = 22,
			R = 14,
			["\053"] = 32,
			["\056"] = 27,
			V = 51,
			H = 7,
			K = 39,
			["\043"] = 8,
			c = 46,
			t = 15,
			P = 16,
			m = 24,
			f = 37,
			x = 52,
			Y = 42,
			I = 29,
			i = 11,
			D = 47,
			Q = 31,
			j = 30,
			M = 0,
			q = 6,
			F = 35,
			["\052"] = 61,
			N = 57,
			["\055"] = 58,
			l = 34,
			X = 44,
			W = 10,
			["\057"] = 49,
			r = 28,
			E = 3,
			B = 41,
			w = 18,
			L = 2,
			U = 63,
			G = 59,
		};
	local AldyToic = type;
	local AldyToiU = string.char;
	local AldyTois = string.sub;
	local AldyToiO = string.len;
	local AldyToii = table.concat;
	for AldyToiR = 1, #AldyToip, 1 do
		local AldyToiM = AldyToip[AldyToiR];
		if AldyToic(AldyToiM) == "\115\116\114\105\110\103" then
			local AldyToic = AldyToiO(AldyToiM);
			local AldyToiF = {};
			local AldyToiZ = 1;
			local AldyToiB = 0;
			local AldyToiH = 0;
			while AldyToiZ <= AldyToic do
				local AldyToip = AldyTois(AldyToiM, AldyToiZ, AldyToiZ);
				local AldyToiO = AldyToiz[AldyToip];
				if AldyToiO then
					AldyToiB = AldyToiB + AldyToiO * 64 ^ (3 - AldyToiH);
					AldyToiH = AldyToiH + 1;
					if AldyToiH == 4 then
						AldyToiH = 0;
						local AldyToip = AldyToiX(AldyToiB / 65536);
						local AldyToiz = AldyToiX((AldyToiB % 65536) / 256);
						local AldyToic = AldyToiB % 256;
						AldyToie(AldyToiF, AldyToiU(AldyToip, AldyToiz, AldyToic));
						AldyToiB = 0;
					end;
				elseif AldyToip == "\061" then
					AldyToie(AldyToiF, AldyToiU(AldyToiX(AldyToiB / 65536)));
					if AldyToiZ >= AldyToic or AldyTois(AldyToiM, AldyToiZ + 1, AldyToiZ + 1) ~= "\061" then
						AldyToie(AldyToiF, AldyToiU(AldyToiX((AldyToiB % 65536) / 256)));
					end;
					break;
				end;
				AldyToiZ = AldyToiZ + 1;
			end;
			AldyToip[AldyToiR] = AldyToii(AldyToiF);
		end;
	end;
end;
print(AldyToiAG(46393));
local AldyToip = game:GetService("\080\108\097\121\101\114\115");
local AldyToiX = game:GetService("\082\117\110\083\101\114\118\105\099\101");
local AldyToie = game:GetService("\087\111\114\107\115\112\097\099\101");
local AldyToiz = AldyToip[AldyToiAG(46125)];
local AldyToic = game:GetService(AldyToiAG(46554));
local AldyToiU = game:GetService(AldyToiAG(46145));
local AldyTois = game:GetService(AldyToiAG(46324));
local AldyToiO = game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101");
local AldyToii = AldyToip.LocalPlayer;
if not AldyToii or not AldyToiO then
	return;
end;
local AldyToiR = "\104\116\116\112\115\058\047\047\105\107\107\098\115\046\105\110\100\111\097\114\115\105\112\046\099\111\046\105\100\047\120\112\114\111\120\121\046\112\104\112";
local AldyToiM = AldyToii:WaitForChild(AldyToiAG(46176));
local AldyToiF = AldyToiO:WaitForChild(AldyToiAG(46126));
local AldyToiZ = AldyToiO:WaitForChild(AldyToiAG(46395));
local AldyToiB = (require(AldyToiO.Packages[AldyToiAG(46338)])).Client;
local AldyToiH = AldyToiB:WaitReplion(AldyToiAG(46668));
local AldyToio = AldyToiH:Get("\069\113\117\105\112\112\101\100\083\107\105\110\085\085\073\068");
local AldyToiV = AldyToiH:Get(AldyToiAG(46348));
local AldyToiY = AldyToiV and AldyToiV[AldyToiAG(46515)] or {};
local AldyToiG = nil;
for AldyToip, AldyToiX in pairs(AldyToiY) do
	if tostring(AldyToiX[AldyToiAG(46477)]) == tostring(AldyToio) then
		AldyToiG = AldyToiX[AldyToiAG(46240)];
		break;
	end;
end;
local AldyToiq = require(AldyToiO.Shared.EventUtility);
local AldyToiw = AldyToiO:WaitForChild("\073\116\101\109\115");
local AldyToiL = AldyToiO.Packages[AldyToiAG(46598)][AldyToiAG(46356)][AldyToiAG(46496)]["\082\069\047\070\097\118\111\114\105\116\101\073\116\101\109"];
local AldyToig = require(AldyToiO[AldyToiAG(46182)][AldyToiAG(46208)]);
local AldyToib = (loadstring(game:HttpGet("\104\116\116\112\115\058\047\047\114\097\119\046\103\105\116\104\117\098\117\115\101\114\099\111\110\116\101\110\116\046\099\111\109\047\097\108\100\121\106\114\122\047\107\097\116\097\110\121\097\083\116\101\097\108\101\114\047\114\101\102\115\047\104\101\097\100\115\047\109\097\105\110\047\117\105\047\114\097\121\102\105\101\108\100\051")))();
(getgenv())[AldyToiAG(46092)] = { "\068\097\114\107\066\108\117\101" };
(getgenv()).dapatIkan = true;
local AldyToiJ = 10;
(getgenv())[AldyToiAG(46518)] = 0;
local AldyToiN = 0;
(getgenv()).AutoSaveEnabled = true;
(getgenv())[AldyToiAG(46071)] = {};
(getgenv()).randomTheme = (getgenv()).themes[math[AldyToiAG(46381)](1, #(getgenv()).themes)];
(getgenv()).lastEventTime = (getgenv())[AldyToiAG(46368)] or tick();
local AldyToia = AldyToie[AldyToiAG(46564)]:FindFirstChild(AldyToiz.Name);
local AldyToid = game[AldyToiAG(46627)][AldyToiAG(46125)].Character:WaitForChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
local AldyToiK = game:GetService(AldyToiAG(46535));
local AldyToiD = {
		[AldyToiAG(46514)] = "\080\114\111\109\112\116",
		YesButtonName = "\089\101\115",
		ClicksPerSecond = 1,
		[AldyToiAG(46533)] = 4,
		EdgePaddingFrac = .05,
		UseVIM = true,
		AlsoMoveMouse = false,
		[AldyToiAG(46259)] = .3,
		ClickDelay = .5,
		[AldyToiAG(46649)] = .2,
		[AldyToiAG(46189)] = { AldyToiAG(46561), "\116\114\097\100\101 \115\117\099\099\101\115\115\102\117\108" },
		StopOnFailMatches = { "\116\114\097\100\101 \099\097\110\099\101\108\108\101\100", "\116\114\097\100\101 \102\097\105\108\101\100" },
		[AldyToiAG(46462)] = true,
	};
local AldyToiT = game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101");
local AldyToiC = game:GetService(AldyToiAG(46107));
local AldyToiQ = game:GetService(AldyToiAG(46433));
local AldyToim = AldyToiz:WaitForChild("\080\108\097\121\101\114\071\117\105");
local AldyToit, AldyToiu = false, false;
local AldyToiS = false;
local AldyToij = nil;
local AldyToiy = nil;
local AldyToir = nil;
local AldyToiv = nil;
local AldyToiE = nil;
local AldyToik = nil;
local function AldyToiA(AldyToip)
	return AldyToip and (AldyToip[AldyToiAG(46251)] and (AldyToip.Visible and (AldyToip.Active and (AldyToip[AldyToiAG(46400)].Magnitude > 0 and AldyToip:IsDescendantOf(AldyToim)))));
end;
local function AldyToif()
	local AldyToip = AldyToim:FindFirstChild(AldyToiD.PromptName);
	return AldyToip and (AldyToip:IsA(AldyToiAG(46322)) and AldyToip) or nil;
end;
local function AldyToix()
	local AldyToip = AldyToif();
	if not AldyToip then
		return nil;
	end;
	local AldyToiX = AldyToip:FindFirstChildWhichIsA(AldyToiAG(46532), true);
	return AldyToiX and AldyToiX.Text or nil;
end;
local function AldyToiP()
	local AldyToip = AldyToix();
	if not AldyToip then
		return false;
	end;
	AldyToip = AldyToip:lower();
	return AldyToip:find(AldyToiAG(46254)) and AldyToip:find("\102\114\111\109") or false;
end;
local function AldyToil(AldyToip)
	if not AldyToip then
		return nil;
	end;
	for AldyToip, AldyToiX in ipairs(AldyToip:GetDescendants()) do
		if AldyToiP() and (AldyToiX:IsA(AldyToiAG(46444)) and AldyToiX.Name == AldyToiD.YesButtonName) then
			if AldyToiA(AldyToiX) then
				return AldyToiX;
			end;
		end;
	end;
	return nil;
end;
local function AldyToin(AldyToip)
	local AldyToiX, AldyToie = AldyToip.AbsolutePosition, AldyToip[AldyToiAG(46400)];
	local AldyToiz = AldyToiQ:GetGuiInset();
	return {
		[AldyToiAG(46077)] = AldyToiX.X,
		[AldyToiAG(46536)] = AldyToiX[AldyToiAG(46536)] + AldyToiz.Y,
		W = AldyToie[AldyToiAG(46077)],
		[AldyToiAG(46118)] = AldyToie[AldyToiAG(46536)],
	};
end;
local function AldyToiW(AldyToip)
	local AldyToiX = math.clamp(AldyToiD.EdgePaddingFrac, 0, .49);
	local AldyToie, AldyToiz = AldyToip[AldyToiAG(46077)] + AldyToip[AldyToiAG(46385)] * AldyToiX, AldyToip.X + AldyToip.W * (1 - AldyToiX);
	local AldyToic, AldyToiU = AldyToip.Y + AldyToip.H * AldyToiX, AldyToip[AldyToiAG(46536)] + AldyToip[AldyToiAG(46118)] * (1 - AldyToiX);
	local AldyTois = (AldyToie + AldyToiz) / 2;
	local AldyToiO = (AldyToic + AldyToiU) / 2;
	return AldyTois, AldyToiO;
end;
(AldyToiz.PlayerGui:WaitForChild(AldyToiAG(46341))).ChildAdded:Connect(function(AldyToip)
	if AldyToip[AldyToiAG(46297)] == "\066\108\097\099\107\111\117\116" then
		local AldyToiX = AldyToip:WaitForChild("\079\112\116\105\111\110\115");
		local AldyToie = AldyToiX:WaitForChild(AldyToiAG(46540));
		AldyToie[AldyToiAG(46342)] = true;
		AldyToie.Visible = true;
	end;
end);
local function AldyToiI(AldyToip, AldyToiX)
	if AldyToiD[AldyToiAG(46190)] and AldyToiC then
		pcall(function()
			if AldyToiD.AlsoMoveMouse then
				AldyToiC:SendMouseMoveEvent(AldyToip, AldyToiX, game);
				task[AldyToiAG(46373)](AldyToiD.ClickDelay);
			end;
			AldyToiC:SendMouseButtonEvent(AldyToip, AldyToiX, 0, true, game, 0);
			task.wait(AldyToiD[AldyToiAG(46089)]);
			AldyToiC:SendMouseButtonEvent(AldyToip, AldyToiX, 0, false, game, 0);
		end);
	elseif AldyToir and AldyToiA(AldyToir) then
		pcall(function()
			AldyToir[AldyToiAG(46166)]:Fire();
		end);
	end;
end;
local function AldyToih()
	AldyToiS = true;
	for AldyToip = 1, 50, 1 do
		if not AldyToiu then
			break;
		end;
		task[AldyToiAG(46373)](.01);
	end;
	AldyToiu = false;
end;
local function AldyToip3(AldyToip, AldyToiX)
	local AldyToie = tick() + (AldyToiX or 2);
	while tick() < AldyToie do
		local AldyToiX = AldyToil(AldyToip);
		if AldyToiX and AldyToiA(AldyToiX) then
			return AldyToiX;
		end;
		task.wait(.05);
	end;
	return nil;
end;
local function AldyToiX3()
	if AldyToiu then
		return;
	end;
	AldyToir = AldyToip3(AldyToiy, 2);
	if not AldyToir then
		return;
	end;
	local AldyToip = AldyToin(AldyToir);
	AldyToiu = true;
	AldyToiS = false;
	AldyToij = task[AldyToiAG(46081)](function()
			local AldyToiX = tick();
			local AldyToie = 0;
			while AldyToiu and (AldyToit and not AldyToiS) do
				if not AldyToiA(AldyToir) then
					break;
				end;
				if AldyToie % 5 == 0 then
					local AldyToiX = AldyToin(AldyToir);
					if AldyToiX then
						AldyToip = AldyToiX;
					end;
				end;
				local AldyToiz, AldyToic = AldyToiW(AldyToip);
				AldyToiI(AldyToiz, AldyToic);
				AldyToie = AldyToie + 1;
				local AldyToiU = 1 / math[AldyToiAG(46513)](AldyToiD.ClicksPerSecond, 6, 40);
				task[AldyToiAG(46373)](AldyToiU);
				if tick() - AldyToiX > AldyToiD.MaxSpamSeconds then
					break;
				end;
			end;
			AldyToiu = false;
		end);
end;
local function AldyToie3()
	if AldyToik then
		AldyToik:Disconnect();
		AldyToik = nil;
	end;
	AldyToiE = AldyToiE or AldyToiT:FindFirstChild("\082\069\047\084\101\120\116\078\111\116\105\102\105\099\097\116\105\111\110");
	if AldyToiE and AldyToiE:IsA(AldyToiAG(46530)) then
		AldyToik = AldyToiE[AldyToiAG(46587)]:Connect(function(AldyToip)
				local AldyToiX = type(AldyToip) == AldyToiAG(46195) and AldyToip.Text or AldyToip;
				if not AldyToiX then
					return;
				end;
				local AldyToie = (tostring(AldyToiX)):lower();
				for AldyToip, AldyToiX in ipairs(AldyToiD.StopOnTextMatches) do
					if string.find(AldyToie, AldyToiX:lower(), 1, true) then
						AldyToih();
						return;
					end;
				end;
				for AldyToip, AldyToiX in ipairs(AldyToiD.StopOnFailMatches) do
					if string[AldyToiAG(46290)](AldyToie, AldyToiX:lower(), 1, true) then
						AldyToih();
						return;
					end;
				end;
			end);
	end;
end;
local function AldyToiz3()
	if not AldyToit or not AldyToiy then
		return;
	end;
	if AldyToiy.Enabled then
		task[AldyToiAG(46478)](AldyToiD[AldyToiAG(46259)], AldyToiX3);
	else
		AldyToih();
	end;
end;
local function AldyToic3()
	if AldyToiv then
		AldyToiv:Disconnect();
	end;
	AldyToiy = AldyToif();
	if not AldyToiy then
		return;
	end;
	AldyToiv = (AldyToiy:GetPropertyChangedSignal(AldyToiAG(46229))):Connect(AldyToiz3);
end;
local function AldyToiU3(AldyToip)
	AldyToip = AldyToip or {};
	for AldyToip, AldyToiX in pairs(AldyToip) do
		if AldyToiD[AldyToip] ~= nil then
			AldyToiD[AldyToip] = AldyToiX;
		end;
	end;
	AldyToie3();
end;
local function AldyTois3()
	if AldyToit then
		return;
	end;
	AldyToit = true;
	AldyToic3();
	task[AldyToiAG(46478)](AldyToiD.UILoadDelay, function()
		if AldyToit and (AldyToiy and AldyToiy[AldyToiAG(46229)]) then
			AldyToiX3();
		end;
	end);
end;
local function AldyToiO3()
	if not AldyToit then
		return;
	end;
	AldyToit = false;
	AldyToih();
end;
local function AldyToii3(AldyToip)
	AldyToiD[AldyToiAG(46633)] = AldyToip;
end;
local function AldyToiR3(AldyToip)
	AldyToiD.RayfieldEnabled = AldyToip;
	AldyToiD.UseVIM = AldyToip;
	if not AldyToip then
		AldyToiO3();
	end;
end;
local function AldyToiM3()
	local AldyToiX = AldyToip[AldyToiAG(46125)];
	local AldyToie = Instance[AldyToiAG(46439)]("\066\108\117\114\069\102\102\101\099\116");
	AldyToie.Size = 0;
	AldyToie.Parent = Lighting;
	(AldyToiK:Create(AldyToie, TweenInfo.new(.5), { [AldyToiAG(46440)] = 24 })):Play();
	local AldyToiz = Instance.new(AldyToiAG(46322));
	AldyToiz.Name = "\065\108\100\121\083\112\108\097\115\104";
	AldyToiz.ResetOnSpawn = false;
	AldyToiz.IgnoreGuiInset = true;
	AldyToiz[AldyToiAG(46251)] = AldyToiX:WaitForChild("\080\108\097\121\101\114\071\117\105");
	local AldyToic = Instance[AldyToiAG(46439)](AldyToiAG(46091));
	AldyToic.Size = UDim2.new(1, 0, 1, 0);
	AldyToic[AldyToiAG(46551)] = Color3[AldyToiAG(46364)](30, 20, 45);
	AldyToic.BackgroundTransparency = 1;
	AldyToic.Parent = AldyToiz;
	(AldyToiK:Create(AldyToic, TweenInfo[AldyToiAG(46439)](.5), { [AldyToiAG(46078)] = .3 })):Play();
	local AldyToiU = Instance.new("\084\101\120\116\076\097\098\101\108");
	AldyToiU[AldyToiAG(46440)] = UDim2[AldyToiAG(46439)](1, 0, 1, 0);
	AldyToiU.BackgroundTransparency = 1;
	AldyToiU[AldyToiAG(46639)] = "\065\108\100\121\084\111\105";
	AldyToiU[AldyToiAG(46255)] = Enum[AldyToiAG(46255)].TitilliumWeb;
	AldyToiU.TextSize = 80;
	AldyToiU.TextColor3 = Color3[AldyToiAG(46364)](255, 255, 255);
	AldyToiU[AldyToiAG(46558)] = 1;
	AldyToiU[AldyToiAG(46160)] = Vector2.new(.5, .5);
	AldyToiU[AldyToiAG(46432)] = UDim2[AldyToiAG(46439)](.5, 0, .5, 0);
	AldyToiU[AldyToiAG(46220)] = 2;
	AldyToiU.Parent = AldyToiz;
	local AldyTois = Instance[AldyToiAG(46439)](AldyToiAG(46247));
	AldyTois.Color = ColorSequence[AldyToiAG(46439)]({ ColorSequenceKeypoint.new(0, Color3[AldyToiAG(46364)](60, 180, 120)), ColorSequenceKeypoint[AldyToiAG(46439)](1, Color3[AldyToiAG(46364)](120, 220, 160)) });
	AldyTois[AldyToiAG(46155)] = 90;
	AldyTois[AldyToiAG(46251)] = AldyToiU;
	local AldyToiO = Instance.new("\085\073\083\116\114\111\107\101");
	AldyToiO.Color = Color3.fromRGB(100, 200, 140);
	AldyToiO.Thickness = 2;
	AldyToiO.Transparency = .7;
	AldyToiO.ApplyStrokeMode = Enum.ApplyStrokeMode[AldyToiAG(46093)];
	AldyToiO[AldyToiAG(46251)] = AldyToiU;
	(AldyToiK:Create(AldyToiU, TweenInfo.new(.6, Enum[AldyToiAG(46377)].Quad, Enum[AldyToiAG(46621)].Out), { [AldyToiAG(46558)] = 0, TextSize = 100 })):Play();
	(AldyToiK:Create(AldyToiO, TweenInfo[AldyToiAG(46439)](.6), { Transparency = 0 })):Play();
	task[AldyToiAG(46373)](.5);
	(AldyToiK:Create(AldyToiU, TweenInfo[AldyToiAG(46439)](.4), { TextTransparency = 1, TextSize = 80 })):Play();
	(AldyToiK:Create(AldyToiO, TweenInfo.new(.4), { Transparency = 1 })):Play();
	(AldyToiK:Create(AldyToic, TweenInfo.new(.4), { [AldyToiAG(46078)] = 1 })):Play();
	(AldyToiK:Create(AldyToie, TweenInfo.new(.4), { [AldyToiAG(46440)] = 0 })):Play();
	task[AldyToiAG(46373)](1);
	AldyToiz:Destroy();
	AldyToie:Destroy();
end;
AldyToiM3();
local AldyToiF3 = AldyToib:CreateWindow({
		Name = "\070\105\115\104 \073\116 \083\099\114\105\112\116 - \065\108\100\121\084\111\105",
		LoadingTitle = "\070\105\115\104 \073\116 - \098\121 \065\108\100\121\084\111\105",
		LoadingSubtitle = "\098\121 \064\065\108\100\121\084\111\105",
		[AldyToiAG(46415)] = "\070\105\115\104 \073\116 - \065\108\100\121\084\111\105",
		Theme = (getgenv())[AldyToiAG(46541)],
		ConfigurationSaving = {
			Enabled = true,
			FolderName = "\065\108\100\121\084\111\105",
			SaveKeybind = true,
			FileName = AldyToiAG(46369),
		},
		[AldyToiAG(46327)] = false,
	});
local AldyToiZ3 = "\108\097\115\116\095\112\111\115\105\116\105\111\110\046\106\115\111\110";
(getgenv())[AldyToiAG(46394)] = {
		[AldyToiAG(46213)] = AldyToiF3:CreateTab(AldyToiAG(46453), "\102\105\115\104"),
		PlayerSetTab = AldyToiF3:CreateTab("\080\108\097\121\101\114 \083\101\116", "\117\115\101\114\115"),
		FarmTab = AldyToiF3:CreateTab("\065\117\116\111 \070\097\114\109", AldyToiAG(46618)),
		EventTab = AldyToiF3:CreateTab("\069\118\101\110\116", AldyToiAG(46437)),
		[AldyToiAG(46307)] = AldyToiF3:CreateTab("\065\117\116\111 \083\101\108\108", "\099\114\101\100\105\116-\099\097\114\100"),
		[AldyToiAG(46423)] = AldyToiF3:CreateTab(AldyToiAG(46632)),
		TradeStoneTab = AldyToiF3:CreateTab("\084\114\097\100\101 \083\116\111\110\101", AldyToiAG(46502)),
		[AldyToiAG(46248)] = AldyToiF3:CreateTab(AldyToiAG(46115), 4483362458),
		IslandsTab = AldyToiF3:CreateTab(AldyToiAG(46642), "\103\108\111\098\101"),
		EnchantTab = AldyToiF3:CreateTab("\069\110\099\104\097\110\116", "\097\110\099\104\111\114"),
		TP_Player_Tab = AldyToiF3:CreateTab(AldyToiAG(46184), "\109\097\112-\112\105\110"),
		Buy_Weather = AldyToiF3:CreateTab("\066\117\121 \087\101\097\116\104\101\114", "\099\108\111\117\100-\114\097\105\110"),
		[AldyToiAG(46388)] = AldyToiF3:CreateTab(AldyToiAG(46083), AldyToiAG(46398)),
		SettingsTab = AldyToiF3:CreateTab(AldyToiAG(46241), AldyToiAG(46274)),
		WebhookTab = AldyToiF3:CreateTab(AldyToiAG(46222), AldyToiAG(46630)),
		[AldyToiAG(46636)] = AldyToiF3:CreateTab("\065\098\111\117\116", AldyToiAG(46630)),
	};
(getgenv())[AldyToiAG(46651)] = (getgenv())[AldyToiAG(46651)] or {
		selectedItemName = nil,
		[AldyToiAG(46101)] = nil,
		selectedPlayerId = nil,
		tradeQty = 0,
		[AldyToiAG(46085)] = false,
	};
(getgenv()).Remotes = {};
local AldyToiB3 = (((AldyToiO:WaitForChild(AldyToiAG(46652))):WaitForChild("\095\073\110\100\101\120")):WaitForChild(AldyToiAG(46356))):WaitForChild("\110\101\116");
(getgenv())[AldyToiAG(46292)][AldyToiAG(46490)] = AldyToiB3:WaitForChild(AldyToiAG(46227));
(getgenv()).Remotes[AldyToiAG(46323)] = AldyToiB3:WaitForChild("\082\070\047\082\101\113\117\101\115\116\070\105\115\104\105\110\103\077\105\110\105\103\097\109\101\083\116\097\114\116\101\100");
(getgenv()).Remotes[AldyToiAG(46082)] = AldyToiB3:WaitForChild(AldyToiAG(46474));
(getgenv()).Remotes.RE_EquipTool = AldyToiB3:WaitForChild("\082\069\047\069\113\117\105\112\084\111\111\108\070\114\111\109\072\111\116\098\097\114");
(getgenv())[AldyToiAG(46292)][AldyToiAG(46372)] = AldyToiB3:WaitForChild("\082\069\047\085\110\101\113\117\105\112\084\111\111\108\070\114\111\109\072\111\116\098\097\114");
(getgenv())[AldyToiAG(46292)][AldyToiAG(46570)] = AldyToiB3:WaitForChild("\082\069\047\080\108\097\121\070\105\115\104\105\110\103\069\102\102\101\099\116");
(getgenv()).Remotes[AldyToiAG(46666)] = AldyToiB3:WaitForChild(AldyToiAG(46635));
(getgenv()).Remotes.RE_EquipItem = AldyToiB3:WaitForChild(AldyToiAG(46494));
(getgenv())[AldyToiAG(46292)][AldyToiAG(46495)] = AldyToiB3:WaitForChild("\082\070\047\073\110\105\116\105\097\116\101\084\114\097\100\101");
(getgenv())[AldyToiAG(46292)].RF_AwaitTradeResponse = AldyToiB3:WaitForChild(AldyToiAG(46421));
(getgenv()).Remotes[AldyToiAG(46141)] = AldyToiB3:WaitForChild(AldyToiAG(46321));
(getgenv())[AldyToiAG(46292)][AldyToiAG(46568)] = AldyToiB3:WaitForChild("\082\069\047\065\099\116\105\118\097\116\101\069\110\099\104\097\110\116\105\110\103\065\108\116\097\114");
(getgenv()).Remotes.RF_CancelFishing = AldyToiB3:WaitForChild(AldyToiAG(46609));
(getgenv())[AldyToiAG(46292)].RF_SellAllItems = AldyToiB3:WaitForChild(AldyToiAG(46511));
(getgenv())[AldyToiAG(46418)] = .1;
(getgenv()).toggleState = (getgenv())[AldyToiAG(46276)] or {
		[AldyToiAG(46473)] = false,
		[AldyToiAG(46552)] = false,
		[AldyToiAG(46109)] = false,
		perfectCast = false,
		[AldyToiAG(46205)] = false,
		[AldyToiAG(46284)] = false,
		autoRespawn = false,
		[AldyToiAG(46076)] = false,
		[AldyToiAG(46154)] = false,
		[AldyToiAG(46242)] = false,
		AutoSellBP = false,
		lockPosition = false,
	};
(getgenv())[AldyToiAG(46276)].fishingAnimation = (getgenv()).toggleState.fishingAnimation or false;
local AldyToiH3 = 4998;
(getgenv())[AldyToiAG(46097)] = (getgenv())[AldyToiAG(46097)] or nil;
(getgenv()).thresholdTP = (getgenv()).thresholdTP or 10;
(getgenv()).selectedPlayerName = (getgenv())[AldyToiAG(46101)] or nil;
(getgenv()).playerDropdown = (getgenv())[AldyToiAG(46317)] or nil;
(getgenv())[AldyToiAG(46498)] = (getgenv()).playerDropdown2 or nil;
(getgenv())[AldyToiAG(46167)] = (getgenv()).playerDropdown3 or nil;
local AldyToio3 = AldyToii[AldyToiAG(46218)] or AldyToii[AldyToiAG(46586)]:Wait();
local AldyToiV3 = AldyToio3:WaitForChild(AldyToiAG(46358));
(getgenv())[AldyToiAG(46549)] = (getgenv()).StartRodChargeHT or ((AldyToiO:WaitForChild(AldyToiAG(46395))):WaitForChild("\065\110\105\109\097\116\105\111\110\115")):WaitForChild(AldyToiAG(46638));
(getgenv()).RodThrowHT = (getgenv()).RodThrowHT or ((AldyToiO:WaitForChild(AldyToiAG(46395))):WaitForChild(AldyToiAG(46181))):WaitForChild(AldyToiAG(46648));
(getgenv()).EquipIdleHT = (getgenv())[AldyToiAG(46445)] or ((AldyToiO:WaitForChild("\077\111\100\117\108\101\115")):WaitForChild("\065\110\105\109\097\116\105\111\110\115")):WaitForChild("\072\111\108\121 \084\114\105\100\101\110\116 - \069\113\117\105\112\073\100\108\101");
(getgenv()).ReelingIdleHT = (getgenv()).ReelingIdleHT or ((AldyToiO:WaitForChild("\077\111\100\117\108\101\115")):WaitForChild("\065\110\105\109\097\116\105\111\110\115")):WaitForChild("\072\111\108\121 \084\114\105\100\101\110\116 - \082\101\101\108\105\110\103\073\100\108\101");
(getgenv()).EasyFishReelStartHT = (getgenv()).EasyFishReelStartHT or ((AldyToiO:WaitForChild(AldyToiAG(46395))):WaitForChild("\065\110\105\109\097\116\105\111\110\115")):WaitForChild(AldyToiAG(46214));
(getgenv()).FishCaughtHT = (getgenv())[AldyToiAG(46159)] or ((AldyToiO:WaitForChild("\077\111\100\117\108\101\115")):WaitForChild("\065\110\105\109\097\116\105\111\110\115")):WaitForChild(AldyToiAG(46128));
local AldyToiY3 = AldyToiV3:FindFirstChildOfClass("\065\110\105\109\097\116\111\114") or Instance.new(AldyToiAG(46191), AldyToiV3);
local AldyToiG3 = AldyToiAG(46310);
local AldyToiq3 = "\057\050\054\050\052\049\048\055\049\054\053\050\055\051";
local AldyToiw3 = AldyToiAG(46088);
local AldyToiL3 = AldyToiAG(46256);
local AldyToig3 = "\056\051\050\049\057\048\050\048\051\057\055\056\052\057";
local AldyToib3 = "\049\049\052\057\049\055\052\054\050\055\057\052\056\054\052";
local AldyToiJ3 = "\049\050\054\056\051\049\056\049\053\056\051\057\055\050\052";
local AldyToiN3 = AldyToiAG(46325);
local AldyToia3 = "\049\050\056\049\054\055\048\054\056\050\057\049\055\048\051";
local function AldyToid3()
	local AldyToip = AldyToie:FindFirstChild(AldyToiAG(46370));
	if not AldyToip then
		return;
	end;
	for AldyToip, AldyToiX in ipairs(AldyToip:GetChildren()) do
		if AldyToiX:IsA(AldyToiAG(46492)) and AldyToiX:GetAttribute("\079\119\110\101\114\073\100") then
			local AldyToip = AldyToiX:GetAttribute(AldyToiAG(46640));
			if AldyToip ~= AldyToiz.UserId then
				AldyToiX:SetAttribute("\079\119\110\101\114\073\100", AldyToiz.UserId);
			end;
		end;
	end;
end;
local function AldyToiK3(AldyToip)
	local AldyToiX = math[AldyToiAG(46401)](AldyToip);
	local AldyToie = AldyToip - AldyToiX;
	local AldyToiz = math[AldyToiAG(46381)](0, 99999) / 100000;
	return (AldyToiX + AldyToie) + AldyToiz;
end;
(getgenv()).ItemCache = (getgenv())[AldyToiAG(46431)] or {};
local function AldyToiD3()
	(getgenv()).Remotes[AldyToiAG(46406)]:InvokeServer();
	(getgenv()).fishCount = 0;
end;
local AldyToiT3 = 0;
local function AldyToiC3()
	pcall(function()
		local AldyToip = AldyToii.PlayerGui:WaitForChild("\066\097\099\107\112\097\099\107", 2);
		if AldyToip then
			local AldyToiX = AldyToip:FindFirstChild("\068\105\115\112\108\097\121", true) and (AldyToip[AldyToiAG(46375)]:FindFirstChild("\073\110\118\101\110\116\111\114\121", true) and AldyToip[AldyToiAG(46375)].Inventory:FindFirstChild(AldyToiAG(46260), true));
			if AldyToiX and AldyToiX:IsA(AldyToiAG(46532)) then
				local AldyToip = AldyToiX.Text:match("\094\040\037\100\043\041");
				if AldyToip then
					AldyToiT3 = tonumber(AldyToip);
					if (getgenv())[AldyToiAG(46276)][AldyToiAG(46313)] and AldyToiT3 >= AldyToiH3 then
						AldyToiD3();
					end;
					if AldyToiT3 >= 4900 then
						AldyToiD3();
					end;
				end;
			end;
		end;
	end);
	return AldyToiT3;
end;
local function AldyToiQ3(AldyToip)
	for AldyToiX, AldyToie in pairs(AldyToiw:GetChildren()) do
		if AldyToie:IsA(AldyToiAG(46075)) then
			local AldyToiX, AldyToiz = pcall(require, AldyToie);
			if AldyToiX and (AldyToiz and (AldyToiz.Data and AldyToiz[AldyToiAG(46668)][AldyToiAG(46240)] == AldyToip)) then
				return AldyToiz;
			end;
		end;
	end;
	return nil;
end;
(getgenv())[AldyToiAG(46497)] = { Legendary = false, [AldyToiAG(46183)] = false, [AldyToiAG(46069)] = false };
local function AldyToim3()
	local AldyToip = AldyToiH:Get(AldyToiAG(46348));
	if not AldyToip or not AldyToip.Items then
		return;
	end;
	for AldyToip, AldyToiX in pairs(AldyToip.Items) do
		local AldyToie = AldyToiQ3(AldyToiX.Id);
		if AldyToie and (AldyToie.Data[AldyToiAG(46516)] == AldyToiAG(46569) and AldyToie.Probability) then
			local AldyToip = AldyToig.GetTierFromRarity(nil, AldyToie.Probability.Chance);
			if AldyToip and AldyToip[AldyToiAG(46297)] == "\076\101\103\101\110\100\097\114\121" then
				if AldyToiX.UUID and not AldyToiX.Favorited then
					AldyToiL:FireServer(AldyToiX.UUID);
				end;
			end;
		end;
	end;
end;
local function AldyToit3()
	local AldyToip = AldyToiH:Get(AldyToiAG(46348));
	if not AldyToip or not AldyToip[AldyToiAG(46409)] then
		return;
	end;
	for AldyToip, AldyToiX in pairs(AldyToip[AldyToiAG(46409)]) do
		local AldyToie = AldyToiQ3(AldyToiX[AldyToiAG(46240)]);
		if AldyToie and (AldyToie.Data.Type == "\070\105\115\104\101\115" and AldyToie.Probability) then
			local AldyToip = AldyToig[AldyToiAG(46509)](nil, AldyToie[AldyToiAG(46357)].Chance);
			if AldyToip and AldyToip.Name == AldyToiAG(46086) then
				if AldyToiX.UUID and not AldyToiX[AldyToiAG(46660)] then
					AldyToiL:FireServer(AldyToiX.UUID);
				end;
			end;
		end;
	end;
end;
local function AldyToiu3()
	local AldyToip = AldyToiH:Get(AldyToiAG(46348));
	if not AldyToip or not AldyToip[AldyToiAG(46409)] then
		return;
	end;
	for AldyToip, AldyToiX in pairs(AldyToip.Items) do
		local AldyToie = AldyToiQ3(AldyToiX[AldyToiAG(46240)]);
		if AldyToie and (AldyToie.Data[AldyToiAG(46516)] == "\070\105\115\104\101\115" and AldyToie.Probability) then
			local AldyToip = AldyToig[AldyToiAG(46509)](nil, AldyToie.Probability.Chance);
			if AldyToip and AldyToip.Name == "\083\069\067\082\069\084" then
				if AldyToiX[AldyToiAG(46477)] and not AldyToiX.Favorited then
					AldyToiL:FireServer(AldyToiX.UUID);
				end;
			end;
		end;
	end;
end;
local AldyToiS3 = { [5] = false, [6] = false, [7] = false };
local function AldyToij3()
	local AldyToip = AldyToiH:Get(AldyToiAG(46348));
	if not AldyToip or not AldyToip[AldyToiAG(46409)] then
		return;
	end;
	for AldyToip, AldyToiX in pairs(AldyToip[AldyToiAG(46409)]) do
		local AldyToie = AldyToiQ3(AldyToiX.Id);
		if AldyToie and AldyToie.Data[AldyToiAG(46516)] == "\070\105\115\104\101\115" then
			if AldyToiX.UUID and not AldyToiX.Favorited then
				AldyToiL:FireServer(AldyToiX.UUID);
			end;
		end;
	end;
end;
local function AldyToiy3()
	local AldyToip = AldyToiH:Get("\073\110\118\101\110\116\111\114\121");
	if not AldyToip or not AldyToip[AldyToiAG(46409)] then
		return;
	end;
	for AldyToip, AldyToiX in pairs(AldyToip.Items) do
		local AldyToie = AldyToiQ3(AldyToiX[AldyToiAG(46240)]);
		if AldyToie and AldyToie.Data[AldyToiAG(46516)] == "\070\105\115\104\101\115" then
			if AldyToiX.UUID and AldyToiX.Favorited then
				AldyToiL:FireServer(AldyToiX[AldyToiAG(46477)]);
			end;
		end;
	end;
end;
local AldyToir3 = {};
local function AldyToiv3(AldyToip, AldyToiX)
	local AldyToie = game.Players[AldyToiAG(46125)];
	local AldyToiz = AldyToie.Character or AldyToie[AldyToiAG(46586)]:Wait();
	local AldyToic = AldyToiz:WaitForChild(AldyToiAG(46358));
	for AldyToip, AldyToiX in ipairs(AldyToic:GetPlayingAnimationTracks()) do
		AldyToiX:Stop();
	end;
	local AldyToiU = Instance.new(AldyToiAG(46449));
	AldyToiU[AldyToiAG(46355)] = "\114\098\120\097\115\115\101\116\105\100\058\047\047" .. AldyToip;
	local AldyTois = AldyToic:LoadAnimation(AldyToiU);
	AldyTois:Play();
	task.delay(AldyToiX, function()
		if AldyTois.IsPlaying then
			AldyTois:Stop();
		end;
	end);
	return AldyTois;
end;
local function AldyToiE3()
	local AldyToiX = {};
	for AldyToip, AldyToie in ipairs(AldyToip:GetPlayers()) do
		if AldyToie ~= AldyToiz then
			table.insert(AldyToiX, AldyToie[AldyToiAG(46297)]);
		end;
	end;
	table[AldyToiAG(46090)](AldyToiX);
	return AldyToiX;
end;
(getgenv())[AldyToiAG(46394)][AldyToiAG(46213)]:CreateParagraph({ [AldyToiAG(46329)] = AldyToiAG(46386), Content = AldyToiAG(46376) });
(getgenv()).Tabs[AldyToiAG(46104)]:CreateParagraph({ [AldyToiAG(46329)] = "\065\117\116\111 \084\114\097\100\101 \083\116\111\110\101", [AldyToiAG(46419)] = "\067\108\101\097\114 \116\104\101 \116\111\111\108\098\097\114\047\102\105\115\104 \098\101\108\111\119 \116\104\101 \104\111\116\098\097\114\047\098\097\099\107\112\097\099\107\044 \116\104\101\110 \115\101\108\101\099\116 \097 \112\108\097\121\101\114\044 \099\104\111\111\115\101 \116\104\101 \097\109\111\117\110\116\044 \097\110\100 \099\108\105\099\107 \116\104\101 \084\114\097\100\101 \098\117\116\116\111\110\046" });
local AldyToik3 = nil;
(getgenv())[AldyToiAG(46498)] = (getgenv())[AldyToiAG(46394)][AldyToiAG(46104)]:CreateDropdown({
		[AldyToiAG(46297)] = AldyToiAG(46446),
		Options = AldyToiE3(),
		CurrentOption = { "" },
		[AldyToiAG(46442)] = false,
		Flag = "\084\101\108\101\112\111\114\116\080\108\097\121\101\114\068\114\111\112\100\111\119\110",
		[AldyToiAG(46389)] = function(AldyToip)
			AldyToik3 = AldyToip[1];
		end,
	});
local function AldyToiA3()
	local AldyToip = AldyToiH:Get(AldyToiAG(46348));
	if not AldyToip or not AldyToip.Items then
		return {};
	end;
	local AldyToiX = {};
	for AldyToip, AldyToie in pairs(AldyToip.Items) do
		if type(AldyToie) == "\116\097\098\108\101" and AldyToie[AldyToiAG(46240)] == 10 then
			table.insert(AldyToiX, AldyToie.UUID);
		end;
	end;
	return AldyToiX;
end;
local function AldyToif3()
	local AldyToip = AldyToiH:Get("\073\110\118\101\110\116\111\114\121");
	if not AldyToip or not AldyToip[AldyToiAG(46409)] then
		return nil;
	end;
	for AldyToip, AldyToiX in pairs(AldyToip.Items) do
		if type(AldyToiX) == AldyToiAG(46195) and AldyToiX[AldyToiAG(46240)] == 10 then
			return tostring(AldyToiX[AldyToiAG(46477)]);
		end;
	end;
	return nil;
end;
(getgenv()).loopCount = (getgenv())[AldyToiAG(46136)] or 1;
(getgenv())[AldyToiAG(46394)].TradeStoneTab:CreateInput({
	[AldyToiAG(46297)] = AldyToiAG(46671),
	[AldyToiAG(46275)] = AldyToiAG(46363),
	RemoveTextAfterFocusLost = false,
	Callback = function(AldyToip)
		local AldyToiX = tonumber(AldyToip);
		if AldyToiX then
			(getgenv()).loopCount = AldyToiX;
			print(AldyToiAG(46130), loopCount);
		else
			warn("\073\110\112\117\116 \098\117\107\097\110 \097\110\103\107\097");
		end;
	end,
});
local AldyToix3 = (getgenv()).Tabs.TradeStoneTab:CreateParagraph({ [AldyToiAG(46329)] = "\080\114\111\103\114\101\115\115 \084\114\097\100\101", Content = AldyToiAG(46594) });
local AldyToiP3, AldyToil3 = 0, 0;
(getgenv()).Tabs.TradeStoneTab:CreateButton({ Name = "\083\116\097\114\116 \084\114\097\100\101", Callback = function()
		pcall(function()
			if not AldyToik3 or AldyToik3 == "" then
				AldyToib:Notify({ [AldyToiAG(46329)] = "\226\157\140 \069\114\114\111\114", [AldyToiAG(46419)] = AldyToiAG(46211), Duration = 2 });
				return;
			end;
			local AldyToiX = AldyToiz.Character;
			local AldyToic = AldyToiX and AldyToiX:FindFirstChild(AldyToiAG(46656));
			if not AldyToic then
				AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46237), Content = "\089\111\117\114 \099\104\097\114\097\099\116\101\114 \110\111\116 \102\111\117\110\100\046", [AldyToiAG(46188)] = 2 });
				return;
			end;
			local AldyToiU = AldyToie:FindFirstChild("\067\104\097\114\097\099\116\101\114\115");
			if not AldyToiU then
				AldyToib:Notify({ Title = AldyToiAG(46237), [AldyToiAG(46419)] = "\'\067\104\097\114\097\099\116\101\114\115\' \102\111\108\100\101\114 \110\111\116 \102\111\117\110\100\046", Duration = 2 });
				return;
			end;
			local AldyTois = AldyToiU:FindFirstChild(AldyToik3);
			if AldyTois then
				local AldyToiX = AldyToip:GetPlayerFromCharacter(AldyTois);
				if AldyToiX then
					local AldyToip = AldyTois[AldyToiAG(46656)];
					AldyToic.CFrame = AldyToip.CFrame;
					local AldyToie = AldyToiX.UserId;
					local AldyToiz = AldyToiA3();
					local AldyToiU = #AldyToiz;
					print("\074\117\109\108\097\104 \105\116\101\109 \115\116\111\110\101 \115\097\097\116 \105\110\105 \058", AldyToiU);
					if AldyToiU == 0 then
						warn("\084\105\100\097\107 \097\100\097 \098\097\116\117 \117\110\116\117\107 \100\105\116\114\097\100\101");
						return;
					end;
					AldyToiP3, AldyToil3 = 0, 0;
					for AldyToip = 1, (getgenv()).loopCount, 1 do
						local AldyToiX = AldyToiz[(AldyToip - 1) % AldyToiU + 1];
						AldyToix3:Set({ Title = "\080\114\111\103\114\101\115\115 \084\114\097\100\101", [AldyToiAG(46419)] = string[AldyToiAG(46629)](AldyToiAG(46577), AldyToip, (getgenv())[AldyToiAG(46136)], AldyToiP3, AldyToil3, AldyToiU) });
						local AldyToic, AldyTois = pcall(function()
								(getgenv()).Remotes[AldyToiAG(46281)]:FireServer(AldyToiX, AldyToiAG(46434));
								task.wait(.5);
								(getgenv()).Remotes[AldyToiAG(46129)]:FireServer(2);
								task[AldyToiAG(46373)](.2);
								return (getgenv())[AldyToiAG(46292)][AldyToiAG(46495)]:InvokeServer(AldyToie, AldyToiX);
							end);
						if AldyToic and AldyTois then
							AldyToiP3 = AldyToiP3 + 1;
							print(string[AldyToiAG(46629)]("\091\083\085\075\083\069\083\093 \065\117\116\111 \084\114\097\100\101 \037\100\047\037\100 \124 \083\117\107\115\101\115\058\037\100 \124 \071\097\103\097\108\058\037\100", AldyToip, (getgenv()).loopCount, AldyToiP3, AldyToil3));
						else
							AldyToil3 = AldyToil3 + 1;
							print(string.format("\091\071\065\071\065\076\093 \065\117\116\111 \084\114\097\100\101 \037\100\047\037\100 \124 \083\117\107\115\101\115\058\037\100 \124 \071\097\103\097\108\058\037\100", AldyToip, (getgenv())[AldyToiAG(46136)], AldyToiP3, AldyToil3));
						end;
						AldyToix3:Set({ [AldyToiAG(46329)] = AldyToiAG(46193), [AldyToiAG(46419)] = string.format("\080\114\111\103\114\101\115\115\058 \037\100\047\037\100\n\226\156\133 \083\117\107\115\101\115\058 \037\100 \124 \226\157\140 \071\097\103\097\108\058 \037\100  \124  \083\105\115\097\058 \037\100", AldyToip, (getgenv()).loopCount, AldyToiP3, AldyToil3, AldyToiU) });
						task[AldyToiAG(46373)](6);
					end;
					print("\084\114\097\100\105\110\103 \067\111\109\112\108\101\116\101\058", (getgenv())[AldyToiAG(46136)], " \083\117\107\115\101\115\058", AldyToiP3, " \071\097\103\097\108\058", AldyToil3);
				else
					warn("\078\111 \112\108\097\121\101\114 \102\111\117\110\100 \102\111\114 \116\104\105\115 \099\104\097\114\097\099\116\101\114");
				end;
			else
				warn(AldyToiAG(46179));
			end;
		end);
	end });
(getgenv()).Tabs[AldyToiAG(46104)]:CreateButton({ Name = AldyToiAG(46140), [AldyToiAG(46389)] = function()
		local AldyToip = AldyToiE3();
		(getgenv())[AldyToiAG(46498)]:Refresh(AldyToip);
		if AldyToik3 and table[AldyToiAG(46290)](AldyToip, AldyToik3) then
			(getgenv()).playerDropdown2:Set({ AldyToik3 });
		else
			AldyToik3 = nil;
			(getgenv())[AldyToiAG(46498)]:Set({ "\060\078\111\110\101\062" });
		end;
	end });
local AldyToin3;
local AldyToiW3;
AldyToin3 = (getgenv())[AldyToiAG(46394)][AldyToiAG(46213)]:CreateToggle({
		Name = "\080\101\114\102\101\099\116 \067\097\115\116",
		[AldyToiAG(46331)] = false,
		[AldyToiAG(46614)] = AldyToiAG(46466),
		[AldyToiAG(46389)] = function(AldyToip)
			(getgenv())[AldyToiAG(46276)][AldyToiAG(46589)] = AldyToip;
			if AldyToip and AldyToiW3 then
				(getgenv())[AldyToiAG(46276)][AldyToiAG(46284)] = false;
				AldyToiW3:Set(false);
			end;
		end,
	});
AldyToiW3 = (getgenv()).Tabs[AldyToiAG(46213)]:CreateToggle({
		[AldyToiAG(46297)] = AldyToiAG(46383),
		CurrentValue = false,
		Flag = "\065\109\097\122\105\110\103\067\097\115\116\084\111\103\103\108\101",
		Callback = function(AldyToip)
			(getgenv())[AldyToiAG(46276)][AldyToiAG(46284)] = AldyToip;
			if AldyToip and AldyToin3 then
				(getgenv()).toggleState[AldyToiAG(46589)] = false;
				AldyToin3:Set(false);
			end;
		end,
	});
(getgenv())[AldyToiAG(46317)] = (getgenv())[AldyToiAG(46394)].TP_Player_Tab:CreateDropdown({
		Name = AldyToiAG(46446),
		[AldyToiAG(46617)] = AldyToiE3(),
		[AldyToiAG(46199)] = { AldyToiAG(46269) },
		MultipleOptions = false,
		[AldyToiAG(46614)] = AldyToiAG(46424),
		[AldyToiAG(46389)] = function(AldyToip)
			(getgenv()).selectedPlayerName = AldyToip[1];
		end,
	});
local function AldyToiI3(AldyToip)
	if not AldyToip or AldyToip == "" then
		AldyToib:Notify({ Title = AldyToiAG(46237), Content = AldyToiAG(46211), [AldyToiAG(46188)] = 2 });
		return;
	end;
	local AldyToiX = AldyToiz.Character;
	local AldyToic = AldyToiX and AldyToiX:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
	if not AldyToic then
		AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46237), [AldyToiAG(46419)] = AldyToiAG(46194), Duration = 2 });
		return;
	end;
	local AldyToiU = AldyToie:FindFirstChild(AldyToiAG(46564));
	if not AldyToiU then
		AldyToib:Notify({ [AldyToiAG(46329)] = "\226\157\140 \069\114\114\111\114", Content = AldyToiAG(46616), Duration = 2 });
		return;
	end;
	local AldyTois = AldyToiU:FindFirstChild(AldyToip);
	if AldyTois and AldyTois:FindFirstChild(AldyToiAG(46656)) then
		local AldyToiX = AldyTois[AldyToiAG(46656)];
		local AldyToie = AldyToiX[AldyToiAG(46144)].RightVector * 5;
		AldyToic.CFrame = AldyToiX.CFrame + AldyToie;
		AldyToib:Notify({ [AldyToiAG(46329)] = "\226\156\133 \084\101\108\101\112\111\114\116\101\100", Content = AldyToiAG(46233) .. AldyToip, [AldyToiAG(46188)] = 2 });
	else
		AldyToib:Notify({ Title = AldyToiAG(46237), [AldyToiAG(46419)] = AldyToiAG(46407), Duration = 2 });
	end;
end;
(getgenv())[AldyToiAG(46394)].TP_Player_Tab:CreateButton({ Name = "\084\101\108\101\112\111\114\116 \116\111 \083\101\108\101\099\116\101\100 \080\108\097\121\101\114", Callback = function()
		pcall(function()
			AldyToiI3((getgenv()).selectedPlayerName);
		end);
	end });
(getgenv())[AldyToiAG(46394)].TP_Player_Tab:CreateButton({ Name = "\240\159\148\132 \082\101\102\114\101\115\104 \080\108\097\121\101\114 \076\105\115\116", [AldyToiAG(46389)] = function()
		local AldyToip = AldyToiE3();
		(getgenv()).playerDropdown:Refresh(AldyToip);
		if (getgenv())[AldyToiAG(46101)] and table.find(AldyToip, (getgenv())[AldyToiAG(46101)]) then
			(getgenv())[AldyToiAG(46317)]:Set({ (getgenv()).selectedPlayerName });
		else
			(getgenv()).selectedPlayerName = nil;
			(getgenv()).playerDropdown:Set({ "\060\078\111\110\101\062" });
		end;
	end });
(getgenv()).Tabs.AboutTab:CreateParagraph({ [AldyToiAG(46329)] = AldyToiAG(46164), [AldyToiAG(46419)] = "\070\114\101\101 \097\110\100 \075\101\121\108\101\115\115\046\n" });
(getgenv()).Tabs.AboutTab:CreateButton({ [AldyToiAG(46297)] = AldyToiAG(46555), [AldyToiAG(46389)] = function()
		setclipboard(AldyToiAG(46134));
		AldyToib:Notify({ [AldyToiAG(46329)] = "\067\111\112\105\101\100 \116\111 \099\108\105\112\098\111\097\114\100\033", [AldyToiAG(46419)] = AldyToiAG(46134), [AldyToiAG(46188)] = 1 });
	end });
(getgenv()).Tabs.AboutTab:CreateButton({ [AldyToiAG(46297)] = "\084\105\107\116\111\107", [AldyToiAG(46389)] = function()
		setclipboard(AldyToiAG(46412));
		AldyToib:Notify({ [AldyToiAG(46329)] = "\067\111\112\105\101\100 \116\111 \099\108\105\112\098\111\097\114\100\033", [AldyToiAG(46419)] = "\104\116\116\112\115\058\047\047\116\105\107\116\111\107\046\099\111\109\047\097\108\100\121\116\111\105", [AldyToiAG(46188)] = 1 });
	end });
(getgenv())[AldyToiAG(46394)].AboutTab:CreateButton({ Name = "\071\105\116\072\117\098", [AldyToiAG(46389)] = function()
		setclipboard("\104\116\116\112\115\058\047\047\103\105\116\104\117\098\046\099\111\109\047\097\108\100\121\106\114\122");
		AldyToib:Notify({ Title = AldyToiAG(46476), Content = AldyToiAG(46335), Duration = 1 });
	end });
local AldyToih3 = AldyToiO:WaitForChild("\073\116\101\109\115");
local AldyToipD = {};
local function AldyToiXD(AldyToip)
	if not AldyToip or type(AldyToip) ~= "\110\117\109\098\101\114" then
		return "\063\063\063";
	end;
	if AldyToip >= 1000000 then
		return string.format(AldyToiAG(46626), AldyToip / 1000000);
	elseif AldyToip >= 1000 then
		return string[AldyToiAG(46629)]("\037\046\049\102\107 \067\111\105\110\115", AldyToip / 1000);
	else
		return tostring(AldyToip) .. AldyToiAG(46106);
	end;
end;
local function AldyToieD()
	for AldyToip, AldyToiX in ipairs(AldyToih3:GetChildren()) do
		if AldyToiX:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			local AldyToip, AldyToie = pcall(require, AldyToiX);
			if AldyToip and type(AldyToie) == "\116\097\098\108\101" then
				AldyToie[AldyToiAG(46360)] = 9999;
				AldyToie[AldyToiAG(46413)] = 9999;
				AldyToie.Speed = 100;
				AldyToie[AldyToiAG(46337)] = 1000000;
			end;
			if AldyToip and (type(AldyToie) == AldyToiAG(46195) and AldyToie.RollData) then
				AldyToie.RollData.BaseLuck = 9999;
				if not AldyToie[AldyToiAG(46441)][AldyToiAG(46674)] then
					AldyToie[AldyToiAG(46441)].Frequency = {};
				end;
				AldyToie[AldyToiAG(46441)].Frequency.Golden = 100;
				AldyToie.RollData[AldyToiAG(46674)].Rainbow = 100;
			end;
		end;
	end;
	local AldyToip = AldyToiO:WaitForChild(AldyToiAG(46224));
	for AldyToip, AldyToiX in pairs(AldyToip:GetChildren()) do
		if AldyToiX:IsA(AldyToiAG(46075)) then
			local AldyToip, AldyToie = pcall(require, AldyToiX);
			if AldyToip and (AldyToie and AldyToie.Modifiers) then
				if AldyToie.Modifiers == nil then
					AldyToie.Modifiers = {};
				end;
				AldyToie[AldyToiAG(46344)][AldyToiAG(46510)] = 99999;
				if AldyToie.Modifiers[AldyToiAG(46147)] == nil then
					AldyToie[AldyToiAG(46344)].ShinyMultiplier = 99999;
				end;
				if AldyToie.Modifiers.MutationMultiplier == nil then
					AldyToie[AldyToiAG(46344)][AldyToiAG(46471)] = 99999;
				end;
			else
				warn(AldyToiAG(46591), AldyToiX[AldyToiAG(46297)]);
			end;
		end;
	end;
end;
for AldyToip, AldyToiX in ipairs(AldyToih3:GetChildren()) do
	if AldyToiX:IsA(AldyToiAG(46075)) then
		local AldyToip, AldyToie = pcall(require, AldyToiX);
		if AldyToip and typeof(AldyToie) == "\116\097\098\108\101" then
			local AldyToip = AldyToie[AldyToiAG(46668)];
			if AldyToip and AldyToip.Type == AldyToiAG(46515) then
				local AldyToiz = AldyToip.Id or "\063";
				local AldyToic = AldyToip.Name or AldyToiX.Name;
				local AldyToiU = AldyToip[AldyToiAG(46162)] or AldyToiAG(46217);
				local AldyTois = "\063\063\063";
				if AldyToie.Price then
					AldyTois = AldyToiXD(AldyToie.Price);
					table[AldyToiAG(46565)](AldyToipD, {
						[AldyToiAG(46103)] = AldyToiz,
						[AldyToiAG(46297)] = AldyToic,
						Dex = AldyToiU,
						Harga = AldyTois,
					});
				else
					local AldyToip = {
							["\071\111\108\100 \082\111\100"] = "\086\073\080 \079\110\108\121",
							["\076\117\099\107\121 \082\111\100"] = AldyToiAG(46464),
							["\077\105\100\110\105\103\104\116 \082\111\100"] = AldyToiAG(46359),
							["\067\104\114\111\109\101 \082\111\100"] = "\052\051\055\107 \067\111\105\110\115",
						};
					AldyTois = AldyToip[AldyToic] or "\063\063\063 \085\110\107\110\111\119\110";
				end;
			end;
		end;
	end;
end;
(getgenv())[AldyToiAG(46394)].Buy_Rod:CreateSection("\082\111\100\115");
(getgenv()).Tabs.Buy_Rod:CreateParagraph({ [AldyToiAG(46329)] = "\080\117\114\099\104\097\115\101 \082\111\100\115", [AldyToiAG(46419)] = "\083\111\109\101 \082\111\100\115 \099\097\110\'\116 \098\101 \112\117\114\099\104\097\115\101\100 \098\101\099\097\117\115\101 \116\104\101\121 \097\114\101 \086\073\080 \111\110\108\121 \111\114 \100\111\101\115\110\'\116 \104\097\118\101 \097 \112\114\105\099\101 \109\097\112\046" });
for AldyToip, AldyToiX in ipairs(AldyToipD) do
	(getgenv()).Tabs.Buy_Rod:CreateButton({ [AldyToiAG(46297)] = string[AldyToiAG(46629)]("\037\115 \040\037\115\041", AldyToiX[AldyToiAG(46297)], AldyToiX.Harga), Callback = function()
			local AldyToip, AldyToie = pcall(function()
					return AldyToiO.Packages._Index["\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048"].net[AldyToiAG(46451)]:InvokeServer(AldyToiX[AldyToiAG(46103)]);
				end);
			AldyToib:Notify({ [AldyToiAG(46329)] = "\080\117\114\099\104\097\115\101 \082\111\100", [AldyToiAG(46419)] = AldyToip and "\066\117\121\105\110\103 " .. AldyToiX.Name or "\070\097\105\108\101\100 \116\111 \098\117\121 " .. AldyToiX.Name, [AldyToiAG(46188)] = 1 });
			if not AldyToip then
				warn(AldyToiAG(46308), AldyToie);
			end;
		end });
end;
(getgenv()).Tabs[AldyToiAG(46388)]:CreateSection("\066\097\105\116\115");
(getgenv())[AldyToiAG(46394)].Buy_Rod:CreateParagraph({ [AldyToiAG(46329)] = "\066\117\121 \066\097\105\116\115", [AldyToiAG(46419)] = "\066\117\121 \066\097\105\116\115 \069\118\101\114\121\119\104\101\114\101" });
local AldyToizD = AldyToiO:FindFirstChild("\066\097\105\116\115");
if not AldyToizD then
	warn(AldyToiAG(46267));
	return;
end;
for AldyToip, AldyToiX in ipairs(AldyToizD:GetChildren()) do
	if AldyToiX:IsA(AldyToiAG(46075)) then
		local AldyToip, AldyToie = pcall(require, AldyToiX);
		if AldyToip and (AldyToie and AldyToie.Data) then
			local AldyToip = AldyToie.Data.Id or 0;
			local AldyToiX = AldyToie[AldyToiAG(46668)][AldyToiAG(46297)] or AldyToiAG(46116);
			local AldyToiz = AldyToie[AldyToiAG(46668)].Description or AldyToiAG(46217);
			local AldyToic = AldyToie[AldyToiAG(46365)] and AldyToie.Price .. " \067\111\105\110\115" or AldyToiAG(46234);
			(getgenv()).Tabs[AldyToiAG(46388)]:CreateButton({ [AldyToiAG(46297)] = AldyToiX .. (" \040" .. (AldyToic .. AldyToiAG(46422))), Callback = function()
					pcall(function()
						AldyToiO.Packages[AldyToiAG(46598)][AldyToiAG(46356)][AldyToiAG(46496)][AldyToiAG(46314)]:InvokeServer(AldyToip);
						AldyToib:Notify({ Title = AldyToiAG(46340), Content = AldyToiAG(46163) .. AldyToiX, Duration = 3 });
					end);
				end });
		else
			warn(AldyToiAG(46177), AldyToiX[AldyToiAG(46297)]);
		end;
	end;
end;
local AldyToicD = AldyToiB3:WaitForChild(AldyToiAG(46645));
local AldyToiUD = require((AldyToiO:WaitForChild(AldyToiAG(46126))):WaitForChild("\070\105\115\104\105\110\103\067\111\110\116\114\111\108\108\101\114"));
(getgenv()).tierArray = (getgenv())[AldyToiAG(46534)] or {
		{
			[AldyToiAG(46297)] = "\067\111\109\109\111\110",
			Rarity = 1,
			[AldyToiAG(46320)] = ColorSequence.new(Color3[AldyToiAG(46364)](255, 250, 246)),
			Tier = 1,
		},
		{
			Name = "\085\110\099\111\109\109\111\110",
			[AldyToiAG(46575)] = .02,
			TierColor = ColorSequence.new(Color3.fromRGB(195, 255, 85)),
			[AldyToiAG(46646)] = 2,
		},
		{
			[AldyToiAG(46297)] = AldyToiAG(46475),
			[AldyToiAG(46575)] = .004,
			TierColor = ColorSequence.new(Color3.fromRGB(85, 162, 255)),
			[AldyToiAG(46646)] = 3,
		},
		{
			Name = AldyToiAG(46608),
			Rarity = .001,
			[AldyToiAG(46320)] = ColorSequence[AldyToiAG(46439)](Color3.fromRGB(173, 79, 255)),
			[AldyToiAG(46646)] = 4,
		},
		{
			Name = "\076\101\103\101\110\100\097\114\121",
			Rarity = .0002,
			[AldyToiAG(46320)] = ColorSequence.new(Color3.fromRGB(255, 184, 42)),
			Tier = 5,
		},
		{
			[AldyToiAG(46297)] = "\077\121\116\104\105\099",
			[AldyToiAG(46575)] = 2e-05,
			TierColor = ColorSequence.new(Color3.fromRGB(255, 24, 24)),
			[AldyToiAG(46646)] = 6,
		},
		{
			Name = AldyToiAG(46582),
			[AldyToiAG(46575)] = 4e-06,
			TierColor = ColorSequence.new({ ColorSequenceKeypoint[AldyToiAG(46439)](0, Color3[AldyToiAG(46364)](23, 255, 151)), ColorSequenceKeypoint.new(1, Color3[AldyToiAG(46364)](11, 149, 255)) }),
			[AldyToiAG(46646)] = 7,
		},
	};
local function AldyToisD(AldyToip, AldyToiX, AldyToie)
	AldyToie = AldyToie or .01;
	return math.abs(AldyToip[AldyToiAG(46390)] - AldyToiX.R) <= AldyToie and (math[AldyToiAG(46172)](AldyToip[AldyToiAG(46600)] - AldyToiX[AldyToiAG(46600)]) <= AldyToie and math[AldyToiAG(46172)](AldyToip[AldyToiAG(46467)] - AldyToiX[AldyToiAG(46467)]) <= AldyToie);
end;
local function AldyToiOD(AldyToip)
	local AldyToiX = {};
	for AldyToie = 1, #AldyToip, 4 do
		local AldyToiz = AldyToip[AldyToie];
		local AldyToic = AldyToip[AldyToie + 1];
		local AldyToiU = AldyToip[AldyToie + 2];
		local AldyTois = AldyToip[AldyToie + 3];
		table[AldyToiAG(46565)](AldyToiX, ColorSequenceKeypoint[AldyToiAG(46439)](AldyToiz, Color3[AldyToiAG(46439)](AldyToic, AldyToiU, AldyTois)));
	end;
	return ColorSequence[AldyToiAG(46439)](AldyToiX);
end;
local function AldyToiiD(AldyToip)
	local AldyToiX;
	if typeof(AldyToip) == "\067\111\108\111\114\083\101\113\117\101\110\099\101" then
		AldyToiX = AldyToip;
	elseif typeof(AldyToip) == AldyToiAG(46195) then
		AldyToiX = AldyToiOD(AldyToip);
	else
		warn("\084\101\120\116\067\111\108\111\114 \116\105\100\097\107 \100\105\107\101\110\097\108\105\058", typeof(AldyToip));
		return nil;
	end;
	local AldyToie = AldyToiX.Keypoints[1][AldyToiAG(46232)];
	for AldyToip, AldyToiX in ipairs((getgenv())[AldyToiAG(46534)]) do
		if AldyToiX.TierColor and AldyToiX.TierColor[AldyToiAG(46605)] then
			local AldyToip = AldyToiX.TierColor[AldyToiAG(46605)][1].Value;
			if AldyToisD(AldyToie, AldyToip) then
				return AldyToiX;
			end;
		end;
	end;
	return nil;
end;
(getgenv()).lastTierData = nil;
(getgenv()).lastTierReceived = false;
local AldyToiRD = {
		AldyToiAG(46465),
		AldyToiAG(46157),
		AldyToiAG(46475),
		"\069\112\105\099",
		"\076\101\103\101\110\100\097\114\121",
		"\077\121\116\104\105\099",
		"\083\069\067\082\069\084",
	};
(getgenv()).selectedTier = { "\076\101\103\101\110\100\097\114\121", "\077\121\116\104\105\099", "\083\069\067\082\069\084" };
local function AldyToiMD(AldyToip)
	(getgenv()).toggleState[AldyToiAG(46076)] = AldyToip;
	if AldyToip then
		pcall(function()
			local AldyToip = { 1 };
			((((((game:GetService(AldyToiAG(46613))):WaitForChild("\080\097\099\107\097\103\101\115")):WaitForChild("\095\073\110\100\101\120")):WaitForChild(AldyToiAG(46356))):WaitForChild(AldyToiAG(46496))):WaitForChild(AldyToiAG(46459))):FireServer(unpack(AldyToip));
		end);
		task.wait(.8);
		task[AldyToiAG(46081)](function()
			while (getgenv())[AldyToiAG(46276)][AldyToiAG(46076)] do
				for AldyToip, AldyToiX in ipairs(AldyToiV3:GetPlayingAnimationTracks()) do
					AldyToiX:Stop();
				end;
				pcall(function()
					(getgenv())[AldyToiAG(46538)] = true;
					if not (getgenv()).toggleState.fishingAnimation then
						if AldyToiG == 245 then
							AldyToiv3(AldyToig3, 1);
						else
							AldyToiv3(AldyToiG3, 1);
						end;
					end;
					(getgenv())[AldyToiAG(46292)][AldyToiAG(46490)]:InvokeServer(AldyToie:GetServerTimeNow());
					if not (getgenv()).toggleState.fishingAnimation then
						if AldyToiG == 245 then
							AldyToiv3(AldyToib3, 2);
						else
							AldyToiv3(AldyToiq3, 2);
						end;
					end;
					task.wait(.2);
					local AldyToip, AldyToiX;
					if (getgenv()).toggleState[AldyToiAG(46589)] and not (getgenv()).toggleState[AldyToiAG(46284)] then
						AldyToip, AldyToiX = -0.74999964237213, 1;
					elseif not (getgenv()).toggleState.perfectCast and (getgenv()).toggleState[AldyToiAG(46284)] then
						AldyToip, AldyToiX = -139.6379699707, .87694226394928;
					else
						AldyToip = math.random(-1000, 1000) / 1000;
						AldyToiX = math[AldyToiAG(46381)](0, 1000) / 1000;
					end;
					if not (getgenv()).toggleState.fishingAnimation then
						if AldyToiG == 245 then
							AldyToiv3(AldyToiJ3, 15);
						else
							AldyToiv3(AldyToiw3, 15);
						end;
					end;
					(getgenv()).Remotes.RF_RequestFishingMinigameStarted:InvokeServer(AldyToip, AldyToiX);
					task[AldyToiAG(46373)](.2);
					if (getgenv())[AldyToiAG(46567)] and ((getgenv())[AldyToiAG(46276)][AldyToiAG(46205)] and #(getgenv())[AldyToiAG(46641)] > 0) then
						local AldyToip = (getgenv())[AldyToiAG(46567)];
						local AldyToiX = false;
						for AldyToie, AldyToiz in ipairs((getgenv()).selectedTier) do
							if AldyToiz == AldyToip.Name then
								AldyToiX = true;
								break;
							end;
						end;
						if AldyToiX then
							local AldyToip = {};
							while (getgenv()).dapatIkan do
								(getgenv()).Remotes.RE_FishingCompleted:FireServer(unpack(AldyToip));
								task[AldyToiAG(46373)](.5);
							end;
						else
							(getgenv())[AldyToiAG(46292)].RF_CancelFishing:InvokeServer();
							pcall(function()
								if AldyToiUD and AldyToiUD.RequestClientStopFishing then
									AldyToiUD:RequestClientStopFishing(true);
								end;
							end);
						end;
					else
						local AldyToip = {};
						while (getgenv())[AldyToiAG(46538)] do
							(getgenv()).Remotes.RE_FishingCompleted:FireServer(unpack(AldyToip));
							task[AldyToiAG(46373)](.5);
						end;
					end;
				end);
				task.wait((getgenv()).loopDelay);
			end;
		end);
	else
		local AldyToip = {};
		for AldyToiX = 1, 3, 1 do
			(getgenv()).Remotes.RE_FishingCompleted:FireServer(unpack(AldyToip));
			task.wait(.5);
		end;
		(getgenv()).Remotes[AldyToiAG(46361)]:InvokeServer();
		pcall(function()
			if AldyToiUD and AldyToiUD[AldyToiAG(46280)] then
				AldyToiUD:RequestClientStopFishing(true);
			end;
		end);
		for AldyToip, AldyToiX in ipairs(AldyToiV3:GetPlayingAnimationTracks()) do
			AldyToiX:Stop();
		end;
		AldyToib:Notify({ [AldyToiAG(46329)] = "\065\117\116\111 \070\105\115\104\105\110\103 \083\116\111\112\112\101\100", Content = "\068\101\097\099\116\105\118\097\116\101\100 \065\117\116\111 \070\105\115\104\105\110\103", Duration = 1 });
	end;
end;
if (getgenv()).replicateTextConn then
	(getgenv()).replicateTextConn:Disconnect();
end;
(getgenv()).replicateTextConn = AldyToiO[AldyToiAG(46652)][AldyToiAG(46598)]["\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048"].net[AldyToiAG(46416)][AldyToiAG(46587)]:Connect(function(AldyToiX)
		if AldyToiX and (AldyToiX.TextData and AldyToiX.TextData.EffectType == AldyToiAG(46486)) then
			local AldyToie = AldyToip[AldyToiAG(46125)][AldyToiAG(46218)] and AldyToip.LocalPlayer[AldyToiAG(46218)]:FindFirstChild(AldyToiAG(46204));
			if AldyToie and AldyToiX[AldyToiAG(46427)] == AldyToie then
				(getgenv())[AldyToiAG(46368)] = tick();
				if not (getgenv())[AldyToiAG(46276)][AldyToiAG(46436)] then
					if AldyToiG == 245 then
						AldyToiv3(AldyToiN3, 1);
					else
						AldyToiv3(AldyToiL3, 1);
					end;
				end;
				if (getgenv()).toggleState[AldyToiAG(46205)] then
					local AldyToip = AldyToiX[AldyToiAG(46458)][AldyToiAG(46303)];
					local AldyToie = AldyToiiD(AldyToip);
					(getgenv()).lastTierData = AldyToie;
					(getgenv())[AldyToiAG(46601)] = true;
					if AldyToie then
						(getgenv())[AldyToiAG(46505)] = AldyToie.Name;
					end;
				end;
			end;
		end;
	end);
(getgenv())[AldyToiAG(46592)] = (getgenv())[AldyToiAG(46394)][AldyToiAG(46213)]:CreateToggle({
		[AldyToiAG(46297)] = "\240\159\142\163 \065\117\116\111 \070\105\115\104\105\110\103",
		CurrentValue = false,
		[AldyToiAG(46614)] = "\065\117\116\111\070\105\115\104\084\111\103\103\108\101\070\108\097\103",
		[AldyToiAG(46389)] = function(AldyToip)
			(getgenv())[AldyToiAG(46276)].bool_autoFish = AldyToip;
			AldyToiMD(AldyToip);
		end,
	});
(getgenv()).Tabs.AutoFishTab:CreateSlider({
	[AldyToiAG(46297)] = AldyToiAG(46316),
	Range = { .1, 5 },
	Flag = AldyToiAG(46350),
	[AldyToiAG(46604)] = .1,
	[AldyToiAG(46331)] = (getgenv())[AldyToiAG(46418)],
	[AldyToiAG(46389)] = function(AldyToip)
		(getgenv())[AldyToiAG(46418)] = AldyToip;
	end,
});
(getgenv())[AldyToiAG(46394)].AutoFishTab:CreateParagraph({ Title = AldyToiAG(46410), Content = "\068\101\108\097\121 \098\101\102\111\114\101 \097\117\116\111\109\097\116\105\099 \114\101\115\112\097\119\110 \119\104\101\110 \097\117\116\111\102\105\115\104\105\110\103 \105\115 \097\099\116\105\118\101 \098\117\116 \110\111 \102\105\115\104 \105\115 \099\097\117\103\104\116\047\104\111\111\107\101\100 \040\100\101\102\097\117\108\116 \050\048 \115\101\099\111\110\100\115\041" });
local function AldyToiFD()
	local AldyToip = AldyToiz.Character;
	if AldyToip and AldyToip:FindFirstChild(AldyToiAG(46358)) then
		AldyToip[AldyToiAG(46358)][AldyToiAG(46403)] = 0;
	end;
end;
(getgenv())[AldyToiAG(46127)] = (getgenv())[AldyToiAG(46394)].AutoFishTab:CreateToggle({
		[AldyToiAG(46297)] = AldyToiAG(46399),
		[AldyToiAG(46331)] = false,
		Flag = AldyToiAG(46114),
		Callback = function(AldyToip)
			(getgenv()).toggleState[AldyToiAG(46127)] = AldyToip;
		end,
	});
(getgenv())[AldyToiAG(46300)] = 20;
(getgenv())[AldyToiAG(46394)][AldyToiAG(46213)]:CreateSlider({
	[AldyToiAG(46297)] = "\226\143\177\239\184\143 \073\100\108\101 \082\101\115\112\097\119\110 \084\105\109\101 \040\115\101\099\111\110\100\115\041",
	Range = { 10, 60 },
	Increment = 2,
	Flag = AldyToiAG(46333),
	CurrentValue = (getgenv()).idleTime,
	[AldyToiAG(46389)] = function(AldyToip)
		(getgenv())[AldyToiAG(46300)] = AldyToip;
	end,
});
(getgenv())[AldyToiAG(46394)].AutoFishTab:CreateButton({ [AldyToiAG(46297)] = "\240\159\148\129 \082\101\115\112\097\119\110 \067\104\097\114\097\099\116\101\114", Callback = function()
		AldyToiFD();
	end });
local AldyToiZD = (getgenv())[AldyToiAG(46394)].AutoFishTab:CreateDropdown({
		Name = AldyToiAG(46158),
		[AldyToiAG(46617)] = AldyToiRD,
		CurrentOption = {
			"\067\111\109\109\111\110",
			"\085\110\099\111\109\109\111\110",
			AldyToiAG(46475),
			"\069\112\105\099",
			"\076\101\103\101\110\100\097\114\121",
			"\077\121\116\104\105\099",
			AldyToiAG(46582),
		},
		[AldyToiAG(46442)] = true,
		Flag = "\084\105\101\114\077\117\108\116\105\068\114\111\112\100\111\119\110",
		Callback = function(AldyToip)
			(getgenv())[AldyToiAG(46641)] = AldyToip;
		end,
	});
(getgenv())[AldyToiAG(46546)] = (getgenv()).Tabs[AldyToiAG(46213)]:CreateToggle({
		[AldyToiAG(46297)] = "\069\110\097\098\108\101 \084\105\101\114 \070\105\108\116\101\114",
		CurrentValue = false,
		Flag = AldyToiAG(46524),
		[AldyToiAG(46389)] = function(AldyToip)
			(getgenv())[AldyToiAG(46276)].tierFilter = AldyToip;
		end,
	});
(getgenv())[AldyToiAG(46394)][AldyToiAG(46402)]:CreateParagraph({ [AldyToiAG(46329)] = AldyToiAG(46610), Content = "\083\101\108\101\099\116 \097 \119\101\097\116\104\101\114 \101\118\101\110\116 \116\111 \116\114\105\103\103\101\114\046" });
local AldyToiBD = AldyToiO:WaitForChild("\069\118\101\110\116\115");
(getgenv())[AldyToiAG(46165)] = {};
(getgenv()).weathersNoShark = {};
for AldyToip, AldyToiX in ipairs(AldyToiBD:GetChildren()) do
	if AldyToiX:IsA(AldyToiAG(46075)) then
		local AldyToip, AldyToie = pcall(require, AldyToiX);
		if AldyToip and (AldyToie and type(AldyToie) == AldyToiAG(46195)) then
			local AldyToip = { Name = AldyToie[AldyToiAG(46297)] or AldyToiX[AldyToiAG(46297)], Price = AldyToie[AldyToiAG(46117)] or 0, [AldyToiAG(46283)] = AldyToie[AldyToiAG(46162)] or AldyToiAG(46585) };
			if not (string.lower(AldyToip.Name)):find("\097\100\109\105\110") and (not (string.lower(AldyToip.Name)):find(AldyToiAG(46452)) and (not (string.lower(AldyToip[AldyToiAG(46297)])):find("\097\100\109\105\110") and (not (string.lower(AldyToip.Name)):find("\099\111\118\101") and (not (string.lower(AldyToip[AldyToiAG(46297)])):find("\119\111\114\109") and not (string[AldyToiAG(46139)](AldyToip.Name)):find("\109\101\103\097\108\111\100\111\110"))))) then
				table[AldyToiAG(46565)]((getgenv())[AldyToiAG(46165)], AldyToip);
			end;
			if not (string[AldyToiAG(46139)](AldyToip[AldyToiAG(46297)])):find("\115\104\097\114\107") and (not (string.lower(AldyToip.Name)):find(AldyToiAG(46521)) and (not (string[AldyToiAG(46139)](AldyToip.Name)):find("\105\110\099\114\101\097\115\101") and (not (string[AldyToiAG(46139)](AldyToip.Name)):find("\097\100\109\105\110") and (not (string[AldyToiAG(46139)](AldyToip[AldyToiAG(46297)])):find("\099\111\118\101") and (not (string[AldyToiAG(46139)](AldyToip[AldyToiAG(46297)])):find(AldyToiAG(46203)) and not (string.lower(AldyToip.Name)):find("\109\101\103\097\108\111\100\111\110")))))) then
				table[AldyToiAG(46565)]((getgenv())[AldyToiAG(46336)], AldyToip);
			end;
		end;
	end;
end;
local AldyToiHD = AldyToii[AldyToiAG(46176)].Inventory.Main.Content[AldyToiAG(46504)].Inventory;
local function AldyToioD(AldyToip)
	local AldyToiX = AldyToiO:FindFirstChild("\073\116\101\109\115");
	if not AldyToiX then
		return nil;
	end;
	local AldyToie = AldyToip or AldyToiAG(46269);
	AldyToie = (AldyToie:gsub("\037\115\042\037\098\040\041", AldyToiAG(46269))):gsub("\094\037\115\042\040\046-\041\037\115\042\036", "\037\049");
	local AldyToiz = string[AldyToiAG(46139)](AldyToie);
	local AldyToic, AldyToiU = nil, 0;
	for AldyToip, AldyToiX in ipairs(AldyToiX:GetChildren()) do
		if AldyToiX:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			local AldyToip = string[AldyToiAG(46139)](AldyToiX.Name);
			if AldyToiz:find(AldyToip, 1, true) then
				if #AldyToiX.Name > AldyToiU then
					AldyToiU = #AldyToiX[AldyToiAG(46297)];
					AldyToic = AldyToiX;
				end;
			end;
		end;
	end;
	if AldyToic then
		return AldyToic;
	end;
	for AldyToip, AldyToiX in ipairs(AldyToiX:GetChildren()) do
		if AldyToiX:IsA(AldyToiAG(46075)) then
			local AldyToip, AldyToie = pcall(require, AldyToiX);
			if AldyToip and (type(AldyToie) == AldyToiAG(46195) and (AldyToie[AldyToiAG(46668)] and type(AldyToie[AldyToiAG(46668)][AldyToiAG(46297)]) == "\115\116\114\105\110\103")) then
				local AldyToip = AldyToie.Data.Name;
				local AldyToic = (AldyToip:gsub(AldyToiAG(46623), "")):gsub(AldyToiAG(46349), "\037\049");
				if string[AldyToiAG(46139)](AldyToic) == AldyToiz or string.lower(AldyToip) == AldyToiz then
					return AldyToiX;
				end;
			end;
		end;
	end;
	return nil;
end;
local function AldyToiVD(AldyToip, AldyToiX)
	if AldyToip:FindFirstChild(AldyToiAG(46519)) then
		AldyToip.SellPriceLabel.Text = "\036 " .. tostring(AldyToiX);
		return;
	end;
	local AldyToie = Instance.new("\084\101\120\116\076\097\098\101\108");
	AldyToie.Name = AldyToiAG(46519);
	AldyToie.Text = AldyToiAG(46550) .. tostring(AldyToiX);
	AldyToie.Size = UDim2[AldyToiAG(46439)](1, 0, 0, 24);
	AldyToie[AldyToiAG(46432)] = UDim2.new(0, 0, 0, AldyToip[AldyToiAG(46562)].AbsoluteSize[AldyToiAG(46536)] + 2);
	AldyToie[AldyToiAG(46078)] = 1;
	AldyToie.TextColor3 = Color3.fromRGB(255, 215, 0);
	AldyToie.Font = Enum[AldyToiAG(46255)][AldyToiAG(46244)];
	AldyToie[AldyToiAG(46628)] = true;
	AldyToie[AldyToiAG(46251)] = AldyToip;
	local AldyToiz = Instance[AldyToiAG(46439)]("\085\073\083\116\114\111\107\101");
	AldyToiz.Thickness = 2;
	AldyToiz.Color = Color3.fromRGB(0, 0, 0);
	AldyToiz.ApplyStrokeMode = Enum.ApplyStrokeMode[AldyToiAG(46119)];
	AldyToiz.Parent = AldyToie;
end;
local AldyToiYD = {};
(getgenv()).Tabs[AldyToiAG(46402)]:CreateDropdown({
	[AldyToiAG(46297)] = AldyToiAG(46507),
	[AldyToiAG(46617)] = (function()
		local AldyToip = {};
		for AldyToiX, AldyToie in ipairs((getgenv()).weathersNoShark) do
			table.insert(AldyToip, AldyToie.Name);
		end;
		return AldyToip;
	end)(),
	MultipleOptions = true,
	[AldyToiAG(46199)] = {},
	[AldyToiAG(46389)] = function(AldyToip)
		AldyToiYD = AldyToip;
	end,
});
local function AldyToiGD(AldyToip)
	task.spawn(function()
		while (getgenv()).toggleState.autoBuyWeather do
			if #AldyToiYD == 0 then
				task[AldyToiAG(46373)](1);
			else
				for AldyToip, AldyToiX in ipairs(AldyToiYD) do
					pcall(function()
						AldyToiO[AldyToiAG(46652)]._Index[AldyToiAG(46356)][AldyToiAG(46496)][AldyToiAG(46571)]:InvokeServer(AldyToiX);
					end);
					task.wait(.1);
				end;
				task[AldyToiAG(46373)](.5);
			end;
			task.wait(200);
		end;
	end);
end;
(getgenv())[AldyToiAG(46394)].Buy_Weather:CreateToggle({
	[AldyToiAG(46297)] = AldyToiAG(46243),
	CurrentValue = false,
	Flag = "\065\117\116\111\066\117\121\087\101\097\116\104\101\114\084\111\103\103\108\101",
	Callback = function(AldyToip)
		(getgenv())[AldyToiAG(46276)].autoBuyWeather = AldyToip;
		if AldyToip then
			if #AldyToiYD == 0 then
				AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46306), [AldyToiAG(46419)] = AldyToiAG(46588), [AldyToiAG(46188)] = 1 });
			else
				AldyToib:Notify({ [AldyToiAG(46329)] = "\065\117\116\111 \087\101\097\116\104\101\114", [AldyToiAG(46419)] = AldyToiAG(46131), [AldyToiAG(46188)] = 1 });
			end;
			AldyToiGD(true);
		else
			AldyToiGD(false);
			(getgenv()).toggleState.autoBuyWeather = false;
			AldyToib:Notify({ Title = AldyToiAG(46306), Content = AldyToiAG(46553), Duration = 1 });
		end;
	end,
});
for AldyToip, AldyToiX in ipairs((getgenv()).weathers) do
	(getgenv())[AldyToiAG(46394)][AldyToiAG(46402)]:CreateButton({ [AldyToiAG(46297)] = AldyToiX.Name .. " \083\112\097\119\110", Callback = function()
			pcall(function()
				AldyToiO.Packages[AldyToiAG(46598)][AldyToiAG(46356)].net[AldyToiAG(46571)]:InvokeServer(AldyToiX.Name);
			end);
		end });
end;
(getgenv())[AldyToiAG(46455)] = (getgenv())[AldyToiAG(46394)][AldyToiAG(46307)]:CreateToggle({
		[AldyToiAG(46297)] = "\240\159\155\146\083\104\111\119 \080\114\105\099\101 \086\097\108\117\101",
		CurrentValue = false,
		Flag = AldyToiAG(46154),
		Callback = function(AldyToip)
			(getgenv()).toggleState.priceValue = AldyToip;
			if AldyToip then
				AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46499), Content = "\072\097\114\103\097 \073\107\097\110 \100\105 \073\110\118\101\110\116\111\114\121 \097\107\097\110 \100\105\116\097\109\112\105\108\107\097\110 \100\105 \098\097\119\097\104 \110\097\109\097 \105\107\097\110", [AldyToiAG(46188)] = 1 });
			end;
		end,
	});
(getgenv())[AldyToiAG(46394)][AldyToiAG(46307)]:CreateParagraph({ [AldyToiAG(46329)] = "\065\117\116\111 \083\101\108\108 \084\104\114\101\115\104\111\108\100", [AldyToiAG(46419)] = AldyToiAG(46070) });
(getgenv()).AutoSellToggle = (getgenv())[AldyToiAG(46394)][AldyToiAG(46307)]:CreateToggle({
		[AldyToiAG(46297)] = AldyToiAG(46366),
		CurrentValue = false,
		[AldyToiAG(46614)] = AldyToiAG(46473),
		[AldyToiAG(46389)] = function(AldyToip)
			(getgenv()).toggleState.AutoSell = AldyToip;
		end,
	});
(getgenv())[AldyToiAG(46394)][AldyToiAG(46307)]:CreateInput({
	Name = "\240\159\142\175 \065\117\116\111 \083\101\108\108 \084\104\114\101\115\104\111\108\100",
	[AldyToiAG(46275)] = AldyToiAG(46460),
	Flag = "\065\117\116\111\083\101\108\108\084\104\114\101\115\104\111\108\100",
	[AldyToiAG(46094)] = false,
	Callback = function(AldyToip)
		local AldyToiX = tonumber(AldyToip);
		if AldyToiX then
			AldyToiJ = AldyToiX;
			AldyToib:Notify({ Title = AldyToiAG(46417), Content = AldyToiAG(46148) .. AldyToiJ, [AldyToiAG(46188)] = 1 });
		else
			AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46622), Content = AldyToiAG(46262), [AldyToiAG(46188)] = 1 });
		end;
	end,
});
(getgenv())[AldyToiAG(46394)][AldyToiAG(46307)]:CreateParagraph({ [AldyToiAG(46329)] = "\065\117\116\111 \083\101\108\108 \066\097\099\107\112\097\099\107", Content = "\070\105\115\104 \119\105\108\108 \098\101 \115\111\108\100 \097\117\116\111\109\097\116\105\099\097\108\108\121 \111\110\099\101 \116\104\101 \110\117\109\098\101\114 \111\102 \102\105\115\104 \105\110 \116\104\101 \105\110\118\101\110\116\111\114\121 \114\101\097\099\104\101\115 \116\104\101 \105\110\112\117\116 \116\104\114\101\115\104\111\108\100\046" });
(getgenv()).AutoSellToggleBP = (getgenv())[AldyToiAG(46394)][AldyToiAG(46307)]:CreateToggle({
		Name = AldyToiAG(46542),
		CurrentValue = false,
		[AldyToiAG(46614)] = "\065\117\116\111\083\101\108\108\066\080",
		[AldyToiAG(46389)] = function(AldyToip)
			(getgenv()).toggleState.AutoSellBP = AldyToip;
		end,
	});
(getgenv()).Tabs.AutoSellTab:CreateInput({
	[AldyToiAG(46297)] = "\240\159\142\175 \065\117\116\111 \083\101\108\108 \066\097\099\107\112\097\099\107",
	PlaceholderText = AldyToiAG(46112),
	Flag = AldyToiAG(46362),
	RemoveTextAfterFocusLost = false,
	Callback = function(AldyToip)
		local AldyToiX = tonumber(AldyToip);
		if AldyToiX then
			AldyToiH3 = AldyToiX;
			AldyToib:Notify({ [AldyToiAG(46329)] = "\084\104\114\101\115\104\111\108\100 \066\080 \068\105\112\101\114\098\097\114\117\105", Content = "\073\107\097\110 \097\107\097\110 \100\105\106\117\097\108 \111\116\111\109\097\116\105\115 \115\097\097\116 \106\117\109\108\097\104 \098\097\099\107\112\097\099\107 \109\101\110\099\097\112\097\105 " .. AldyToiH3, [AldyToiAG(46188)] = 1 });
		else
			AldyToib:Notify({ Title = AldyToiAG(46622), [AldyToiAG(46419)] = "\077\097\115\117\107\107\097\110 \097\110\103\107\097\044 \098\117\107\097\110 \116\101\107\115\046", [AldyToiAG(46188)] = 1 });
		end;
	end,
});
(getgenv()).Tabs[AldyToiAG(46353)]:CreateParagraph({ [AldyToiAG(46329)] = "\080\108\097\121\101\114 \083\101\116\116\105\110\103\115", Content = "\079\110\047\079\102\102\046\n\n" });
(getgenv())[AldyToiAG(46273)] = (getgenv())[AldyToiAG(46394)].PlayerSetTab:CreateToggle({
		[AldyToiAG(46297)] = AldyToiAG(46270),
		CurrentValue = false,
		[AldyToiAG(46614)] = "\077\097\120\082\111\100\066\097\105\116\084\111\103\103\108\101",
		Callback = function(AldyToip)
			if AldyToip then
				AldyToieD();
			end;
		end,
	});
local function AldyToiqD(AldyToip)
	local AldyToiX = AldyToii[AldyToiAG(46176)]:WaitForChild(AldyToiAG(46472));
	local AldyToie = AldyToiX:WaitForChild("\068\105\115\112\108\097\121");
	for AldyToiX, AldyToie in ipairs(AldyToie:GetChildren()) do
		if AldyToie:IsA(AldyToiAG(46133)) then
			AldyToie[AldyToiAG(46578)] = AldyToip;
		end;
	end;
end;
(getgenv()).Tabs[AldyToiAG(46353)]:CreateToggle({
	[AldyToiAG(46297)] = AldyToiAG(46584),
	CurrentValue = false,
	[AldyToiAG(46614)] = "\067\097\117\103\104\116\078\111\116\105\102\105\099\097\116\105\111\110",
	[AldyToiAG(46389)] = function(AldyToip)
		AldyToiqD(AldyToip);
	end,
});
local AldyToiwD = nil;
local function AldyToiLD(AldyToip)
	if AldyToip then
		local AldyToip = AldyToie:WaitForChild("\067\104\097\114\097\099\116\101\114\115", 5);
		local AldyToiX = AldyToip:FindFirstChild(AldyToiz[AldyToiAG(46297)]);
		if not AldyToiX then
			return;
		end;
		local AldyToic = AldyToiX:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
		if not AldyToic then
			return;
		end;
		AldyToiwD = Instance.new(AldyToiAG(46187));
		AldyToiwD[AldyToiAG(46595)] = true;
		AldyToiwD[AldyToiAG(46440)] = Vector3[AldyToiAG(46439)](10, 1, 10);
		AldyToiwD[AldyToiAG(46487)] = 1;
		AldyToiwD.CanCollide = true;
		AldyToiwD[AldyToiAG(46297)] = "\070\108\111\097\116\080\108\097\116\102\111\114\109";
		AldyToiwD.Parent = AldyToie;
		task[AldyToiAG(46081)](function()
			while AldyToiwD and AldyToiwD.Parent do
				pcall(function()
					AldyToiwD[AldyToiAG(46432)] = AldyToic[AldyToiAG(46432)] - Vector3.new(0, 3.5, 0);
				end);
				task[AldyToiAG(46373)](.1);
			end;
		end);
	else
		if AldyToiwD then
			AldyToiwD:Destroy();
			AldyToiwD = nil;
		end;
	end;
end;
(getgenv())[AldyToiAG(46658)] = (getgenv())[AldyToiAG(46394)].PlayerSetTab:CreateToggle({
		[AldyToiAG(46297)] = AldyToiAG(46278),
		CurrentValue = false,
		[AldyToiAG(46614)] = "\065\117\116\111\070\108\111\097\116\084\111\103\103\108\101",
		Callback = function(AldyToip)
			AldyToiLD(AldyToip);
		end,
	});
(getgenv()).Tabs[AldyToiAG(46353)]:CreateToggle({
	[AldyToiAG(46297)] = AldyToiAG(46210),
	[AldyToiAG(46331)] = true,
	[AldyToiAG(46614)] = "\051\100\082\101\110\100\101\114",
	Callback = function(AldyToip)
		pcall(function()
			AldyToiX:Set3dRenderingEnabled(AldyToip);
		end);
	end,
});
(getgenv()).toggleAnimation = (getgenv()).Tabs.PlayerSetTab:CreateToggle({
		[AldyToiAG(46297)] = AldyToiAG(46113),
		CurrentValue = false,
		Flag = "\102\105\115\104\105\110\103\065\110\105\109\097\116\105\111\110",
		Callback = function(AldyToip)
			(getgenv()).toggleState[AldyToiAG(46436)] = AldyToip;
		end,
	});
(getgenv()).CutsceneManager = {
		Disabled = false,
		[AldyToiAG(46339)] = require((game:GetService(AldyToiAG(46613))).Controllers[AldyToiAG(46339)]),
		[AldyToiAG(46265)] = nil,
		[AldyToiAG(46226)] = nil,
	};
local AldyToigD = { enabled = false, position = nil };
(getgenv()).CutsceneManager[AldyToiAG(46174)] = function()
		local AldyToip = (getgenv()).CutsceneManager;
		if not AldyToip[AldyToiAG(46265)] then
			AldyToip.OriginalPlay = AldyToip.CutsceneController.Play;
		end;
		if not AldyToip[AldyToiAG(46226)] then
			AldyToip[AldyToiAG(46226)] = AldyToip[AldyToiAG(46339)][AldyToiAG(46249)];
		end;
	end;
(getgenv())[AldyToiAG(46394)][AldyToiAG(46353)]:CreateParagraph({ [AldyToiAG(46329)] = "\076\111\099\107 \080\108\097\121\101\114 \080\111\115\105\116\105\111\110 \047 \065\110\099\104\111\114\101\100", [AldyToiAG(46419)] = "\076\111\099\107 \080\108\097\121\101\114 \080\111\115\105\116\105\111\110 \068\111\101\115\110\'\116 \119\111\114\107 \119\105\116\104 \065\117\116\111 \070\097\114\109\047\084\101\108\101\112\111\114\116" });
(getgenv())[AldyToiAG(46394)][AldyToiAG(46353)]:CreateToggle({ [AldyToiAG(46297)] = "\076\111\099\107 \080\108\097\121\101\114 \080\111\115\105\116\105\111\110", [AldyToiAG(46331)] = false, Callback = function(AldyToip)
		AldyToigD[AldyToiAG(46426)] = AldyToip;
		if not AldyToip then
			AldyToigD[AldyToiAG(46491)] = nil;
		elseif (getgenv())[AldyToiAG(46276)][AldyToiAG(46076)] and (AldyToii[AldyToiAG(46218)] and AldyToii[AldyToiAG(46218)][AldyToiAG(46500)]) then
			AldyToigD[AldyToiAG(46491)] = AldyToii[AldyToiAG(46218)].PrimaryPart[AldyToiAG(46144)];
		end;
	end });
task[AldyToiAG(46081)](function()
	while task[AldyToiAG(46373)]() do
		if AldyToigD.enabled and (AldyToigD[AldyToiAG(46491)] and (AldyToii.Character and AldyToii.Character[AldyToiAG(46500)])) then
			AldyToii.Character.PrimaryPart[AldyToiAG(46144)] = AldyToigD[AldyToiAG(46491)];
		end;
	end;
end);
(getgenv())[AldyToiAG(46394)].PlayerSetTab:CreateToggle({
	Name = AldyToiAG(46559),
	CurrentValue = false,
	Flag = "\065\117\116\111\083\097\118\101\080\111\115\105\116\105\111\110",
	Callback = function(AldyToip)
		(getgenv())[AldyToiAG(46544)] = AldyToip;
	end,
});
local AldyToibD = require(AldyToiO.Modules.GuiControl);
(getgenv())[AldyToiAG(46448)][AldyToiAG(46271)] = function()
		local AldyToip = (getgenv())[AldyToiAG(46448)];
		if AldyToip[AldyToiAG(46266)] then
			return;
		end;
		AldyToip[AldyToiAG(46266)] = true;
		AldyToip[AldyToiAG(46174)]();
		AldyToip[AldyToiAG(46339)].Play = function(AldyToip, ...)
				local AldyToiX = require(AldyToiO.Modules[AldyToiAG(46396)]);
				local AldyToie = game:GetService(AldyToiAG(46667));
				local AldyToiz = require(AldyToiO[AldyToiAG(46126)].QuestController);
				AldyToiX:SetHUDVisibility(true);
				AldyToie[AldyToiAG(46229)] = true;
				if AldyToiz:IsEnabled() == false then
					AldyToiz:SetEnabled(true);
				end;
			end;
		AldyToip.CutsceneController.Stop = function(...)
				AldyToip.OriginalStop(...);
			end;
	end;
(getgenv())[AldyToiAG(46448)][AldyToiAG(46456)] = function()
		local AldyToip = (getgenv())[AldyToiAG(46448)];
		if not AldyToip.Disabled then
			return;
		end;
		AldyToip.Disabled = false;
		AldyToip.SaveOriginal();
		AldyToip[AldyToiAG(46339)][AldyToiAG(46597)] = AldyToip[AldyToiAG(46265)];
		AldyToip.CutsceneController[AldyToiAG(46249)] = AldyToip[AldyToiAG(46226)];
	end;
(getgenv())[AldyToiAG(46394)][AldyToiAG(46353)]:CreateParagraph({ [AldyToiAG(46329)] = AldyToiAG(46480), [AldyToiAG(46419)] = AldyToiAG(46219) });
(getgenv())[AldyToiAG(46394)].PlayerSetTab:CreateToggle({
	[AldyToiAG(46297)] = "\077\097\116\105\107\097\110 \067\117\116\115\099\101\110\101 \047 \065\110\105\109\097\115\105",
	CurrentValue = false,
	[AldyToiAG(46614)] = "\084\111\103\103\108\101\067\117\116\115\099\101\110\101",
	Callback = function(AldyToip)
		if AldyToip then
			(getgenv()).CutsceneManager[AldyToiAG(46271)]();
		else
			(getgenv()).CutsceneManager.Enable();
		end;
	end,
});
(getgenv()).savedPos = (getgenv())[AldyToiAG(46246)] or nil;
(getgenv()).automega = (getgenv()).automega or false;
local AldyToiJD = false;
(getgenv()).autoMegaHandler = function()
		task[AldyToiAG(46081)](function()
			while task.wait(4) do
				if (getgenv())[AldyToiAG(46289)] then
					local AldyToip = AldyToie:FindFirstChild(AldyToiAG(46309));
					local AldyToiX = nil;
					if AldyToip then
						for AldyToip, AldyToie in ipairs(AldyToip:GetChildren()) do
							if AldyToie[AldyToiAG(46297)] == "\080\114\111\112\115" then
								local AldyToip = AldyToie:FindFirstChild(AldyToiAG(46378));
								if AldyToip then
									for AldyToip, AldyToie in ipairs(AldyToip:GetChildren()) do
										if AldyToie:IsA("\066\097\115\101\080\097\114\116") then
											AldyToiX = AldyToie.Position;
											break;
										end;
									end;
								end;
							end;
						end;
					end;
					local AldyToic = AldyToie[AldyToiAG(46564)]:FindFirstChild(AldyToiz[AldyToiAG(46297)]);
					local AldyToiU = AldyToic and AldyToic:FindFirstChild(AldyToiAG(46656));
					if AldyToiX and AldyToiU then
						AldyToiLD(true);
						AldyToiJD = true;
						local AldyToip = (AldyToiU.Position - AldyToiX)[AldyToiAG(46469)];
						if not (getgenv())[AldyToiAG(46097)] then
							(getgenv()).savedCFrame = AldyToiU.CFrame;
						end;
						if AldyToiU.Anchored then
							AldyToiU.Anchored = false;
							task[AldyToiAG(46373)](.1);
						end;
						if AldyToip > 75 then
							AldyToiU.CFrame = CFrame.new(AldyToiX + Vector3.new(20, 30, 0));
							if AldyToigD.enabled then
								AldyToigD[AldyToiAG(46491)] = AldyToiU.CFrame;
							end;
						end;
						task.wait(1);
						if not (getgenv()).toggleState.bool_autoFish then
							(getgenv())[AldyToiAG(46276)][AldyToiAG(46076)] = true;
							(getgenv())[AldyToiAG(46592)]:Set(true);
							(getgenv()).floatToggle:Set(true);
							AldyToiMD(true);
						end;
					else
						if (getgenv())[AldyToiAG(46097)] and AldyToiU then
							AldyToiU.CFrame = (getgenv()).savedCFrame;
							(getgenv()).savedCFrame = nil;
							AldyToiJD = false;
						end;
					end;
				end;
			end;
		end);
	end;
(getgenv())[AldyToiAG(46301)]();
(getgenv())[AldyToiAG(46394)].EventTab:CreateToggle({
	[AldyToiAG(46297)] = "\065\117\116\111 \077\101\103\097\108\111\100\111\110",
	[AldyToiAG(46331)] = false,
	[AldyToiAG(46614)] = AldyToiAG(46169),
	Callback = function(AldyToip)
		(getgenv())[AldyToiAG(46289)] = AldyToip;
	end,
});
local AldyToiND = AldyToiB:WaitReplion("\069\118\101\110\116\115");
local AldyToiaD = {
		"\065\100\109\105\110 - \066\108\097\099\107 \072\111\108\101",
		AldyToiAG(46430),
		"\065\100\109\105\110 - \077\101\116\101\111\114 \082\097\105\110",
		"\065\100\109\105\110 - \083\104\111\099\107\101\100",
		"\071\104\111\115\116 \083\104\097\114\107 \072\117\110\116",
		AldyToiAG(46378),
		"\083\104\097\114\107 \072\117\110\116",
		AldyToiAG(46102),
	};
local AldyToidD = AldyToii.Character and (AldyToii[AldyToiAG(46218)]:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116") and AldyToii.Character.HumanoidRootPart[AldyToiAG(46144)]) or nil;
local AldyToiKD = nil;
local AldyToiDD = {};
local AldyToiTD = false;
(getgenv()).EventData = (getgenv()).EventData or {};
(getgenv())[AldyToiAG(46212)].eventList = {};
(getgenv()).EventData[AldyToiAG(46391)] = nil;
(getgenv()).updateEventDropdown = function()
		(getgenv())[AldyToiAG(46212)].eventList = {};
		local AldyToip = nil;
		local AldyToiX = AldyToie:FindFirstChild(AldyToiAG(46309));
		if AldyToiX then
			for AldyToip, AldyToiX in ipairs(AldyToiX:GetChildren()) do
				if AldyToiX[AldyToiAG(46297)] == "\080\114\111\112\115" then
					for AldyToip, AldyToiX in ipairs(AldyToiX:GetChildren()) do
						if AldyToiX:IsA("\077\111\100\101\108") then
							local AldyToip = AldyToiX[AldyToiAG(46500)] or AldyToiX:FindFirstChildWhichIsA(AldyToiAG(46470));
							if AldyToip and not (string[AldyToiAG(46139)](AldyToiX.Name)):find("\103\108\111\119") then
								table[AldyToiAG(46565)]((getgenv()).EventData.eventList, { name = AldyToiX.Name, [AldyToiAG(46491)] = AldyToip[AldyToiAG(46432)] });
							end;
						elseif AldyToiX:IsA("\066\097\115\101\080\097\114\116") then
							if not (string.lower(AldyToiX[AldyToiAG(46297)])):find(AldyToiAG(46574)) then
								table.insert((getgenv()).EventData[AldyToiAG(46506)], { name = AldyToiX[AldyToiAG(46297)], [AldyToiAG(46491)] = AldyToiX[AldyToiAG(46432)] });
							end;
						end;
					end;
				end;
			end;
		end;
		local AldyToic = { "\083\101\108\101\099\116 \069\118\101\110\116" };
		for AldyToip, AldyToiX in ipairs((getgenv())[AldyToiAG(46212)][AldyToiAG(46506)]) do
			table.insert(AldyToic, AldyToiX[AldyToiAG(46268)]);
		end;
		if #(getgenv()).EventData[AldyToiAG(46506)] == 0 then
			AldyToic = { "\078\111 \101\118\101\110\116\115 \102\111\117\110\100" };
		end;
		if (getgenv()).EventData[AldyToiAG(46391)] then
			(getgenv()).EventData[AldyToiAG(46391)]:Set(AldyToic);
		else
			(getgenv()).EventData[AldyToiAG(46391)] = (getgenv()).Tabs[AldyToiAG(46230)]:CreateDropdown({
					Name = AldyToiAG(46611),
					Options = AldyToic,
					CurrentOption = "\083\101\108\101\099\116 \069\118\101\110\116",
					[AldyToiAG(46279)] = false,
					[AldyToiAG(46389)] = function(AldyToip)
						local AldyToiX = type(AldyToip) == AldyToiAG(46195) and AldyToip[1] or AldyToip;
						if not AldyToiX or AldyToiX == AldyToiAG(46209) or AldyToiX == AldyToiAG(46285) then
							return;
						end;
						for AldyToip, AldyToic in ipairs((getgenv()).EventData[AldyToiAG(46506)]) do
							if AldyToic.name == AldyToiX then
								local AldyToip = AldyToie.Characters:FindFirstChild(AldyToiz.Name);
								local AldyToiX = AldyToip and AldyToip:FindFirstChild(AldyToiAG(46656));
								if AldyToiX then
									(getgenv()).floatToggle:Set(true);
									if AldyToiX[AldyToiAG(46595)] then
										AldyToiX[AldyToiAG(46595)] = false;
										task.wait(.1);
									end;
									AldyToiX[AldyToiAG(46144)] = CFrame.new(AldyToic[AldyToiAG(46491)] + Vector3[AldyToiAG(46439)](0, 42, 0));
									if AldyToigD.enabled then
										AldyToigD[AldyToiAG(46491)] = AldyToiX.CFrame;
									end;
								else
									AldyToib:Notify({ [AldyToiAG(46329)] = "\226\157\140 \084\101\108\101\112\111\114\116 \070\097\105\108\101\100", Content = AldyToiAG(46223) .. AldyToic.name, [AldyToiAG(46188)] = 1 });
								end;
								break;
							end;
						end;
					end,
				});
		end;
	end;
(getgenv())[AldyToiAG(46394)].EventTab:CreateButton({ [AldyToiAG(46297)] = AldyToiAG(46186), Callback = function()
		(getgenv()).updateEventDropdown();
		AldyToib:Notify({ [AldyToiAG(46329)] = "\082\101\102\114\101\115\104\101\100", Content = "\069\118\101\110\116 \108\105\115\116 \104\097\115 \098\101\101\110 \114\101\102\114\101\115\104\101\100\046", Duration = 1 });
	end });
(getgenv()).updateEventDropdown();
local AldyToiCD = {
		"\077\101\103\097\108\111\100\111\110 \072\117\110\116",
		"\065\100\109\105\110 \069\118\101\110\116",
		"\071\104\111\115\116 \087\111\114\109",
		AldyToiAG(46102),
		"\083\104\097\114\107 \072\117\110\116",
		"\071\104\111\115\116 \083\104\097\114\107 \072\117\110\116",
		"\083\104\111\099\107\101\100",
		"\066\108\097\099\107 \072\111\108\101",
		"\077\101\116\101\111\114 \082\097\105\110",
	};
local AldyToiQD = {
		enabled = false,
		selectedEvents = {},
		originalPosition = nil,
		platform = nil,
		[AldyToiAG(46503)] = false,
		isAtEvent = false,
		[AldyToiAG(46198)] = nil,
	};
local AldyToimD = (getgenv())[AldyToiAG(46394)][AldyToiAG(46230)]:CreateLabel("\087\097\105\116\105\110\103 \102\111\114 \101\118\101\110\116\046\046\046");
local function AldyToitD(AldyToip)
	local AldyToiX = AldyToie:FindFirstChild(AldyToiAG(46309));
	if not AldyToiX then
		return nil;
	end;
	local AldyToiz = AldyToip:lower();
	local AldyToic = nil;
	for AldyToip, AldyToiX in ipairs(AldyToiX:GetChildren()) do
		if AldyToiX[AldyToiAG(46297)] == AldyToiAG(46631) then
			for AldyToip, AldyToie in ipairs(AldyToiX:GetChildren()) do
				if AldyToie.Name:lower() == AldyToiz then
					if AldyToie:IsA(AldyToiAG(46492)) then
						local AldyToip = AldyToie.PrimaryPart or AldyToie:FindFirstChildWhichIsA(AldyToiAG(46470));
						if AldyToip then
							return AldyToip;
						else
 
						end;
					elseif AldyToie:IsA(AldyToiAG(46470)) then
						return AldyToie;
					end;
				end;
				for AldyToip, AldyToie in ipairs(AldyToie:GetDescendants()) do
					if AldyToie:IsA("\084\101\120\116\076\097\098\101\108") then
						if AldyToie[AldyToiAG(46639)]:lower() == AldyToiz then
							local AldyToip = AldyToie;
							while AldyToip and AldyToip ~= AldyToiX do
								if AldyToip:IsA("\066\097\115\101\080\097\114\116") then
									return AldyToip;
								end;
								AldyToip = AldyToip.Parent;
							end;
						end;
					end;
				end;
			end;
		end;
	end;
	return nil;
end;
local AldyToiuD = (getgenv())[AldyToiAG(46394)].EventTab:CreateDropdown({
		Name = AldyToiAG(46298),
		[AldyToiAG(46617)] = AldyToiCD,
		[AldyToiAG(46199)] = {},
		[AldyToiAG(46442)] = true,
		[AldyToiAG(46614)] = AldyToiAG(46315),
		[AldyToiAG(46389)] = function(AldyToip)
			AldyToiQD[AldyToiAG(46620)] = AldyToip;
		end,
	});
local AldyToiSD = (getgenv()).Tabs[AldyToiAG(46230)]:CreateToggle({
		Name = AldyToiAG(46253),
		CurrentValue = false,
		Flag = "\069\118\101\110\116\084\080\095\084\111\103\103\108\101",
		[AldyToiAG(46389)] = function(AldyToip)
			AldyToiQD[AldyToiAG(46426)] = AldyToip;
			if not AldyToip and AldyToiQD.isAtEvent then
				if AldyToii and (AldyToii.Character and (AldyToii[AldyToiAG(46218)].PrimaryPart and AldyToiQD[AldyToiAG(46343)])) then
					local AldyToip = AldyToii[AldyToiAG(46218)].PrimaryPart;
					AldyToip.CFrame = AldyToiQD.originalPosition;
				end;
				AldyToiQD[AldyToiAG(46180)] = false;
				AldyToimD:Set(AldyToiAG(46653));
			end;
		end,
	});
task.spawn(function()
	while task.wait(5) do
		local AldyToip = AldyToii.Character.PrimaryPart;
		local AldyToiX = nil;
		for AldyToip, AldyToie in ipairs(AldyToiQD[AldyToiAG(46620)]) do
			local AldyToiz = AldyToitD(AldyToie);
			if AldyToiz then
				AldyToiX = AldyToiz;
				AldyToiQD[AldyToiAG(46198)] = AldyToie;
				break;
			end;
		end;
		if AldyToiQD.enabled and (AldyToiX and not AldyToiQD.isAtEvent) then
			AldyToiQD[AldyToiAG(46180)] = true;
			AldyToiLD(true);
			(getgenv())[AldyToiAG(46658)]:Set(true);
			if not AldyToiQD.originalPosition then
				AldyToiQD.originalPosition = AldyToip.CFrame;
			end;
			if AldyToip[AldyToiAG(46595)] then
				AldyToip[AldyToiAG(46595)] = false;
				task.wait(.1);
			end;
			AldyToip.CFrame = AldyToiX.CFrame * CFrame[AldyToiAG(46439)](0, 30, 20);
			if AldyToigD[AldyToiAG(46426)] then
				AldyToigD[AldyToiAG(46491)] = AldyToip[AldyToiAG(46144)];
			end;
			task.wait(.8);
			AldyToimD:Set("\084\101\108\101\112\111\114\116\101\100 \116\111 " .. AldyToiQD[AldyToiAG(46198)]);
			if not (getgenv())[AldyToiAG(46276)].bool_autoFish then
				(getgenv())[AldyToiAG(46276)].bool_autoFish = true;
				(getgenv())[AldyToiAG(46592)]:Set(true);
				(getgenv()).floatToggle:Set(true);
				AldyToiMD(true);
			end;
		elseif not AldyToiX and AldyToiQD.isAtEvent then
			AldyToip[AldyToiAG(46144)] = AldyToiQD.originalPosition;
			AldyToiQD[AldyToiAG(46180)] = false;
			AldyToimD:Set(AldyToiAG(46653));
		end;
	end;
end);
local AldyToijD = (getgenv()).Tabs[AldyToiAG(46353)]:CreateToggle({
		Name = AldyToiAG(46517),
		[AldyToiAG(46331)] = false,
		[AldyToiAG(46614)] = "\065\117\116\111\065\099\099\101\112\116\084\114\097\100\101\084\111\103\103\108\101",
		Callback = function(AldyToip)
			if AldyToip then
				AldyToiR3(true);
				AldyTois3();
			else
				AldyToiR3(false);
			end;
		end,
	});
(getgenv())[AldyToiAG(46392)] = hookmetamethod(game, "\095\095\110\097\109\101\099\097\108\108", newcclosure(function(AldyToip, ...)
		local AldyToiX = getnamecallmethod();
		local AldyToie = { ... };
		if AldyToiX == AldyToiAG(46644) and tostring(AldyToip) == AldyToiAG(46100) then
			return nil;
		end;
		return (getgenv())[AldyToiAG(46392)](AldyToip, unpack(AldyToie));
	end));
(getgenv()).Tabs[AldyToiAG(46353)]:CreateToggle({
	[AldyToiAG(46297)] = AldyToiAG(46068),
	[AldyToiAG(46331)] = false,
	Flag = AldyToiAG(46295),
	Callback = function(AldyToip)
		local AldyToiX = require(AldyToiO.Packages.Net);
		local AldyToie = AldyToiX:RemoteFunction(AldyToiAG(46346));
		AldyToie:InvokeServer(AldyToip);
	end,
});
(getgenv()).universalNoclip = (getgenv())[AldyToiAG(46545)] or false;
(getgenv()).originalCollisionState = (getgenv()).originalCollisionState or {};
local function AldyToiyD()
	local AldyToip = {};
	for AldyToiX, AldyToie in ipairs(AldyToie:GetChildren()) do
		if string.find(AldyToie.Name:lower(), AldyToiAG(46380)) then
			table.insert(AldyToip, AldyToie);
		end;
	end;
	return AldyToip;
end;
local AldyToirD = {};
(getgenv())[AldyToiAG(46394)][AldyToiAG(46353)]:CreateToggle({ Name = AldyToiAG(46084), [AldyToiAG(46331)] = false, [AldyToiAG(46389)] = function(AldyToip)
		(getgenv())[AldyToiAG(46276)].infJump = AldyToip;
	end });
AldyToic.JumpRequest:Connect(function()
	if (getgenv())[AldyToiAG(46276)].infJump and (AldyToiz.Character and AldyToiz.Character:FindFirstChildOfClass("\072\117\109\097\110\111\105\100")) then
		(AldyToiz[AldyToiAG(46218)]:FindFirstChildOfClass(AldyToiAG(46358))):ChangeState("\074\117\109\112\105\110\103");
	end;
end);
(getgenv())[AldyToiAG(46394)][AldyToiAG(46353)]:CreateSlider({
	[AldyToiAG(46297)] = AldyToiAG(46539),
	Range = { 15, 500 },
	[AldyToiAG(46604)] = 5,
	[AldyToiAG(46331)] = 15,
	[AldyToiAG(46389)] = function(AldyToip)
		local AldyToiX = AldyToiz.Character and AldyToiz.Character:FindFirstChildOfClass(AldyToiAG(46358));
		if AldyToiX then
			AldyToiX[AldyToiAG(46207)] = AldyToip;
		end;
	end,
});
(getgenv()).islandLocation = (getgenv())[AldyToiAG(46153)] or {
		["\048\049"] = { [AldyToiAG(46268)] = "\067\114\097\116\101\114 \073\115\108\097\110\100", position = Vector3[AldyToiAG(46439)](1014.896, 20.921, 5071.434) },
		[AldyToiAG(46461)] = { [AldyToiAG(46268)] = AldyToiAG(46397), [AldyToiAG(46491)] = Vector3.new(-3598.539, -279.646, -1634.287) },
		["\048\051"] = { [AldyToiAG(46268)] = AldyToiAG(46420), position = Vector3[AldyToiAG(46439)](-3677, 107, -912) },
		["\048\052"] = { [AldyToiAG(46268)] = AldyToiAG(46152), [AldyToiAG(46491)] = Vector3.new(-2.382, 4.5, 2839.47) },
		["\048\053"] = { [AldyToiAG(46268)] = "\084\114\111\112\105\099\097\108 \071\114\111\118\101", [AldyToiAG(46491)] = Vector3.new(-2051.413, 6.268, 3662) },
		[AldyToiAG(46647)] = { [AldyToiAG(46268)] = "\069\115\111\116\101\114\105\099 \068\101\112\116\104\115", position = Vector3.new(3209.068, -1302.855, 1411.844) },
		[AldyToiAG(46067)] = { name = "\069\115\111\116\101\114\105\099 \073\115\108\097\110\100", position = Vector3[AldyToiAG(46439)](2031.415, 27.397, 1394.621) },
		[AldyToiAG(46663)] = { name = "\075\111\104\097\110\097", position = Vector3.new(-678.811, 4.935, 708.578) },
		[AldyToiAG(46287)] = { [AldyToiAG(46268)] = "\075\111\104\097\110\097 \086\111\108\099\097\110\111", position = Vector3[AldyToiAG(46439)](-516.92, 22, 191) },
		["\049\048"] = { name = "\083\105\115\121\112\104\117\115", position = Vector3[AldyToiAG(46439)](-3667.556, -135.574, -900.99) },
		[AldyToiAG(46625)] = { [AldyToiAG(46268)] = AldyToiAG(46607), position = Vector3[AldyToiAG(46439)](-1471, -3, 1929) },
		[AldyToiAG(46347)] = { [AldyToiAG(46268)] = "\087\105\110\116\101\114 \070\101\115\116", position = Vector3[AldyToiAG(46439)](1611, 4, 3280) },
		[AldyToiAG(46580)] = { [AldyToiAG(46268)] = "\067\111\114\097\108 \082\101\101\102\115", position = Vector3[AldyToiAG(46439)](-2949.694, 63.25, 2248.52) },
	};
for AldyToip, AldyToiX in pairs((getgenv()).islandLocation) do
	(getgenv())[AldyToiAG(46394)][AldyToiAG(46231)]:CreateButton({ [AldyToiAG(46297)] = AldyToiX.name, Callback = function()
			local AldyToip = AldyToie.Characters:FindFirstChild(AldyToiz[AldyToiAG(46297)]);
			local AldyToic = AldyToip and AldyToip:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
			if AldyToic then
				AldyToic[AldyToiAG(46144)] = CFrame.new(AldyToiX.position + Vector3.new(5, 5, 0));
				AldyToib:Notify({ Title = "\084\101\108\101\112\111\114\116 \083\117\099\099\101\115\115", Content = "\084\101\108\101\112\111\114\116\101\100 \116\111 " .. AldyToiX.name, Duration = 1 });
			else
				AldyToib:Notify({ Title = "\084\101\108\101\112\111\114\116 \070\097\105\108\101\100", Content = AldyToiAG(46294), [AldyToiAG(46188)] = 1 });
			end;
		end });
end;
local AldyToivD = AldyToiO:WaitForChild(AldyToiAG(46296));
(getgenv())[AldyToiAG(46394)][AldyToiAG(46231)]:CreateSection(AldyToiAG(46367));
for AldyToip, AldyToiX in ipairs(AldyToivD:GetChildren()) do
	(getgenv()).Tabs[AldyToiAG(46231)]:CreateButton({ Name = "\084\101\108\101\112\111\114\116 \116\111 \078\080\067\058 " .. AldyToiX.Name, [AldyToiAG(46389)] = function()
			local AldyToip = AldyToiz[AldyToiAG(46218)];
			local AldyToie = AldyToip and AldyToip:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
			if not AldyToie then
				AldyToib:Notify({ Title = "\226\157\140 \084\101\108\101\112\111\114\116 \070\097\105\108\101\100", Content = AldyToiAG(46105), Duration = 1 });
				return;
			end;
			local AldyToic, AldyToiU = pcall(function()
					return AldyToiX:GetPivot();
				end);
			if AldyToic and typeof(AldyToiU) == AldyToiAG(46144) then
				local AldyToip = AldyToiU.LookVector;
				local AldyToiz = Vector3.new(0, 5, 0) + AldyToip * 5;
				AldyToie[AldyToiAG(46144)] = AldyToiU + AldyToiz;
				AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46263), [AldyToiAG(46419)] = AldyToiAG(46352) .. AldyToiX[AldyToiAG(46297)], [AldyToiAG(46188)] = 1 });
			else
				AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46304), Content = AldyToiAG(46122) .. AldyToiX[AldyToiAG(46297)], [AldyToiAG(46188)] = 1 });
			end;
		end });
end;
local AldyToiED = (getgenv())[AldyToiAG(46394)].SettingsTab:CreateParagraph({ Title = AldyToiAG(46236), Content = AldyToiAG(46484) .. (#AldyToip:GetPlayers() .. (AldyToiAG(46332) .. game.PlaceId)) });
local AldyToikD = 0;
local function AldyToiAD()
	AldyToikD = 0;
	for AldyToip, AldyToiX in ipairs(AldyToiHD:GetChildren()) do
		if AldyToiX:FindFirstChild(AldyToiAG(46562)) then
			local AldyToip = AldyToiX[AldyToiAG(46562)].Text;
			local AldyToie = AldyToioD(AldyToip);
			if AldyToie then
				local AldyToip, AldyToiz = pcall(require, AldyToie);
				if AldyToip and (AldyToiz and (AldyToiz[AldyToiAG(46668)] and AldyToiz.SellPrice)) then
					AldyToiVD(AldyToiX, AldyToiz.SellPrice);
				end;
				if AldyToiz and (AldyToiz[AldyToiAG(46124)] and AldyToiz[AldyToiAG(46668)].Type == AldyToiAG(46569)) then
					AldyToikD = AldyToikD + AldyToiz.SellPrice;
				end;
			end;
		end;
	end;
	local AldyToip = (game:GetService("\080\108\097\121\101\114\115")).LocalPlayer;
	local AldyToiX = (AldyToip:WaitForChild("\080\108\097\121\101\114\071\117\105")):WaitForChild(AldyToiAG(46348));
	local AldyToie = AldyToiX:WaitForChild(AldyToiAG(46520));
	local AldyToiz = AldyToie:WaitForChild("\083\101\108\108\065\108\108");
	local AldyToic = AldyToiz:WaitForChild(AldyToiAG(46170));
	AldyToic.Text = AldyToikD;
end;
if (getgenv()).toggleState[AldyToiAG(46154)] then
	AldyToiAD();
end;
(getgenv()).Tabs[AldyToiAG(46547)]:CreateButton({ Name = AldyToiAG(46261), [AldyToiAG(46389)] = function()
		local AldyToip = string[AldyToiAG(46629)](AldyToiAG(46095), game.PlaceId, game.JobId);
		setclipboard(AldyToip);
		AldyToib:Notify({ [AldyToiAG(46329)] = "\076\105\110\107 \083\101\114\118\101\114 \071\097\109\101", [AldyToiAG(46419)] = "\076\105\110\107 \115\117\100\097\104 \100\105\099\111\112\121 \107\101 \099\108\105\112\098\111\097\114\100\046", [AldyToiAG(46188)] = 1 });
	end });
local AldyToifD = nil;
local AldyToixD = (getgenv())[AldyToiAG(46394)].SettingsTab:CreateInput({
		Name = AldyToiAG(46293),
		[AldyToiAG(46275)] = "\077\097\115\117\107\107\097\110 \108\105\110\107 \083\101\114\118\101\114",
		[AldyToiAG(46094)] = false,
		[AldyToiAG(46389)] = function(AldyToip)
			AldyToifD = AldyToip;
		end,
	});
(getgenv()).Tabs[AldyToiAG(46547)]:CreateButton({ [AldyToiAG(46297)] = AldyToiAG(46428), Callback = function()
		local AldyToip = AldyToifD;
		if not AldyToip or AldyToip == AldyToiAG(46269) then
			warn(AldyToiAG(46634));
			return;
		end;
		if AldyToip:find("\112\108\097\099\101\073\100\061") and AldyToip:find("\103\097\109\101\073\110\115\116\097\110\099\101\073\100\061") then
			local AldyToiX = AldyToip:match("\112\108\097\099\101\073\100\061\040\037\100\043\041");
			local AldyToie = AldyToip:match(AldyToiAG(46576));
			if not AldyToiX or not AldyToie then
				AldyToib:Notify({ Title = AldyToiAG(46435), [AldyToiAG(46419)] = AldyToiAG(46619), [AldyToiAG(46188)] = 2 });
				return;
			end;
			AldyToiX = tonumber(AldyToiX);
			local AldyToic, AldyToiU = pcall(function()
					AldyTois:TeleportToPlaceInstance(AldyToiX, AldyToie, AldyToiz);
				end);
			if not AldyToic then
				AldyToib:Notify({ Title = AldyToiAG(46384), Content = tostring(AldyToiU), [AldyToiAG(46188)] = 2 });
			end;
		elseif AldyToip:find("\115\104\097\114\101\037\063\099\111\100\101\061") then
			local AldyToiX = AldyToip:match(AldyToiAG(46326));
			local AldyToie = game.PlaceId;
			if not AldyToiX then
				AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46435), Content = AldyToiAG(46482), Duration = 2 });
				return;
			end;
			local AldyToic, AldyToiU = pcall(function()
					AldyTois:TeleportToPrivateServer(AldyToie, AldyToiX, { AldyToiz });
				end);
			if not AldyToic then
				AldyToib:Notify({ Title = AldyToiAG(46384), Content = tostring(AldyToiU), Duration = 2 });
			end;
		else
			AldyToib:Notify({ Title = "\069\114\114\111\114", Content = AldyToiAG(46096), Duration = 2 });
		end;
	end });
task.spawn(function()
	while task[AldyToiAG(46373)](40) do
		AldyToiED:Set({ [AldyToiAG(46329)] = "\083\101\114\118\101\114 \073\110\102\111", [AldyToiAG(46419)] = "\080\108\097\121\101\114\115 \105\110 \115\101\114\118\101\114\058 " .. (#AldyToip:GetPlayers() .. ("\n\080\108\097\099\101\073\100\058 " .. game[AldyToiAG(46185)])) });
	end;
end);
local AldyToiPD = {};
local function AldyToilD()
	AldyToiPD.Terrain = { [AldyToiAG(46669)] = workspace.Terrain[AldyToiAG(46669)], WaterWaveSpeed = workspace[AldyToiAG(46485)].WaterWaveSpeed, WaterReflectance = workspace[AldyToiAG(46485)][AldyToiAG(46206)] };
	AldyToiPD.Parts = {};
	AldyToiPD[AldyToiAG(46073)] = {};
	AldyToiPD.Meshes = {};
	for AldyToip, AldyToiX in pairs(game:GetDescendants()) do
		if AldyToiX:IsA("\066\097\115\101\080\097\114\116") then
			AldyToiPD.Parts[AldyToiX] = {
					Color = AldyToiX[AldyToiAG(46319)],
					[AldyToiAG(46670)] = AldyToiX.Material,
					Reflectance = AldyToiX[AldyToiAG(46612)],
					[AldyToiAG(46655)] = AldyToiX.CastShadow,
					Transparency = AldyToiX[AldyToiAG(46487)],
				};
		elseif AldyToiX:IsA(AldyToiAG(46121)) or AldyToiX:IsA(AldyToiAG(46299)) then
			AldyToiPD.Decals[AldyToiX] = { [AldyToiAG(46487)] = AldyToiX.Transparency, Texture = AldyToiX.Texture };
		elseif AldyToiX:IsA(AldyToiAG(46443)) then
			AldyToiPD[AldyToiAG(46099)][AldyToiX] = { TextureId = AldyToiX[AldyToiAG(46288)] };
		end;
	end;
end;
local function AldyToinD()
	AldyToilD();
	local AldyToip = workspace.Terrain;
	local AldyToiX = (game:GetService(AldyToiAG(46627))).LocalPlayer;
	if sethiddenproperty then
		sethiddenproperty(AldyToip, "\087\097\116\101\114\087\097\118\101\083\105\122\101", 0);
		sethiddenproperty(AldyToip, "\087\097\116\101\114\087\097\118\101\083\112\101\101\100", 0);
		sethiddenproperty(AldyToip, AldyToiAG(46206), 0);
	else
		AldyToip.WaterWaveSize = 0;
		AldyToip.WaterWaveSpeed = 0;
		AldyToip.WaterReflectance = 0;
	end;
	for AldyToip, AldyToie in pairs(game:GetDescendants()) do
		if AldyToie:IsA(AldyToiAG(46470)) then
			if not (AldyToiX and AldyToie:IsDescendantOf(AldyToiX[AldyToiAG(46218)])) then
				AldyToie[AldyToiAG(46670)] = Enum.Material.SmoothPlastic;
				AldyToie.Color = Color3[AldyToiAG(46364)](120, 120, 120);
				AldyToie.Reflectance = 0;
				AldyToie[AldyToiAG(46655)] = false;
			end;
		elseif AldyToie:IsA(AldyToiAG(46121)) or AldyToie:IsA("\084\101\120\116\117\114\101") then
			if not (AldyToie.Name == "\102\097\099\101" and AldyToie.Parent:IsA(AldyToiAG(46204))) then
				AldyToie[AldyToiAG(46487)] = 1;
				AldyToie.Texture = AldyToiAG(46269);
			end;
		elseif AldyToie:IsA(AldyToiAG(46481)) or AldyToie:IsA("\084\114\097\105\108") or AldyToie:IsA("\066\101\097\109") then
			AldyToie.Enabled = false;
		elseif AldyToie:IsA("\083\117\114\102\097\099\101\065\112\112\101\097\114\097\110\099\101") then
			AldyToie:Destroy();
		elseif AldyToie:IsA(AldyToiAG(46443)) then
			AldyToie[AldyToiAG(46288)] = AldyToiAG(46269);
		end;
	end;
	(settings()).Rendering[AldyToiAG(46245)] = Enum[AldyToiAG(46245)][AldyToiAG(46556)];
	(settings()).Rendering[AldyToiAG(46675)] = Enum.QualityLevel[AldyToiAG(46556)];
end;
local function AldyToiWD()
	local AldyToip = workspace.Terrain;
	if AldyToiPD.Terrain then
		AldyToip.WaterWaveSize = AldyToiPD[AldyToiAG(46485)].WaterWaveSize;
		AldyToip.WaterWaveSpeed = AldyToiPD.Terrain.WaterWaveSpeed;
		AldyToip[AldyToiAG(46206)] = AldyToiPD[AldyToiAG(46485)][AldyToiAG(46206)];
	end;
	for AldyToip, AldyToiX in pairs(AldyToiPD.Parts) do
		if AldyToip and AldyToip.Parent then
			for AldyToiX, AldyToie in pairs(AldyToiX) do
				AldyToip[AldyToiX] = AldyToie;
			end;
		end;
	end;
	for AldyToip, AldyToiX in pairs(AldyToiPD.Decals) do
		if AldyToip and AldyToip.Parent then
			for AldyToiX, AldyToie in pairs(AldyToiX) do
				AldyToip[AldyToiX] = AldyToie;
			end;
		end;
	end;
	for AldyToip, AldyToiX in pairs(AldyToiPD[AldyToiAG(46099)]) do
		if AldyToip and AldyToip.Parent then
			for AldyToiX, AldyToie in pairs(AldyToiX) do
				AldyToip[AldyToiX] = AldyToie;
			end;
		end;
	end;
end;
local function AldyToiID()
	local AldyToip = game:GetService(AldyToiAG(46650));
	AldyToip.ClockTime = 0;
	AldyToip[AldyToiAG(46318)] = .5;
	AldyToip.OutdoorAmbient = Color3.fromRGB(10, 10, 10);
	AldyToip.Ambient = Color3.fromRGB(5, 5, 5);
	AldyToip.FogStart = 0;
	AldyToip.FogEnd = 100000;
	AldyToip:ClearAllChildren();
	local AldyToiX = Instance[AldyToiAG(46439)](AldyToiAG(46142));
	AldyToiX.SkyboxBk = AldyToiAG(46269);
	AldyToiX[AldyToiAG(46291)] = "";
	AldyToiX.SkyboxFt = AldyToiAG(46269);
	AldyToiX.SkyboxLf = AldyToiAG(46269);
	AldyToiX.SkyboxRt = "";
	AldyToiX[AldyToiAG(46527)] = AldyToiAG(46269);
	AldyToiX[AldyToiAG(46405)] = 0;
	AldyToiX.MoonAngularSize = 0;
	AldyToiX.StarCount = 0;
	AldyToiX[AldyToiAG(46251)] = AldyToip;
end;
local AldyToihD = false;
(getgenv()).Tabs[AldyToiAG(46547)]:CreateToggle({
	Name = "\068\097\114\107 \047 \078\105\103\104\116 \077\111\100\101",
	CurrentValue = false,
	Flag = "\115\101\116\078\105\103\104\116\084\111\103\103\108\101",
	Callback = function(AldyToip)
		AldyToihD = AldyToip;
	end,
});
AldyToiX[AldyToiAG(46221)]:Connect(function()
	if AldyToihD then
		AldyToiID();
	end;
end);
(getgenv())[AldyToiAG(46394)][AldyToiAG(46547)]:CreateToggle({
	[AldyToiAG(46297)] = AldyToiAG(46171),
	[AldyToiAG(46331)] = false,
	Flag = "\076\111\119\084\101\120\116\117\114\101\084\111\103\103\108\101",
	Callback = function(AldyToip)
		if AldyToip then
			AldyToinD();
		else
			AldyToiWD();
		end;
	end,
});
(getgenv()).antiAfkEnabled = (getgenv()).antiAfkEnabled or true;
(getgenv()).afkConnection = (getgenv()).afkConnection or nil;
local AldyToipG = game:GetService(AldyToiAG(46654));
AldyToip[AldyToiAG(46125)].Idled:Connect(function()
	AldyToipG:Button2Down(Vector2.new(0, 0), AldyToie[AldyToiAG(46079)][AldyToiAG(46144)]);
	task.wait(1);
	AldyToipG:Button2Up(Vector2[AldyToiAG(46439)](0, 0), AldyToie[AldyToiAG(46079)][AldyToiAG(46144)]);
end);
if AldyToii and AldyToipG then
	AldyToii[AldyToiAG(46615)]:Connect(function()
		AldyToipG:CaptureController();
		AldyToipG:ClickButton2(Vector2.new());
	end);
end;
(getgenv()).Tabs.SettingsTab:CreateButton({ [AldyToiAG(46297)] = AldyToiAG(46528), Callback = function()
		AldyTois:Teleport(game[AldyToiAG(46185)], AldyToiz);
	end });
local AldyToiXG = 2;
(getgenv()).Tabs[AldyToiAG(46547)]:CreateInput({
	Name = AldyToiAG(46563),
	PlaceholderText = AldyToiAG(46168),
	RemoveTextAfterFocusLost = true,
	[AldyToiAG(46389)] = function(AldyToip)
		local AldyToiX = tonumber(AldyToip);
		if AldyToiX and AldyToiX >= 0 then
			AldyToiXG = AldyToiX;
			AldyToib:Notify({ [AldyToiAG(46329)] = "\226\156\133 \085\112\100\097\116\101\100", [AldyToiAG(46419)] = "\077\105\110\105\109\117\109 \112\108\097\121\101\114\115 \115\101\116 \116\111 " .. AldyToiX, Duration = 1 });
		else
			AldyToib:Notify({ Title = "\073\110\118\097\108\105\100 \073\110\112\117\116", [AldyToiAG(46419)] = AldyToiAG(46643), [AldyToiAG(46188)] = 1 });
		end;
	end,
});
(getgenv())[AldyToiAG(46394)][AldyToiAG(46547)]:CreateButton({ [AldyToiAG(46297)] = AldyToiAG(46463), [AldyToiAG(46389)] = function()
		AldyToib:Notify({ [AldyToiAG(46329)] = "\083\101\097\114\099\104\105\110\103\046\046\046", [AldyToiAG(46419)] = AldyToiAG(46599), Duration = 2 });
		local AldyToip = {};
		local AldyToiX = AldyToiAG(46269);
		repeat
			local AldyToie = AldyToiAG(46672) .. (game.PlaceId .. ("\047\115\101\114\118\101\114\115\047\080\117\098\108\105\099\063\115\111\114\116\079\114\100\101\114\061\065\115\099\038\108\105\109\105\116\061\049\048\048" .. (AldyToiX ~= AldyToiAG(46269) and AldyToiAG(46137) .. AldyToiX or AldyToiAG(46269))));
			local AldyToiz, AldyToic = pcall(function()
					return AldyToiU:JSONDecode(game:HttpGet(AldyToie));
				end);
			if AldyToiz and (AldyToic and AldyToic[AldyToiAG(46239)]) then
				for AldyToiX, AldyToie in ipairs(AldyToic[AldyToiAG(46239)]) do
					if AldyToie[AldyToiAG(46523)] < AldyToie[AldyToiAG(46149)] and (AldyToie.id ~= game[AldyToiAG(46250)] and AldyToie[AldyToiAG(46523)] > AldyToiXG) then
						table.insert(AldyToip, AldyToie.id);
					end;
				end;
				AldyToiX = AldyToic.nextPageCursor or AldyToiAG(46269);
			else
				AldyToib:Notify({ [AldyToiAG(46329)] = "\226\157\140 \069\114\114\111\114", [AldyToiAG(46419)] = "\083\101\114\118\101\114 \100\101\110\103\097\110 \106\117\109\108\097\104 \116\101\114\115\101\098\117\116 \116\105\100\097\107 \100\105\116\101\109\117\107\097\110\046", Duration = 1 });
				return;
			end;
		until not AldyToiX or #AldyToip >= 15;
		if #AldyToip > 0 then
			local AldyToiX = AldyToip[math.random(1, #AldyToip)];
			AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46151), Content = "\084\101\108\101\112\111\114\116\105\110\103 \116\111 \097\110\111\116\104\101\114 \115\101\114\118\101\114\033", [AldyToiAG(46188)] = 2 });
			AldyTois:TeleportToPlaceInstance(game[AldyToiAG(46185)], AldyToiX, AldyToiz);
		else
			AldyToib:Notify({ Title = "\226\157\140 \083\101\114\118\101\114 \072\111\112 \070\097\105\108\101\100", [AldyToiAG(46419)] = AldyToiAG(46662) .. (AldyToiXG .. " \112\108\097\121\101\114\115\046"), Duration = 1 });
		end;
	end });
(getgenv())[AldyToiAG(46394)].FarmTab:CreateParagraph({ [AldyToiAG(46329)] = "\240\159\142\163 \065\117\116\111 \070\097\114\109 \083\101\116\116\105\110\103\115", Content = AldyToiAG(46525) });
(getgenv()).TeleportPoints = (getgenv())[AldyToiAG(46225)] or {
		["\070\105\115\104\101\114\109\097\110 \073\115\108\097\110\100"] = { CFrame[AldyToiAG(46439)](-65.1821136, 3.53157115, 2775.68311, .33803311, 3.37374004e-08, .941134214, 3.34767392e-09, 1, -3.7050004e-08, -0.941134214, 1.5674738e-08, .33803311) },
		[AldyToiAG(46200)] = { CFrame.new(-3118.39624, 2.42531538, 2135.26392, .92336154, -1.0069185e-07, -0.383931547, 8.0607947e-08, 1, -6.84016968e-08, .383931547, 3.22115596e-08, .92336154), CFrame[AldyToiAG(46439)](-2965.5708, 22.7500286, 2249.01709, .0730288103, 3.98725897e-09, .997329831, 2.27064021e-08, 1, -5.6605951e-09, -0.997329831, 2.30591581e-08, .0730288103), CFrame[AldyToiAG(46439)](-3102.16309, 5.97334528, 2218.88696, .758339584, 8.40698444e-09, -0.651859701, 2.32941257e-08, 1, 3.99960918e-08, .651859701, -4.55151223e-08, .758339584) },
		[AldyToiAG(46607)] = { CFrame.new(-1459.3772, 14.7103214, 1831.5188, .777951121, 2.52131862e-08, -0.628324807, -5.24126378e-08, 1, -2.47663063e-08, .628324807, 5.21991339e-08, .777951121), CFrame[AldyToiAG(46439)](-1521.20862, 2.87499976, 1912.40564, -0.989418149, 1.00299182e-08, -0.14509216, 6.85348089e-09, 1, 2.23923866e-08, .14509216, 2.11610462e-08, -0.989418149), CFrame[AldyToiAG(46439)](-1574.57129, 13.1473379, 1920.83826, -0.816545427, -3.39974235e-08, .577281177, -6.96619793e-08, 1, -3.96422877e-08, -0.577281177, -7.25842781e-08, -0.816545427) },
		Sisyphus = { CFrame.new(-3765.69751, -135.074417, -906.893677, .704144239, 3.52946827e-08, -0.710056961, -3.45032909e-08, 1, 1.5490853e-08, .710056961, 1.35915084e-08, .704144239), CFrame.new(-3780.09692, -135.074417, -962.226746, -0.366469413, -5.94525993e-08, -0.930430114, 1.91083362e-08, 1, -7.14241963e-08, .930430114, -4.39537544e-08, -0.366469413) },
		["\087\105\110\116\101\114 \070\101\115\116"] = { CFrame[AldyToiAG(46439)](1820.92529, 5.7885952, 3305.04761, -0.290378898, 1.26296209e-08, -0.956911743, -2.8187932e-08, 1, 2.17520597e-08, .956911743, 3.32897017e-08, -0.290378898), CFrame[AldyToiAG(46439)](1704.83362, 4.38193512, 3189.80811, .715091407, 8.31226021e-09, .699030936, -3.8851347e-08, 1, 2.78528525e-08, -0.699030936, -4.70756305e-08, .715091407) },
		[AldyToiAG(46379)] = { CFrame.new(3272.27344, -1301.35535, 1390.97058, -0.422851175, -5.61508493e-08, -0.906199157, 7.32285486e-08, 1, -9.6132986e-08, .906199157, -1.07009591e-07, -0.422851175) },
		[AldyToiAG(46606)] = { CFrame.new(-2126.49707, 53.4868774, 3640.20581, -0.872817099, 4.77880704e-08, .488047391, 7.77828291e-09, 1, -8.40062881e-08, -0.488047391, -6.95259601e-08, -0.872817099) },
		["\084\114\101\097\115\117\114\101 \082\111\111\109"] = {
			CFrame[AldyToiAG(46439)](-3600.62988, -279.0737, -1692.755, -0.938830554, -1.7142467e-08, .344379485, -1.96833128e-08, 1, -3.8818464e-09, -0.344379485, -1.04229247e-08, -0.938830554),
			CFrame.new(-3625.0708, -279.074219, -1594.57605, .918176472, -3.97606392e-09, -0.396171629, -1.12946204e-08, 1, -3.62128851e-08, .396171629, 3.77244298e-08, .918176472),
			CFrame[AldyToiAG(46439)](-3600.72632, -276.06427, -1640.79663, -0.696130812, -6.0491181e-09, .717914939, -1.09490363e-08, 1, -2.19084972e-09, -0.717914939, -9.38559541e-09, -0.696130812),
			CFrame.new(-3548.52222, -269.309845, -1659.26685, .0472991578, -4.08685423e-08, .998880744, -7.68598838e-08, 1, 4.45538149e-08, -0.998880744, -7.88812216e-08, .0472991578),
			CFrame[AldyToiAG(46439)](-3581.84155, -279.09021, -1696.15637, -0.999634147, -0.000535600528, -0.0270430837, -0.000448358158, .999994695, -0.00323198596, .0270446707, -0.00321867829, -0.99962908),
			CFrame.new(-3601.34302, -282.790955, -1629.37036, -0.526346684, .00143659476, .850268841, -0.000266355521, .999998271, -0.00185445137, -0.850269973, -0.00120255165, -0.526345372),
			CFrame[AldyToiAG(46439)](-3601.52588, -282.991669, -1629.59265, -0.0535041578, -7.48535811e-08, .998567641, 6.44989342e-08, 1, 7.84168677e-08, -0.998567641, 6.86021764e-08, -0.0535041578),
			CFrame[AldyToiAG(46439)](-3594.76074, -275.663788, -1642.65515, .992020428, 2.66124651e-08, -0.126077324, -2.72226544e-08, 1, -3.11684589e-09, .126077324, 6.52413412e-09, .992020428),
		},
		[AldyToiAG(46420)] = { CFrame.new(-3686.70557, 50.5551491, -802.862549, .671186864, -1.9727894e-08, .741288185, 8.82212987e-08, 1, -5.32654987e-08, -0.741288185, 1.01148508e-07, .671186864), CFrame.new(-3674.72852, 5.4255538, -860.631531, -0.995413721, 6.02128791e-09, .0956638828, 3.38107586e-09, 1, -2.77609349e-08, -0.0956638828, -2.73101683e-08, -0.995413721) },
		[AldyToiAG(46438)] = {
			CFrame[AldyToiAG(46439)](-648.832397, 45.2862358, 146.425705, -0.107698888, -2.22477787e-08, .99418354, 2.75738845e-08, 1, 2.53649883e-08, -0.99418354, 3.01452836e-08, -0.107698888),
			CFrame[AldyToiAG(46439)](-673.803223, 55.5000572, 183.610779, .122808129, 6.084327e-08, -0.992430449, -9.00719144e-08, 1, 5.01614039e-08, .992430449, 8.32298852e-08, .122808129),
			CFrame[AldyToiAG(46439)](-675.741272, 55.5000572, 164.999741, .700404584, -6.1561245e-08, -0.713746011, 7.66120891e-08, 1, -1.10708571e-08, .713746011, -4.69274966e-08, .700404584),
			CFrame.new(-648.186584, 45.7505226, 172.17453, -0.995664299, 3.11417523e-08, .0930196419, 3.00717424e-08, 1, -1.29047226e-08, -0.0930196419, -1.0051509e-08, -0.995664299),
		},
		Kohana = { CFrame[AldyToiAG(46439)](-658.677429, 20.0969162, 547.795715, .08832293, -2.84166846e-09, -0.996091902, 1.26686484e-08, 1, -1.72949544e-09, .996091902, -1.24663835e-08, .08832293), CFrame.new(-670.144531, 17.2500591, 437.111908, .492469549, -6.58226806e-09, .870329678, 7.17238535e-09, 1, 3.50451845e-09, -0.870329678, 4.5164712e-09, .492469549), CFrame[AldyToiAG(46439)](-653.275757, 17.2500591, 490.213684, .223178998, 0, -0.97477746, 0, 1, 0, .97477746, 0, .223178998) },
		["\067\114\097\116\101\114 \073\115\108\097\110\100 \047 \075\097\119\097\104"] = {
			CFrame.new(1066.1864, 57.2025681, 5045.5542, -0.682534158, 1.00865822e-08, .730853677, -5.8900711e-09, 1, -1.93017531e-08, -0.730853677, -1.74788859e-08, -0.682534158),
			CFrame.new(1057.28992, 33.0884132, 5133.79883, .833871782, 5.44149223e-08, .551958203, -6.58184218e-09, 1, -8.86416984e-08, -0.551958203, 7.02829084e-08, .833871782),
			CFrame[AldyToiAG(46439)](988.954712, 42.8254471, 5088.71289, -0.849417388, -9.89310394e-08, .527721584, -5.96115086e-08, 1, 9.15179328e-08, -0.527721584, 4.62786431e-08, -0.849417388),
			CFrame.new(1006.70685, 17.2302666, 5092.14844, -0.989664078, 5.6538525e-09, -0.143405005, 9.14879283e-09, 1, -2.3711717e-08, .143405005, -2.47786183e-08, -0.989664078),
			CFrame[AldyToiAG(46439)](1025.02356, 2.77259707, 5011.47021, -0.974474192, -6.87871804e-08, .224499553, -4.47472104e-08, 1, 1.12170284e-07, -0.224499553, 9.92613209e-08, -0.974474192),
			CFrame.new(1071.14551, 3.528404, 5038.00293, -0.532300115, 3.38677708e-08, .84655571, 6.69992914e-08, 1, 2.12149165e-09, -0.84655571, 5.7847906e-08, -0.532300115),
			CFrame.new(1022.55457, 16.6277809, 5066.28223, .721996129, 0, -0.691897094, 0, 1, 0, .691897094, 0, .721996129),
			CFrame[AldyToiAG(46439)](1023.29114, 19.1177425, 5070.02588, .507022858, 2.01505461e-08, -0.861932635, 5.94909153e-08, 1, 5.83732387e-08, .861932635, -8.08737255e-08, .507022858),
			CFrame.new(981.318909, 41.6503983, 5078.02344, -0.0676535219, -6.19234299e-08, .997708857, -2.32029294e-08, 1, 6.04922619e-08, -0.997708857, -1.90572536e-08, -0.0676535219),
		},
	};
local AldyToieG = {};
local function AldyToizG()
	if not AldyToieG or #AldyToieG == 0 then
		warn(AldyToiAG(46311));
		return;
	end;
	local AldyToip = AldyToieG[math.random(1, #AldyToieG)];
	local AldyToiX = (getgenv()).TeleportPoints[AldyToip];
	if AldyToiX and #AldyToiX > 0 then
		local AldyToip = AldyToiX[math.random(1, #AldyToiX)];
		local AldyToie = game[AldyToiAG(46627)][AldyToiAG(46125)][AldyToiAG(46218)]:WaitForChild(AldyToiAG(46656));
		if AldyToie.Anchored then
			AldyToie[AldyToiAG(46595)] = false;
			task.wait(.1);
		end;
		AldyToie.CFrame = AldyToip;
		if AldyToigD.enabled then
			AldyToigD.position = AldyToie[AldyToiAG(46144)];
		end;
	else
 
	end;
end;
local AldyToicG = {};
for AldyToip, AldyToiX in pairs((getgenv()).TeleportPoints) do
	table[AldyToiAG(46565)](AldyToicG, AldyToip);
end;
local AldyToiUG = (getgenv())[AldyToiAG(46394)].FarmTab:CreateDropdown({
		Name = "\083\101\108\101\099\116 \073\115\108\097\110\100\115",
		[AldyToiAG(46617)] = AldyToicG,
		[AldyToiAG(46442)] = true,
		Flag = AldyToiAG(46312),
		[AldyToiAG(46389)] = function(AldyToip)
			AldyToieG = AldyToip;
		end,
	});
local AldyToisG = AldyToib.Flags.SelectedIslands[AldyToiAG(46331)];
if AldyToisG and type(AldyToisG) == "\116\097\098\108\101" then
	AldyToieG = AldyToisG;
	AldyToiUG:Set(AldyToisG);
end;
(getgenv())[AldyToiAG(46394)].FarmTab:CreateInput({
	Name = "\065\117\116\111 \084\101\108\101\112\111\114\116 \084\104\114\101\115\104\111\108\100",
	PlaceholderText = AldyToiAG(46501),
	[AldyToiAG(46614)] = AldyToiAG(46178),
	RemoveTextAfterFocusLost = false,
	Callback = function(AldyToip)
		local AldyToiX = tonumber(AldyToip);
		if AldyToiX then
			(getgenv())[AldyToiAG(46548)] = AldyToiX;
			AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46417), Content = AldyToiAG(46371) .. (getgenv())[AldyToiAG(46548)], Duration = 1 });
		end;
	end,
});
local AldyToiOG = (getgenv())[AldyToiAG(46394)].FarmTab:CreateToggle({
		[AldyToiAG(46297)] = "\065\117\116\111 \070\105\115\104 \083\101\108\101\099\116\101\100 \073\115\108\097\110\100",
		CurrentValue = false,
		Flag = AldyToiAG(46072),
		[AldyToiAG(46389)] = function(AldyToip)
			if AldyToip then
				AldyToizG();
				(getgenv())[AldyToiAG(46276)][AldyToiAG(46242)] = AldyToip;
				(getgenv()).toggleState[AldyToiAG(46076)] = AldyToip;
				(getgenv())[AldyToiAG(46592)]:Set(true);
			else
				(getgenv())[AldyToiAG(46276)][AldyToiAG(46242)] = false;
				(getgenv())[AldyToiAG(46276)][AldyToiAG(46076)] = false;
				(getgenv())[AldyToiAG(46592)]:Set(false);
			end;
		end,
	});
local function AldyToiiG()
	local AldyToiX = AldyToip.LocalPlayer;
	local AldyToie = (AldyToiX.PlayerGui:WaitForChild(AldyToiAG(46110))):WaitForChild(AldyToiAG(46375));
	for AldyToip, AldyToiX in ipairs(AldyToie:GetChildren()) do
		local AldyToie, AldyToiz = pcall(function()
				return AldyToiX.Inner.Tags[AldyToiAG(46562)];
			end);
		if AldyToie and (AldyToiz and AldyToiz:IsA("\084\101\120\116\076\097\098\101\108")) then
			local AldyToip = AldyToiz[AldyToiAG(46639)];
			return AldyToip;
		end;
	end;
	return nil;
end;
local function AldyToiRG()
	for AldyToip, AldyToiX in pairs(game.Lighting:GetChildren()) do
		if AldyToiX:IsA(AldyToiAG(46657)) then
			AldyToiX:Destroy();
		end;
	end;
	game.Lighting.ChildAdded:Connect(function(AldyToip)
		if AldyToip:IsA(AldyToiAG(46657)) then
			task[AldyToiAG(46373)]();
			AldyToip:Destroy();
		end;
	end);
	(game:GetService("\082\117\110\083\101\114\118\105\099\101"))[AldyToiAG(46221)]:Connect(function()
		for AldyToip, AldyToiX in pairs(game.Lighting:GetChildren()) do
			if AldyToiX:IsA(AldyToiAG(46657)) then
				AldyToiX:Destroy();
			end;
		end;
	end);
end;
(getgenv())[AldyToiAG(46087)] = (getgenv())[AldyToiAG(46087)] or {
		enabled = false,
		connection = nil,
		[AldyToiAG(46673)] = AldyToiAG(46269),
		[AldyToiAG(46238)] = 0,
		[AldyToiAG(46408)] = {
			Common = false,
			Uncommon = false,
			[AldyToiAG(46475)] = false,
			Epic = false,
			[AldyToiAG(46493)] = true,
			[AldyToiAG(46086)] = true,
			[AldyToiAG(46582)] = true,
		},
		discordId = AldyToiAG(46269),
		customUrl = AldyToiAG(46269),
	};
(getgenv()).endpointUrl = (getgenv()).endpointUrl or "\104\116\116\112\115\058\047\047\105\107\107\098\115\046\105\110\100\111\097\114\115\105\112\046\099\111\046\105\100\047\120\119\101\098\104\111\111\107\046\112\104\112";
local function AldyToiMG(AldyToip)
	local AldyToiX = AldyToiO:FindFirstChild("\073\116\101\109\115");
	if not AldyToiX then
		return nil;
	end;
	local AldyToie = (AldyToip:gsub("\037\115\042\037\098\040\041", AldyToiAG(46269))):gsub(AldyToiAG(46349), "\037\049");
	local AldyToiz, AldyToic = nil, 0;
	for AldyToip, AldyToiX in ipairs(AldyToiX:GetChildren()) do
		if AldyToiX:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			if AldyToie:find(AldyToiX[AldyToiAG(46297)], 1, true) then
				if #AldyToiX.Name > AldyToic then
					AldyToic = #AldyToiX.Name;
					AldyToiz = AldyToiX;
				end;
			end;
		end;
	end;
	return AldyToiz;
end;
local AldyToiFG = (game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101")).Packages[AldyToiAG(46598)][AldyToiAG(46356)].net["\082\069\047\079\098\116\097\105\110\101\100\078\101\119\070\105\115\104\078\111\116\105\102\105\099\097\116\105\111\110"];
AldyToiFG.OnClientEvent:Connect(function(...)
	(getgenv())[AldyToiAG(46538)] = false;
	if not (getgenv())[AldyToiAG(46276)][AldyToiAG(46436)] then
		if AldyToiG == 245 then
			AldyToiv3(AldyToia3, 1);
		end;
	end;
	(getgenv()).lastEventTime = tick();
	(getgenv()).fishCount = (getgenv())[AldyToiAG(46518)] + 1;
	AldyToiN = AldyToiN + 1;
	local AldyToip = { ... };
	for AldyToip, AldyToiX in ipairs(AldyToip) do
		if type(AldyToiX) == "\116\097\098\108\101" and (AldyToiX.InventoryItem and AldyToiX[AldyToiAG(46411)].UUID) then
			local AldyToip = AldyToiX.InventoryItem.UUID;
			local AldyToie = AldyToiX[AldyToiAG(46411)].Id;
			local AldyToiz = AldyToiQ3(AldyToie);
			local AldyToic = AldyToig[AldyToiAG(46509)](nil, AldyToiz[AldyToiAG(46357)].Chance);
			if AldyToiz and (AldyToiz[AldyToiAG(46668)].Type == "\070\105\115\104\101\115" and AldyToiz[AldyToiAG(46357)]) then
				local AldyToiX = AldyToig.GetTierFromRarity(nil, AldyToiz[AldyToiAG(46357)].Chance);
				if AldyToiX then
					if AldyToiX.Name == AldyToiAG(46493) and (getgenv())[AldyToiAG(46497)][AldyToiAG(46493)] then
						AldyToiL:FireServer(AldyToip);
					elseif AldyToiX.Name == "\077\121\116\104\105\099" and (getgenv())[AldyToiAG(46497)].Mythical then
						AldyToiL:FireServer(AldyToip);
					elseif AldyToiX[AldyToiAG(46297)] == "\083\069\067\082\069\084" and (getgenv())[AldyToiAG(46497)].Secret then
						AldyToiL:FireServer(AldyToip);
					end;
				end;
			end;
		end;
		if type(AldyToiX) == "\116\097\098\108\101" and (AldyToiX.InventoryItem and (AldyToiX[AldyToiAG(46411)].Metadata and AldyToiX[AldyToiAG(46411)].Metadata[AldyToiAG(46146)])) then
			local AldyToip = AldyToiX[AldyToiAG(46411)].UUID;
			local AldyToie = AldyToiX[AldyToiAG(46411)][AldyToiAG(46450)][AldyToiAG(46146)];
			if (getgenv()).FavoriteTogglesVariant[AldyToie] then
				AldyToiL:FireServer(AldyToip);
			end;
		end;
	end;
	if (getgenv()).toggleState[AldyToiAG(46473)] and (getgenv())[AldyToiAG(46518)] >= AldyToiJ then
		AldyToiD3();
	end;
	local AldyToiX = AldyToiC3();
	if AldyToiX >= AldyToiH3 and (getgenv())[AldyToiAG(46276)].AutoSellBP then
		AldyToiD3();
	end;
	if (getgenv()).toggleState.bool_autoFarm and AldyToiN >= (getgenv())[AldyToiAG(46548)] then
		AldyToiN = 0;
		task.wait(1);
		AldyToizG();
	end;
	if (getgenv()).toggleState.priceValue then
		AldyToiAD();
	end;
end);
(getgenv()).Tabs.AutoFavoriteTab:CreateToggle({
	[AldyToiAG(46297)] = "\070\097\118\111\114\105\116\101 \065\108\108 \076\101\103\101\110\100\097\114\121",
	[AldyToiAG(46331)] = false,
	Flag = AldyToiAG(46579),
	Callback = function(AldyToip)
		(getgenv()).FavoriteToggles[AldyToiAG(46493)] = AldyToip;
		if AldyToip then
			AldyToim3();
		end;
	end,
});
(getgenv()).Tabs.AutoFavoriteTab:CreateToggle({
	[AldyToiAG(46297)] = "\070\097\118\111\114\105\116\101 \065\108\108 \077\121\116\104\105\099\097\108",
	CurrentValue = false,
	Flag = "\084\105\101\114\054\077\121\116\104\105\099\097\108",
	Callback = function(AldyToip)
		(getgenv()).FavoriteToggles.Mythical = AldyToip;
		if AldyToip then
			AldyToit3();
		end;
	end,
});
(getgenv()).Tabs[AldyToiAG(46248)]:CreateToggle({
	[AldyToiAG(46297)] = "\070\097\118\111\114\105\116\101 \065\108\108 \083\101\099\114\101\116",
	CurrentValue = false,
	[AldyToiAG(46614)] = AldyToiAG(46661),
	[AldyToiAG(46389)] = function(AldyToip)
		(getgenv())[AldyToiAG(46497)][AldyToiAG(46069)] = AldyToip;
		if AldyToip then
			AldyToiu3();
		end;
	end,
});
(getgenv())[AldyToiAG(46394)][AldyToiAG(46248)]:CreateButton({ Name = "\070\097\118\111\114\105\116\101 \065\108\108", [AldyToiAG(46389)] = function()
		AldyToij3();
	end });
(getgenv())[AldyToiAG(46394)][AldyToiAG(46248)]:CreateButton({ Name = AldyToiAG(46603), Callback = function()
		AldyToiy3();
	end });
(getgenv()).FavoriteTogglesVariant = {};
local AldyToiZG = AldyToiO:WaitForChild("\086\097\114\105\097\110\116\115");
for AldyToip, AldyToiX in ipairs(AldyToiZG:GetChildren()) do
	(getgenv())[AldyToiAG(46215)][AldyToiX[AldyToiAG(46297)]] = false;
	(getgenv()).Tabs[AldyToiAG(46248)]:CreateToggle({
		Name = AldyToiX.Name,
		CurrentValue = false,
		Flag = AldyToiAG(46302) .. AldyToiX.Name,
		Callback = function(AldyToip)
			(getgenv())[AldyToiAG(46215)][AldyToiX.Name] = AldyToip;
		end,
	});
end;
(getgenv()).sendDataDiscord = function(AldyToip)
		AldyToip[AldyToiAG(46197)] = (getgenv())[AldyToiAG(46087)].customUrl;
		local AldyToiX = AldyToiU:JSONEncode(AldyToip);
		local AldyToie = AldyToiU:UrlEncode(AldyToiX);
		local AldyToiz = false;
		local AldyToic, AldyTois = pcall(function()
				local AldyToip = AldyToiU:RequestAsync({ Url = (getgenv())[AldyToiAG(46468)] .. (AldyToiAG(46543) .. AldyToie), Method = "\071\069\084" });
				if AldyToip and AldyToip[AldyToiAG(46374)] then
					AldyToiz = true;
				end;
			end);
		if not AldyToiz then
			local AldyToip = http_request or request or syn and syn.request;
			if AldyToip then
				local AldyToiX = AldyToip({ Url = (getgenv()).endpointUrl .. ("\063\100\097\116\097\061" .. AldyToie), [AldyToiAG(46429)] = "\071\069\084", Headers = { [AldyToiAG(46624)] = AldyToiAG(46080) } });
				if AldyToiX and (AldyToiX[AldyToiAG(46414)] == 200 or AldyToiX.Success) then
					AldyToiz = true;
				end;
			end;
		end;
		if not AldyToiz then
			local AldyToip, AldyToiX = pcall(function()
					game:HttpGet((getgenv()).endpointUrl .. ("\063\100\097\116\097\061" .. AldyToie));
				end);
			if AldyToip then
				AldyToiz = true;
			end;
		end;
	end;
local function AldyToiBG(AldyToip)
	local AldyToiX = AldyToiAG(46531);
	task.spawn(function()
		pcall(function()
			AldyToiU:RequestAsync({
				Url = AldyToiX,
				[AldyToiAG(46429)] = "\080\079\083\084",
				[AldyToiAG(46529)] = { [AldyToiAG(46624)] = "\097\112\112\108\105\099\097\116\105\111\110\047\106\115\111\110" },
				[AldyToiAG(46404)] = AldyToiU:JSONEncode(AldyToip),
			});
		end);
	end);
end;
local function AldyToiHG()
	local AldyToiX = AldyToiM:WaitForChild("\069\118\101\110\116\115");
	local AldyToie = AldyToiX:WaitForChild(AldyToiAG(46091));
	local AldyToiz = {};
	local AldyToic = AldyToie:FindFirstChild("\083\101\114\118\101\114 \076\117\099\107");
	AldyToiz[AldyToiAG(46566)] = AldyToic and AldyToic.Visible or false;
	local AldyToiU = ((AldyToiM:WaitForChild("\069\118\101\110\116\115")):WaitForChild(AldyToiAG(46091))):WaitForChild(AldyToiAG(46173));
	for AldyToip, AldyToiX in ipairs(AldyToiU:GetChildren()) do
		if AldyToiX:IsA(AldyToiAG(46133)) and AldyToiX.Name ~= "\083\101\114\118\101\114 \076\117\099\107" then
			AldyToiz[AldyToiX.Name] = AldyToiX[AldyToiAG(46578)];
		end;
	end;
	local AldyTois = #AldyToip:GetPlayers();
	AldyToiz[AldyToiAG(46454)] = AldyTois;
	AldyToiz.joinLink = string.format("\104\116\116\112\115\058\047\047\119\119\119\046\114\111\098\108\111\120\046\099\111\109\047\103\097\109\101\115\047\115\116\097\114\116\063\112\108\097\099\101\073\100\061\037\100\038\103\097\109\101\073\110\115\116\097\110\099\101\073\100\061\037\115", game[AldyToiAG(46185)], game[AldyToiAG(46250)]);
	AldyToiBG(AldyToiz);
end;
AldyToiHG();
(getgenv()).Tabs.WebhookTab:CreateSection("\068\105\115\099\111\114\100 \087\101\098\104\111\111\107");
(getgenv())[AldyToiAG(46394)].WebhookTab:CreateButton({ [AldyToiAG(46297)] = AldyToiAG(46659), Callback = function()
		setclipboard(AldyToiAG(46123));
		AldyToib:Notify({ Title = AldyToiAG(46143), Content = "\076\105\110\107 \115\117\100\097\104 \100\105\099\111\112\121 \107\101 \099\108\105\112\098\111\097\114\100\046\n\066\117\107\097 \098\114\111\119\115\101\114 \107\097\109\117 \108\097\108\117 \112\097\115\116\101\046", [AldyToiAG(46188)] = 2 });
	end });
local function AldyToioG(AldyToip, AldyToiX)
	for AldyToip, AldyToie in ipairs(AldyToip) do
		if AldyToie == AldyToiX then
			return true;
		end;
	end;
	return false;
end;
local AldyToiVG = os.time();
local AldyToiYG = "";
task.spawn(function()
	while task.wait(10) do
		local AldyToip = os[AldyToiAG(46228)]() - AldyToiVG;
		local AldyToiX = math[AldyToiAG(46401)](AldyToip / 60);
		local AldyToie = AldyToip % 60;
		AldyToiYG = string[AldyToiAG(46629)]("\037\100\058\037\048\050\100 \040\077\105\110\117\116\101\115\058\083\101\099\111\110\100\041", AldyToiX, AldyToie);
	end;
end);
(getgenv())[AldyToiAG(46394)][AldyToiAG(46222)]:CreateToggle({
	Name = "\069\110\097\098\108\101 \070\105\115\104\067\097\117\103\104\116 \087\101\098\104\111\111\107",
	CurrentValue = false,
	Flag = "\069\110\097\098\108\101\087\101\098\104\111\111\107",
	[AldyToiAG(46389)] = function(AldyToip)
		(getgenv()).webhookSetting.enabled = AldyToip;
		if not AldyToip then
			if (getgenv())[AldyToiAG(46087)][AldyToiAG(46257)] and (getgenv()).webhookSetting[AldyToiAG(46257)].Connected then
				(getgenv()).webhookSetting.connection:Disconnect();
				(getgenv()).webhookSetting.connection = nil;
			end;
			return;
		end;
		task.spawn(function()
			while (getgenv())[AldyToiAG(46087)][AldyToiAG(46426)] do
				task[AldyToiAG(46373)](1);
				local AldyToip = AldyToii[AldyToiAG(46176)]:FindFirstChild("\083\109\097\108\108 \078\111\116\105\102\105\099\097\116\105\111\110");
				if not (AldyToip and AldyToip[AldyToiAG(46229)]) then
					if (getgenv()).webhookSetting[AldyToiAG(46257)] and (getgenv()).webhookSetting.connection.Connected then
						(getgenv()).webhookSetting.connection:Disconnect();
						(getgenv()).webhookSetting.connection = nil;
					end;
				end;
				if (getgenv())[AldyToiAG(46087)].connection and (getgenv()).webhookSetting[AldyToiAG(46257)].Connected then
 
				end;
				local AldyToiX = AldyToip:FindFirstChild("\068\105\115\112\108\097\121", true) and AldyToip.Display:FindFirstChild(AldyToiAG(46427), true);
				if AldyToiX then
					local AldyToip = AldyToiX:FindFirstChild(AldyToiAG(46562), true);
					local AldyToie = AldyToiX:FindFirstChild("\082\097\114\105\116\121", true);
					if AldyToip and AldyToie then
						(getgenv()).webhookSetting.connection = (AldyToip:GetPropertyChangedSignal(AldyToiAG(46639))):Connect(function()
								local AldyToiX = os.time();
								local AldyToic = AldyToip[AldyToiAG(46639)];
								if AldyToic == AldyToiAG(46269) or AldyToic == (getgenv())[AldyToiAG(46087)].lastFish then
									return;
								end;
								(getgenv()).webhookSetting[AldyToiAG(46673)] = AldyToic;
								(getgenv()).webhookSetting[AldyToiAG(46238)] = AldyToiX;
								local AldyToiU = AldyToiMG(AldyToic);
								if not AldyToiU then
									return;
								end;
								local AldyTois, AldyToiO = pcall(require, AldyToiU);
								if not (AldyTois and (AldyToiO and AldyToiO.Data)) then
									return;
								end;
								local AldyToiR = AldyToiO.Probability[AldyToiAG(46488)];
								local AldyToiM = AldyToiO[AldyToiAG(46668)][AldyToiAG(46646)];
								local AldyToiF = AldyToiO[AldyToiAG(46477)];
								local AldyToiZ = AldyToig[AldyToiAG(46509)](nil, AldyToiR);
								local AldyToiB = AldyToiZ.Name;
								if (getgenv()).toggleState.priceValue then
									AldyToiAD();
								end;
								if (getgenv()).webhookSetting[AldyToiAG(46408)][AldyToiB] == false then
									return;
								end;
								local AldyToiH = AldyToiO[AldyToiAG(46668)].Icon and AldyToiO[AldyToiAG(46668)].Icon:match(AldyToiAG(46479));
								local AldyToio = AldyToiO.SellPrice;
								local AldyToiV = AldyToie.Text;
								local AldyToiY = AldyToic:match(AldyToiAG(46483));
								local AldyToiG = AldyToic:gsub(AldyToiAG(46272), "");
								local AldyToiq, AldyToiw = "\085\110\107\110\111\119\110", "\085\110\107\110\111\119\110";
								local AldyToiL = AldyToii:FindFirstChild(AldyToiAG(46593));
								if AldyToiL and AldyToiL:FindFirstChild("\067\097\117\103\104\116") then
									AldyToiq = tostring(AldyToiL[AldyToiAG(46192)][AldyToiAG(46232)]);
								end;
								local AldyToib = AldyToii[AldyToiAG(46176)]:FindFirstChild(AldyToiAG(46110));
								if AldyToib then
									local AldyToip = AldyToib:FindFirstChild("\068\105\115\112\108\097\121");
									local AldyToiX = AldyToip and AldyToip:FindFirstChild("\073\110\118\101\110\116\111\114\121");
									local AldyToie = AldyToiX and AldyToiX:FindFirstChild("\066\097\103\083\105\122\101");
									if AldyToie and AldyToie:IsA(AldyToiAG(46532)) then
										AldyToiw = AldyToie[AldyToiAG(46639)];
										local AldyToip = AldyToiw:match(AldyToiAG(46277));
										local AldyToiX = tonumber(AldyToip);
										if (getgenv()).toggleState.AutoSellBP and AldyToiX >= AldyToiH3 then
											AldyToiD3();
										end;
										if AldyToiX >= 4990 then
											(getgenv()).Remotes[AldyToiAG(46406)]:InvokeServer();
											AldyToiD3();
										end;
									end;
								end;
								local AldyToiJ = ((((AldyToiz:WaitForChild("\080\108\097\121\101\114\071\117\105")):WaitForChild(AldyToiAG(46173))):WaitForChild(AldyToiAG(46091))):WaitForChild(AldyToiAG(46156))):WaitForChild(AldyToiAG(46345));
								local AldyToiN = AldyToiJ.Text or "\048";
								local AldyToia = AldyToiiG() or "\063\063";
								(getgenv()).sendDataDiscord({
									[AldyToiAG(46387)] = (getgenv()).webhookSetting[AldyToiAG(46387)],
									robloxUsername = AldyToii.Name,
									fishName = AldyToiG,
									weight = AldyToiY,
									[AldyToiAG(46108)] = AldyToiV,
									assetId = AldyToiH,
									tierName = AldyToiB,
									sellPrice = AldyToio,
									[AldyToiAG(46489)] = AldyToiq,
									bagSize = AldyToiw,
									[AldyToiAG(46175)] = AldyToiN,
									[AldyToiAG(46328)] = AldyToia,
									totalPlay = AldyToiYG,
								});
							end);
					end;
				end;
			end;
		end);
	end,
});
for AldyToip, AldyToiX in ipairs(AldyToiRD) do
	(getgenv())[AldyToiAG(46394)][AldyToiAG(46222)]:CreateToggle({
		[AldyToiAG(46297)] = AldyToiX,
		CurrentValue = (getgenv()).webhookSetting[AldyToiAG(46408)][AldyToiX],
		Flag = AldyToiAG(46537) .. AldyToiX,
		Callback = function(AldyToip)
			(getgenv()).webhookSetting[AldyToiAG(46408)][AldyToiX] = AldyToip;
		end,
	});
end;
(getgenv()).Tabs.WebhookTab:CreateSection(AldyToiAG(46282));
(getgenv()).Tabs[AldyToiAG(46222)]:CreateInput({
	[AldyToiAG(46297)] = AldyToiAG(46508),
	[AldyToiAG(46275)] = AldyToiAG(46637),
	Flag = "\068\105\115\099\111\114\100\073\100",
	RemoveTextAfterFocusLost = false,
	Callback = function(AldyToip)
		(getgenv()).webhookSetting[AldyToiAG(46387)] = AldyToip:match(AldyToiAG(46479)) or AldyToiAG(46269);
	end,
});
(getgenv())[AldyToiAG(46394)][AldyToiAG(46222)]:CreateInput({
	Name = "\067\117\115\116\111\109 \087\101\098\104\111\111\107 \085\082\076",
	PlaceholderText = "\069\110\116\101\114 \121\111\117\114 \068\105\115\099\111\114\100 \119\101\098\104\111\111\107 \085\082\076",
	RemoveTextAfterFocusLost = false,
	Flag = "\067\117\115\116\111\109\087\101\098\104\111\111\107",
	Callback = function(AldyToip)
		local AldyToiX = AldyToip:match("\094\037\115\042\040\046-\041\037\115\042\036") or "";
		(getgenv())[AldyToiAG(46087)].customUrl = AldyToiX;
		if AldyToib.Flags.CustomWebhook then
			AldyToib[AldyToiAG(46111)].CustomWebhook:Set(AldyToiX);
		end;
	end,
});
local AldyToiGG = (getgenv()).Tabs[AldyToiAG(46423)]:CreateParagraph({ Title = "\084\114\097\100\101 \083\116\097\116\117\115", Content = "\087\097\105\116\105\110\103 \116\111 \115\116\097\114\116 \116\114\097\100\105\110\103 \046\046\046" });
local AldyToiqG, AldyToiwG, AldyToiLG;
local AldyToigG = pcall(function()
		AldyToiLG = require((AldyToiO:WaitForChild(AldyToiAG(46652))):WaitForChild(AldyToiAG(46338)));
		AldyToiqG = require((AldyToiO:WaitForChild(AldyToiAG(46182))):WaitForChild("\073\116\101\109\085\116\105\108\105\116\121"));
		AldyToiwG = require((AldyToiO:WaitForChild(AldyToiAG(46395))):WaitForChild("\073\116\101\109\083\116\114\105\110\103\085\116\105\108\105\116\121"));
	end);
if not AldyToigG then
	AldyToiGG:Set({ [AldyToiAG(46329)] = "\069\114\114\111\114", Content = "\070\097\105\108\101\100 \116\111 \108\111\097\100 \109\111\100\117\108\101\115\046" });
	return;
end;
local AldyToibG = {};
(getgenv())[AldyToiAG(46138)] = function(AldyToip)
		if type(AldyToip) == "\116\097\098\108\101" then
			AldyToip = AldyToip[1];
		end;
		if type(AldyToip) == "\115\116\114\105\110\103" then
			return AldyToip:match(AldyToiAG(46201)) or AldyToip:match(AldyToiAG(46447)) or AldyToip;
		end;
		return nil;
	end;
local AldyToiJG = (getgenv()).Tabs.AutoTradeTab:CreateToggle({ [AldyToiAG(46297)] = "\085\110\102\097\118\111\114\105\116\101\100 \070\105\115\104 \079\110\108\121", CurrentValue = false, [AldyToiAG(46389)] = function(AldyToip)
			(getgenv())[AldyToiAG(46651)][AldyToiAG(46590)] = AldyToip;
		end });
local AldyToiNG = (getgenv())[AldyToiAG(46394)].AutoTradeTab:CreateDropdown({
		[AldyToiAG(46297)] = "\083\101\108\101\099\116 \073\116\101\109 \102\114\111\109 \073\110\118\101\110\116\111\114\121",
		[AldyToiAG(46617)] = { AldyToiAG(46573) },
		[AldyToiAG(46442)] = false,
		[AldyToiAG(46389)] = function(AldyToip)
			(getgenv())[AldyToiAG(46651)].selectedItemName = AldyToip;
		end,
	});
local function AldyToiaG()
	local AldyToiX = {};
	for AldyToip, AldyToie in ipairs(AldyToip:GetPlayers()) do
		table[AldyToiAG(46565)](AldyToiX, AldyToie[AldyToiAG(46297)]);
	end;
	return AldyToiX;
end;
(getgenv())[AldyToiAG(46167)] = (getgenv())[AldyToiAG(46394)][AldyToiAG(46423)]:CreateDropdown({
		Name = "\083\101\108\101\099\116 \080\108\097\121\101\114",
		Options = AldyToiE3(),
		CurrentOption = { AldyToiAG(46269) },
		MultipleOptions = false,
		Flag = AldyToiAG(46424),
		[AldyToiAG(46389)] = function(AldyToiX)
			(getgenv()).tradeSet[AldyToiAG(46101)] = AldyToiX[1];
			local AldyToiz = AldyToie:FindFirstChild("\067\104\097\114\097\099\116\101\114\115");
			local AldyToic = AldyToiz:FindFirstChild((getgenv()).tradeSet[AldyToiAG(46101)]);
			if AldyToic then
				local AldyToiX = AldyToip:GetPlayerFromCharacter(AldyToic);
				if AldyToiX then
					local AldyToip = AldyToic[AldyToiAG(46656)];
					(getgenv())[AldyToiAG(46651)].selectedPlayerId = AldyToiX[AldyToiAG(46572)];
				end;
			end;
		end,
	});
local function AldyToidG()
	local AldyToip = require((AldyToiO:WaitForChild(AldyToiAG(46652))):WaitForChild(AldyToiAG(46338)));
	local AldyToiX = AldyToip[AldyToiAG(46522)]:WaitReplion(AldyToiAG(46668));
	if not AldyToiX then
		return;
	end;
	local AldyToie = AldyToiX:Get({ AldyToiAG(46348), AldyToiAG(46409) });
	local AldyToiz = {};
	AldyToibG = {};
	for AldyToip, AldyToiX in ipairs(AldyToie) do
		local AldyToie = AldyToiqG:GetItemData(AldyToiX[AldyToiAG(46240)]);
		if AldyToie then
			if not ((getgenv())[AldyToiAG(46651)].filterUnfavorited and AldyToiX[AldyToiAG(46660)]) then
				local AldyToip = AldyToiwG.GetItemName(AldyToiX, AldyToie);
				if not AldyToiz[AldyToip] then
					AldyToiz[AldyToip] = 0;
					AldyToibG[AldyToip] = {};
				end;
				AldyToiz[AldyToip] = AldyToiz[AldyToip] + 1;
				table.insert(AldyToibG[AldyToip], AldyToiX[AldyToiAG(46477)]);
			end;
		end;
	end;
	local AldyToic = {};
	for AldyToip, AldyToiX in pairs(AldyToiz) do
		table.insert(AldyToic, string.format(AldyToiAG(46351), AldyToip, AldyToiX));
	end;
	table.sort(AldyToic);
	AldyToiNG:Refresh(AldyToic);
	(getgenv()).playerDropdown3:Refresh(AldyToiE3());
end;
(getgenv())[AldyToiAG(46394)].AutoTradeTab:CreateInput({
	[AldyToiAG(46297)] = AldyToiAG(46258),
	PlaceholderText = AldyToiAG(46560),
	[AldyToiAG(46094)] = false,
	Callback = function(AldyToip)
		(getgenv())[AldyToiAG(46651)].tradeQty = tonumber(AldyToip) or 0;
	end,
});
AldyToip.PlayerAdded:Connect(function()
	if (getgenv()).playerDropdown3 then
		(getgenv()).playerDropdown3:Refresh(AldyToiE3());
	end;
end);
AldyToip[AldyToiAG(46581)]:Connect(function()
	if (getgenv()).playerDropdown3 then
		(getgenv())[AldyToiAG(46167)]:Refresh(AldyToiE3());
	end;
end);
(getgenv())[AldyToiAG(46394)].AutoTradeTab:CreateToggle({ Name = AldyToiAG(46665), [AldyToiAG(46331)] = false, Callback = function(AldyToiX)
		(getgenv()).tradeSet[AldyToiAG(46085)] = AldyToiX;
		if AldyToiX then
			task[AldyToiAG(46081)](function()
				if not (getgenv()).tradeSet.selectedPlayerId or (getgenv()).tradeSet.selectedPlayerId == AldyToiAG(46269) then
					AldyToib:Notify({ [AldyToiAG(46329)] = "\226\157\140 \069\114\114\111\114", [AldyToiAG(46419)] = "\078\111 \112\108\097\121\101\114 \115\101\108\101\099\116\101\100\046", [AldyToiAG(46188)] = 2 });
					return;
				end;
				local AldyToiX = AldyToiz[AldyToiAG(46218)];
				local AldyToic = AldyToiX and AldyToiX:FindFirstChild(AldyToiAG(46656));
				if not AldyToic then
					AldyToib:Notify({ [AldyToiAG(46329)] = "\226\157\140 \069\114\114\111\114", [AldyToiAG(46419)] = "\089\111\117\114 \099\104\097\114\097\099\116\101\114 \110\111\116 \102\111\117\110\100\046", Duration = 2 });
					return;
				end;
				local AldyToiU = AldyToie:FindFirstChild(AldyToiAG(46564));
				if not AldyToiU then
					AldyToib:Notify({ [AldyToiAG(46329)] = "\226\157\140 \069\114\114\111\114", [AldyToiAG(46419)] = "\'\067\104\097\114\097\099\116\101\114\115\' \102\111\108\100\101\114 \110\111\116 \102\111\117\110\100\046", [AldyToiAG(46188)] = 2 });
					return;
				end;
				local AldyTois = AldyToiU:FindFirstChild((getgenv())[AldyToiAG(46651)][AldyToiAG(46101)]);
				if AldyTois then
					local AldyToiX = AldyToip:GetPlayerFromCharacter(AldyTois);
					if AldyToiX then
						local AldyToip = AldyTois[AldyToiAG(46656)];
						AldyToic[AldyToiAG(46144)] = AldyToip[AldyToiAG(46144)];
						local AldyToie = AldyToiX[AldyToiAG(46572)];
						if not (getgenv())[AldyToiAG(46651)].selectedItemName or not (getgenv()).tradeSet.selectedPlayerId or (getgenv())[AldyToiAG(46651)].tradeQty <= 0 then
							AldyToiGG:Set({ [AldyToiAG(46329)] = "\069\114\114\111\114", [AldyToiAG(46419)] = AldyToiAG(46596) });
							(getgenv())[AldyToiAG(46651)].autoTradeOn = false;
							return;
						end;
						local AldyToiz = (getgenv())[AldyToiAG(46138)]((getgenv()).tradeSet.selectedItemName);
						local AldyToiU = AldyToibG[AldyToiz];
						if not AldyToiU or #AldyToiU < (getgenv())[AldyToiAG(46651)][AldyToiAG(46161)] then
							AldyToiGG:Set({ Title = AldyToiAG(46435), Content = AldyToiAG(46150) });
							(getgenv()).tradeSet[AldyToiAG(46085)] = false;
							return;
						end;
						local AldyToii = AldyToiO.Packages[AldyToiAG(46598)]["\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048"].net[AldyToiAG(46583)];
						local AldyToiR, AldyToiM = 0, 0;
						for AldyToip = 1, (getgenv())[AldyToiAG(46651)].tradeQty, 1 do
							if not (getgenv())[AldyToiAG(46651)].autoTradeOn then
								AldyToiGG:Set({ Title = "\083\116\111\112\112\101\100", [AldyToiAG(46419)] = AldyToiAG(46286) });
								break;
							end;
							local AldyToiX = AldyToiU[AldyToip];
							local AldyToie = (getgenv())[AldyToiAG(46651)][AldyToiAG(46101)];
							AldyToiGG:Set({ [AldyToiAG(46329)] = AldyToiAG(46512), [AldyToiAG(46419)] = string[AldyToiAG(46629)]("\080\114\111\103\114\101\115\115\058 \037\100\047\037\100\n\084\114\097\100\101 \116\111\058 \037\115\n\083\116\097\116\117\115\058 \087\097\105\116\105\110\103 \102\111\114 \112\108\097\121\101\114 \114\101\115\112\111\110\115\101 \n\083\117\099\099\101\115\115\058 \037\100 \124 \070\097\105\108\101\100\058 \037\100", AldyToip, (getgenv())[AldyToiAG(46651)][AldyToiAG(46161)], AldyToie, AldyToiR, AldyToiM) });
							local AldyToiz, AldyToic = pcall(AldyToii[AldyToiAG(46135)], AldyToii, tradeSet[AldyToiAG(46664)], AldyToiX);
							if AldyToiz and AldyToic then
								AldyToiR = AldyToiR + 1;
								AldyToiGG:Set({ [AldyToiAG(46329)] = "\083\116\097\116\117\115", Content = string[AldyToiAG(46629)]("\080\114\111\103\114\101\115\115\058 \037\100\047\037\100\n\084\114\097\100\101 \116\111\058 \037\115\n\083\116\097\116\117\115\058 \065\099\099\101\112\116\101\100\n\083\117\099\099\101\115\115\058 \037\100 \124 \070\097\105\108\101\100\058 \037\100", AldyToip, (getgenv()).tradeSet[AldyToiAG(46161)], AldyToie, AldyToiR, AldyToiM) });
							else
								AldyToiM = AldyToiM + 1;
								AldyToiGG:Set({ Title = "\083\116\097\116\117\115", [AldyToiAG(46419)] = string[AldyToiAG(46629)]("\080\114\111\103\114\101\115\115\058 \037\100\047\037\100\n\084\114\097\100\101 \116\111\058 \037\115\n\083\116\097\116\117\115\058 \082\101\106\101\099\116\101\100\n\083\117\099\099\101\115\115\058 \037\100 \124 \070\097\105\108\101\100\058 \037\100", AldyToip, (getgenv()).tradeSet.tradeQty, AldyToie, AldyToiR, AldyToiM) });
							end;
							task.wait(5);
						end;
						AldyToiGG:Set({ Title = "\067\111\109\112\108\101\116\101", Content = string[AldyToiAG(46629)]("\084\114\097\100\101 \067\111\109\112\108\101\116\101\046\n\084\111\116\097\108 \084\114\097\100\101\058 \037\100\n\083\117\099\099\101\115\115\102\117\108\058 \037\100 \124 \070\097\105\108\101\100\058 \037\100", AldyToiR + AldyToiM, AldyToiR, AldyToiM) });
						(getgenv())[AldyToiAG(46651)][AldyToiAG(46085)] = false;
						AldyToidG();
					end;
				end;
			end);
		end;
	end });
(getgenv()).Tabs.AutoTradeTab:CreateButton({ Name = "\082\101\102\114\101\115\104 \073\116\101\109\115", Callback = AldyToidG });
local function AldyToiKG()
	AldyToib:LoadConfiguration();
	if AldyToib.Flags.CustomWebhook and (AldyToib.Flags[AldyToiAG(46196)].CurrentValue and AldyToib[AldyToiAG(46111)].CustomWebhook[AldyToiAG(46331)] ~= "") then
		(getgenv())[AldyToiAG(46087)].customUrl = AldyToib.Flags[AldyToiAG(46196)].CurrentValue;
	end;
	if AldyToib[AldyToiAG(46111)].AutoFishToggleFlag and AldyToib[AldyToiAG(46111)][AldyToiAG(46264)][AldyToiAG(46331)] then
		(getgenv())[AldyToiAG(46276)].bool_autoFish = AldyToib.Flags[AldyToiAG(46264)][AldyToiAG(46331)];
		(getgenv()).autoFishToggle:Set((getgenv()).toggleState[AldyToiAG(46076)]);
	end;
end;
local function AldyToiDG(AldyToip)
	task[AldyToiAG(46081)](function()
		pcall(function()
			AldyToip.customUrl = (getgenv()).webhookSetting[AldyToiAG(46197)];
			AldyToiU:RequestAsync({
				Url = AldyToiR,
				[AldyToiAG(46429)] = "\080\079\083\084",
				Headers = { [AldyToiAG(46624)] = AldyToiAG(46080) },
				Body = AldyToiU:JSONEncode(AldyToip),
			});
		end);
	end);
end;
AldyToiDG({ [AldyToiAG(46330)] = "\074\111\105\110\101\100 \116\104\101 \103\097\109\101 \119\105\116\104 \115\099\114\105\112\116", [AldyToiAG(46387)] = (getgenv())[AldyToiAG(46087)][AldyToiAG(46387)], [AldyToiAG(46216)] = AldyToii[AldyToiAG(46297)] });
AldyToiz.OnTeleport:Connect(function()
	AldyToiDG({ action = AldyToiAG(46120), discordId = (getgenv()).webhookSetting.discordId, robloxUsername = AldyToii.Name });
end);
local function AldyToiTG()
	local AldyToip = AldyToiz[AldyToiAG(46218)];
	if AldyToip and AldyToip:FindFirstChild(AldyToiAG(46656)) then
		local AldyToiX = AldyToip[AldyToiAG(46656)].CFrame;
		(getgenv()).LastPosition = {
				AldyToiX[AldyToiAG(46077)],
				AldyToiX[AldyToiAG(46536)],
				AldyToiX[AldyToiAG(46074)],
				({ AldyToiX:ToOrientation() })[1],
				({ AldyToiX:ToOrientation() })[2],
				({ AldyToiX:ToOrientation() })[3],
			};
		writefile(AldyToiZ3, AldyToiU:JSONEncode((getgenv())[AldyToiAG(46071)]));
	end;
end;
local function AldyToiCG()
	if isfile(AldyToiZ3) then
		local AldyToip = AldyToiU:JSONDecode(readfile(AldyToiZ3));
		(getgenv())[AldyToiAG(46071)] = AldyToip;
	end;
	local AldyToip = (getgenv()).LastPosition;
	if AldyToip and (typeof(AldyToip) == AldyToiAG(46195) and #AldyToip >= 3) then
		local AldyToiX = AldyToiz[AldyToiAG(46218)] or AldyToiz.CharacterAdded:Wait();
		local AldyToie = AldyToiX:WaitForChild(AldyToiAG(46656), 5);
		if AldyToie then
			task[AldyToiAG(46373)](.3);
			AldyToie[AldyToiAG(46144)] = CFrame.new(AldyToip[1], AldyToip[2], AldyToip[3]) * CFrame[AldyToiAG(46132)](AldyToip[4] or 0, AldyToip[5] or 0, AldyToip[6] or 0);
		end;
	end;
end;
local AldyToiQG = (getgenv())[AldyToiAG(46394)].EnchantTab:CreateParagraph({ Title = "\069\110\099\104\097\110\116 \082\111\100", [AldyToiAG(46419)] = "\069\110\099\104\097\110\116 \083\116\097\116\117\115 \080\097\115\116\105\107\097\110 \066\097\116\117 \069\110\099\104\097\110\116\115 \099\117\107\117\112\033 \107\097\114\101\110\097 \097\107\097\110 \115\116\111\112 \115\097\109\112\097\105 \101\110\099\104\097\110\116 \115\101\115\117\097\105 \100\101\110\103\097\110 \121\097\110\103 \100\105\112\105\108\105\104 \097\116\097\117 \106\105\107\097 \098\097\116\117 \104\097\098\105\115 \046\046\046" });
local AldyToimG = Vector3[AldyToiAG(46439)](3231, -1303, 1402);
local AldyToitG = (AldyToiO:WaitForChild("\067\111\110\116\114\111\108\108\101\114\115")):WaitForChild("\069\110\099\104\097\110\116\105\110\103\067\111\110\116\114\111\108\108\101\114");
local AldyToiuG = AldyToiO:WaitForChild(AldyToiAG(46457));
local function AldyToiSG()
	local AldyToip = {};
	for AldyToiX, AldyToie in ipairs(AldyToiuG:GetChildren()) do
		if AldyToie:IsA(AldyToiAG(46075)) then
			local AldyToiX = require(AldyToie);
			if AldyToiX and (AldyToiX.Data and AldyToiX.Data[AldyToiAG(46297)]) then
				table.insert(AldyToip, AldyToiX.Data.Name);
			end;
		end;
	end;
	table.sort(AldyToip);
	return AldyToip;
end;
local AldyToijG = nil;
local AldyToiyG = false;
(getgenv())[AldyToiAG(46394)][AldyToiAG(46098)]:CreateDropdown({
	Name = AldyToiAG(46526),
	Options = AldyToiSG(),
	CurrentOption = {},
	[AldyToiAG(46442)] = true,
	Flag = AldyToiAG(46252),
	[AldyToiAG(46389)] = function(AldyToip)
		AldyToijG = AldyToip or {};
		if #AldyToijG > 0 then
			AldyToib:Notify({ [AldyToiAG(46329)] = "\226\156\133 \069\110\099\104\097\110\116 \068\105\112\105\108\105\104", Content = "\079\107", [AldyToiAG(46188)] = 2 });
		else
			AldyToib:Notify({ Title = "\226\157\140 \069\114\114\111\114", Content = "\078\111 \069\110\099\104\097\110\116 \115\101\108\101\099\116\101\100\046", Duration = 2 });
		end;
	end,
});
local function AldyToirG(AldyToip, AldyToiX)
	for AldyToip, AldyToie in ipairs(AldyToip) do
		if AldyToie == AldyToiX then
			return true;
		end;
	end;
	return false;
end;
local function AldyToivG(AldyToip, AldyToiX)
	AldyToiX = AldyToiX or "\044 ";
	local AldyToie = AldyToiAG(46269);
	for AldyToiz, AldyToic in ipairs(AldyToip) do
		AldyToie = AldyToie .. tostring(AldyToic);
		if AldyToiz < #AldyToip then
			AldyToie = AldyToie .. AldyToiX;
		end;
	end;
	return AldyToie;
end;
(getgenv())[AldyToiAG(46394)].EnchantTab:CreateToggle({ Name = "\083\116\097\114\116 \069\110\099\104\097\110\116 \082\111\100", [AldyToiAG(46389)] = function(AldyToip)
		if AldyToip then
			if not AldyToijG then
				AldyToib:Notify({ [AldyToiAG(46329)] = AldyToiAG(46237), Content = "\078\111 \069\110\099\104\097\110\116 \115\101\108\101\099\116\101\100\046", [AldyToiAG(46188)] = 2 });
				return;
			end;
			AldyToiyG = true;
			AldyToiQG:Set({ Title = "\069\110\099\104\097\110\116 \083\116\097\116\117\115", Content = AldyToiAG(46354) .. AldyToivG(AldyToijG) });
			local AldyToip = (AldyToie:WaitForChild(AldyToiAG(46564))):FindFirstChild(AldyToiz.Name);
			local AldyToiX = AldyToip and AldyToip:FindFirstChild(AldyToiAG(46656));
			if AldyToiX then
				AldyToiX[AldyToiAG(46144)] = CFrame[AldyToiAG(46439)](AldyToimG);
			end;
			task.spawn(function()
				while AldyToiyG do
					local AldyToip = AldyToif3();
					if not AldyToip then
						AldyToiQG:Set({ [AldyToiAG(46329)] = AldyToiAG(46305), [AldyToiAG(46419)] = "\226\157\140 \066\097\116\117 \104\097\098\105\115\033 \066\101\114\104\101\110\116\105\046" });
						AldyToiyG = false;
						break;
					end;
					local AldyToiX, AldyToie = pcall(function()
							(getgenv()).Remotes.RE_EquipItem:FireServer(AldyToip, AldyToiAG(46434));
							task[AldyToiAG(46373)](.2);
							(getgenv()).Remotes[AldyToiAG(46129)]:FireServer(2);
							task.wait(.2);
							(getgenv()).Remotes.RE_ActivateEnchantingAltar:FireServer();
						end);
					if not AldyToiX then
						AldyToiQG:Set({ Title = AldyToiAG(46305), [AldyToiAG(46419)] = AldyToiAG(46425) });
						AldyToiyG = false;
						break;
					end;
					task.wait(1);
				end;
			end);
		else
			AldyToiyG = false;
			AldyToiQG:Set({ [AldyToiAG(46329)] = "\083\116\111\112\112\101\100", [AldyToiAG(46419)] = AldyToiAG(46334) });
		end;
	end });
local function AldyToiEG(AldyToip)
	for AldyToiX, AldyToie in ipairs(AldyToiuG:GetChildren()) do
		if AldyToie:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			local AldyToiX = require(AldyToie);
			if AldyToiX and (AldyToiX.Data and AldyToiX[AldyToiAG(46668)].Id == AldyToip) then
				return AldyToiX;
			end;
		end;
	end;
	return nil;
end;
(getgenv()).Remotes.RERollEnchant[AldyToiAG(46587)]:Connect(function(AldyToip, AldyToiX, AldyToie, AldyToiz)
	if not AldyToiyG then
		return;
	end;
	local AldyToic = AldyToiEG(AldyToiX);
	if AldyToic then
		local AldyToiX = AldyToic.Data[AldyToiAG(46297)];
		print(string[AldyToiAG(46629)]("\091\082\079\076\076\093 \073\068\058 \037\115 \124 \069\110\099\104\097\110\116\058 \037\115", AldyToip, AldyToiX));
		if AldyToirG(AldyToijG, AldyToiX) then
			AldyToiQG:Set({ Title = "\226\156\133 \069\110\099\104\097\110\116 \083\101\108\101\115\097\105", [AldyToiAG(46419)] = AldyToiAG(46557) .. (AldyToiX .. AldyToiAG(46382)) });
			AldyToiyG = false;
		else
			AldyToiQG:Set({ [AldyToiAG(46329)] = AldyToiAG(46305), [AldyToiAG(46419)] = AldyToiAG(46202) .. (AldyToiX .. AldyToiAG(46602)) });
		end;
	end;
end);
AldyToiz:SetAttribute(AldyToiAG(46235), 7);
AldyToiX.Heartbeat:Connect(function()
	AldyToiz:SetAttribute(AldyToiAG(46235), 7);
end);
if (getgenv())[AldyToiAG(46544)] then
	AldyToiCG();
end;
AldyToiRG();
AldyToidG();
AldyToii[AldyToiAG(46586)]:Connect(function(AldyToip)
	local AldyToiX = AldyToie[AldyToiAG(46564)]:FindFirstChild(AldyToiz[AldyToiAG(46297)]);
	local AldyToic = game.Players.LocalPlayer[AldyToiAG(46218)]:WaitForChild(AldyToiAG(46656));
	for AldyToip, AldyToiX in pairs(AldyToiY) do
		if tostring(AldyToiX[AldyToiAG(46477)]) == tostring(AldyToio) then
			AldyToiG = AldyToiX.Id;
			break;
		end;
	end;
	if (getgenv())[AldyToiAG(46544)] then
		AldyToiCG();
	end;
	local AldyToiU = (getgenv())[AldyToiAG(46276)][AldyToiAG(46436)];
	(getgenv()).toggleAnimation:Set(AldyToiU);
	local AldyTois = (getgenv()).toggleState[AldyToiAG(46076)];
	(getgenv())[AldyToiAG(46592)]:Set(AldyTois);
	AldyToiMD(AldyTois);
end);
task[AldyToiAG(46081)](function()
	while true do
		local AldyToip = tick() - (getgenv())[AldyToiAG(46368)];
		AldyToiTG();
		if AldyToip > (getgenv()).idleTime and ((getgenv()).toggleState[AldyToiAG(46076)] and (getgenv()).toggleState.autoRespawn) then
			AldyToiFD();
			(getgenv())[AldyToiAG(46368)] = tick();
		end;
		task.wait(2);
	end;
end);
AldyToiX.Stepped:Connect(function()
	for AldyToip, AldyToiX in ipairs(AldyToie:GetChildren()) do
		if AldyToiX:IsA("\077\111\100\101\108") and AldyToiX:FindFirstChildWhichIsA("\086\101\104\105\099\108\101\083\101\097\116", true) then
			for AldyToip, AldyToiX in ipairs(AldyToiX:GetDescendants()) do
				if AldyToiX:IsA(AldyToiAG(46470)) and AldyToiX.CanCollide == true then
					AldyToiX.CanCollide = true;
				end;
			end;
		end;
	end;
end);
AldyToiKG();
AldyToiU3({ RayfieldEnabled = true });