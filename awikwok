    -- Fish It Script - AldyToi
    print ("Fish It Script - AldyToi loaded successfully!\nyang jual bool dan titit nya rapet. aamiin")
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local RunService = game:GetService("RunService")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer
    local UserInputService = game:GetService("UserInputService")
    local HttpService = game:GetService("HttpService")
    local TeleportService = game:GetService("TeleportService") 
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local player = Players.LocalPlayer
    if not player or not replicatedStorage then return end

    -- Load Rayfield
    local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

    local themes = {
        "Default",
        "AmberGlow",
        "Amethyst",
        "Bloom",
        "DarkBlue",
        "Green",
        "Light",
        "Ocean",
        "Serenity"
    }
    local randomTheme = themes[math.random(1, #themes)]

    -- Window
    local Window = Rayfield:CreateWindow({
        Name = "Fish It Script - AldyToi",
        LoadingTitle = "Fish It - by AldyToi",
        LoadingSubtitle = "by @AldyToi",
        ShowText = "Fish It - AldyToi",
        Theme = randomTheme,
        ConfigurationSaving = {
            Enabled = true,
            FolderName = "Kontol",
            FileName = "FishIt"
        },
        KeySystem = false
    })
    local AutoFishTab = Window:CreateTab("Auto Fishing", "fish")
    local AutoSellTab = Window:CreateTab("Auto Sell", "credit-card")
    local FarmTab = Window:CreateTab("Auto Farm (New)", "globe")

    local PlayerSetTab = Window:CreateTab("Player Set", "users")
    local TP_Player_Tab = Window:CreateTab("Player Tele", "map-pin")

    local Buy_Weather = Window:CreateTab("Buy Weather", "cloud-rain")
    local IslandsTab = Window:CreateTab("Teleport", "globe")

    local EventTab = Window:CreateTab("Event", "calendar")

    local Spawn_Boat = Window:CreateTab("Spawn Boat", "anchor")
    local NPCTab = Window:CreateTab("NPC", "user")
    local Buy_Rod = Window:CreateTab("Buy Rod", "bug")
    local Buy_Baits = Window:CreateTab("Buy Bait", "bug")
    local SettingsTab = Window:CreateTab("Settings", "settings")
    local DiscordTab = Window:CreateTab("Discord", "info")

    local AboutTab = Window:CreateTab("About", "info")

    -- Remotes Event and Remotes Function
    local net = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net")
    local RF_ChargeFishingRod = net:WaitForChild("RF/ChargeFishingRod")
    local RF_RequestFishingMinigameStarted = net:WaitForChild("RF/RequestFishingMinigameStarted")
    local RE_FishingCompleted = net:WaitForChild("RE/FishingCompleted")
    local RE_EquipTool = net:WaitForChild("RE/EquipToolFromHotbar")
    local UnEquipTool = net:WaitForChild("RE/UnequipToolFromHotbar")
    local RE_FishingEffect = net:WaitForChild("RE/PlayFishingEffect")

    -- State variables 
    local autoRecastDelay = 1 
    local toggleState = {
        joranNyender = true,
        AutoSell = false,
        autoBuyWeather = false,
        infJump = false,
        perfectCast = false,
        bool_autoFish = false,
        bool_autoFarm = false,
        AutoSell = false
    }
    local thresholdTP = 10 -- default threshold for auto teleport
    local selectedPlayerName = nil
    local playerDropdown = nil
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    -- Variabel global
    local currentTracks = {}

    local function playWithDuration(id, duration)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")

        local anim = Instance.new("Animation")
        anim.AnimationId = "rbxassetid://" .. id

        local track = humanoid:LoadAnimation(anim) 
        track:Play()

        -- Tunggu durasi tertentu lalu stop
        task.delay(duration, function()
            track:Stop()
        end)

        return track
    end

    local function stopTrack(track)
        if track and track.IsPlaying then
            track:Stop()
        end
    end

    local function stopAllAnimations()
        for _, track in ipairs(currentTracks) do
            stopTrack(track)
        end
        currentTracks = {}
    end
    
    -- Ambil daftar nama player selain LocalPlayer
    local function getPlayerList()
        local list = {}
        for _, p in ipairs(Players:GetPlayers()) do
            if p ~= LocalPlayer then
                table.insert(list, p.Name)
            end
        end
        table.sort(list)
        return list
    end

    -- Dropdown memilih pemain
    playerDropdown = TP_Player_Tab:CreateDropdown({
        Name = "Select Player",
        Options = getPlayerList(),
        CurrentOption = {""}, -- default kosong
        MultipleOptions = false,
        Flag = "TeleportPlayerDropdown",
        Callback = function(Options)
            selectedPlayerName = Options[1] -- Options adalah array
        end
    })

    -- Tombol untuk teleport ke pemain
    TP_Player_Tab:CreateButton({
        Name = "Teleport to Selected Player",
        Callback = function()
            pcall(function()
                if not selectedPlayerName or selectedPlayerName == "" then
                    Rayfield:Notify({
                        Title = "‚ùå Error",
                        Content = "No player selected.",
                        Duration = 2
                    })
                    return
                end

                local character = LocalPlayer.Character
                local hrp = character and character:FindFirstChild("HumanoidRootPart")
                if not hrp then
                    Rayfield:Notify({
                        Title = "‚ùå Error",
                        Content = "Your character not found.",
                        Duration = 2
                    })
                    return
                end

                local charactersFolder = Workspace:FindFirstChild("Characters")
                if not charactersFolder then
                    Rayfield:Notify({
                        Title = "‚ùå Error",
                        Content = "'Characters' folder not found.",
                        Duration = 2
                    })
                    return
                end
    -- + Vector3.new(5, 5, 0
    
                local targetChar = charactersFolder:FindFirstChild(selectedPlayerName)
                if targetChar and targetChar:FindFirstChild("HumanoidRootPart") then
                    local targetHRP = targetChar.HumanoidRootPart
                        local offset = targetHRP.CFrame.RightVector * 5 -- ke kanan 5 stud
                        hrp.CFrame = targetHRP.CFrame + offset
                    Rayfield:Notify({
                        Title = "‚úÖ Teleported",
                        Content = "Teleported to " .. selectedPlayerName,
                        Duration = 2
                    })
                else
                    Rayfield:Notify({
                        Title = "‚ùå Error",
                        Content = "Target player not found or invalid.",
                        Duration = 2
                    })
                end
            end)
        end
    })
    TP_Player_Tab:CreateButton({
        Name = "üîÑ Refresh Player List",
        Callback = function()
            local updatedList = getPlayerList()
            playerDropdown:Refresh(updatedList)

            -- Validasi dan set ulang jika masih ada
            if selectedPlayerName and table.find(updatedList, selectedPlayerName) then
                playerDropdown:Set({selectedPlayerName})
            else
                selectedPlayerName = nil
                -- Jangan set apapun jika kosong
                playerDropdown:Set({"<None>"}) -- atau string dummy lain, hindari nil
            end
        end,
    })



    AboutTab:CreateButton({ 
        Name = "Saweria", 
        Callback = function() 
            setclipboard("https://saweria.co/aldytoi")
            Rayfield:Notify({
                                Title = "Copied to clipboard!",
                                Content = "https://saweria.co/aldytoi", 
                                Duration = 1
                            })
        end
    })
    AboutTab:CreateButton({
        Name = "Tiktok", 
        Callback = function() 
            setclipboard("https://tiktok.com/aldytoi") 
            Rayfield:Notify({
                                Title = "Copied to clipboard!",
                                Content = "https://tiktok.com/aldytoi", 
                                Duration = 1
                    })
        end 
    }) 
    AboutTab:CreateButton({
        Name = "GitHub",
        Callback = function() 
            setclipboard("https://github.com/aldyjrz") 
            Rayfield:Notify({
                                Title = "Copied to clipboard!",
                                Content = " https://github.com/aldyjrz", 
                                Duration = 1
                            })
        end 
    })

    -- AutoFishTab (Auto Fish)
    AutoFishTab:CreateParagraph({
        Title = "üé£ Auto Farm Settings",
        Content = "Setup Fishing Options"
    })

    local Workspaces = game:GetService("Workspace")
    local Vehicles = Workspaces:WaitForChild("Vehicles")
    local currentValues = {
        MaxSpeed = 500,
        Torque = 1000,
        TurnSpeed = 500
    }
     local Boats = ReplicatedStorage:WaitForChild("Boats")
    local velocityMult = 0

    Spawn_Boat:CreateSlider({
        Name = "Boat Speed Multiplier",
        Range = {0, 30},
        Increment = 1,
        Suffix = "x",
        CurrentValue = velocityMult,
        Flag = "velocitymult",
        Callback = function(value)
            velocityMult = value
        end
    })
    --ok
    -- Fungsi disable fall damage
    local function disableFallDamage()
        local char = LocalPlayer.Character
        if char then
            local fallDamage = char:FindFirstChild("FallDamage")
            if fallDamage and fallDamage:IsA("Script") then
                fallDamage.Disabled = true
            end
        end
    end

    LocalPlayer.CharacterAdded:Connect(function()
        task.wait(1)
        disableFallDamage()
    end)

    disableFallDamage()

    -- Fungsi boost aman
    RunService.Heartbeat:Connect(function()
        local character = LocalPlayer.Character
        if character and typeof(character) == "Instance" then
            local humanoid = character:FindFirstChildWhichIsA("Humanoid")
            if humanoid and typeof(humanoid) == "Instance" then
                local seatPart = humanoid.SeatPart
                if seatPart and typeof(seatPart) == "Instance" and seatPart:IsA("VehicleSeat") then
                    local currentVelocity = seatPart.AssemblyLinearVelocity
                    local safeBoost = velocityMult * 50 -- langkah aman

                    local newVel = Vector3.new(
                        currentVelocity.X + (currentVelocity.X * safeBoost * 0.01),
                        currentVelocity.Y,
                        currentVelocity.Z + (currentVelocity.Z * safeBoost * 0.01)
                    )

                    seatPart.AssemblyLinearVelocity = newVel
                end
            end
        end
    end)
    local BoatsFolder = ReplicatedStorage:WaitForChild("Boats")
    local Net = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net")
    
    for _, module in pairs(BoatsFolder:GetChildren()) do
        if module:IsA("ModuleScript") then
            local success, boatData = pcall(require, module)
            
            if success and boatData and boatData.Data then
                local boatName = boatData.Data.Name
                local boatId = boatData.Data.Id

                Spawn_Boat:CreateButton({
                    Name = boatName,
                    Callback = function()
                        pcall(function()
                            Net["RF/DespawnBoat"]:InvokeServer()
                            task.wait(1)
                            Net["RF/SpawnBoat"]:InvokeServer(boatId)

                            Rayfield:Notify({
                                Title = "üö§ Spawning Boat",
                                Content = "Spawning " .. boatName,
                                Duration = 1
                            })
                        end)
                    end
                })
            end
        end
    end

    local itemsFolder = replicatedStorage:WaitForChild("Items")

    local rods = {}

    -- Fungsi untuk format angka jadi readable string
    local function formatPrice(num)
        if not num or type(num) ~= "number" then return "???" end
        if num >= 1e6 then
            return string.format("%.1fM Coins", num / 1e6)
        elseif num >= 1e3 then
            return string.format("%.1fk Coins", num / 1e3)
        else
            return tostring(num) .. " Coins"
        end
    end

    -- Loop semua module di Items
    for _, module in ipairs(itemsFolder:GetChildren()) do
        if module:IsA("ModuleScript") then
            local success, data = pcall(require, module)
            if success and typeof(data) == "table" then
                local rodData = data.Data
                if rodData and rodData.Type == "Fishing Rods" then
                    local id = rodData.Id or "?"
                    local name = rodData.Name or module.Name
                    local desc = rodData.Description or "-"
                    local price = "???"

                    -- Gunakan data Price jika ada
                    if data.Price then
                        price = formatPrice(data.Price)
                        table.insert(rods, {
                        ID = id,
                        Name = name,
                        Dex = desc,
                        Harga = price
                    })
                    else
                        -- fallback ke priceMap jika tidak ada Price
                        local priceMap = {
                            ["Gold Rod"] = "VIP Only",
                            ["Lucky Rod"] = "15k Coins",
                            ["Midnight Rod"] = "50k Coins",
                            ["Chrome Rod"] = "437k Coins",
                        }
                        price = priceMap[name] or "??? Unknown"
                    end
                    
                
                end
            end
        end
    end
    Buy_Rod:CreateParagraph({
        Title = "Purchase Rods",
        Content = "Some Rods can't be purchased because they are VIP only or doesn't have a price map."
    })
    -- Buat tombol beli untuk setiap rod
    for _, rod in ipairs(rods) do
        Buy_Rod:CreateButton({
            Name = string.format("%s (%s)", rod.Name, rod.Harga),
            Callback = function()
                local success, result = pcall(function()
                    return replicatedStorage
                        .Packages._Index["sleitnick_net@0.2.0"]
                        .net["RF/PurchaseFishingRod"]
                        :InvokeServer(rod.ID)
                end)

                Rayfield:Notify({
                    Title = "Purchase Rod",
                    Content = success and ("Buying " .. rod.Name) or ("Failed to buy " .. rod.Name),
                    Duration = 1
                })

                if not success then
                    warn("[Buy Rod Error]:", result)
                end
            end
        })
    end
    

    local threshold = 10

    local fishCount = 0
    local fishCountFarm = 0;

    local autoFishToggle = AutoFishTab:CreateToggle({
        Name = "üé£ Auto Fishing Perfect Cast",
        CurrentValue = false,
        Callback = function(val)
            
            toggleState.bool_autoFish = val
            if val then  
                task.spawn(function()
                    while toggleState.bool_autoFish do
                        pcall(function()
                            
                            local chargingAnim, castAnim, idleAnim

                                RE_EquipTool:FireServer(1)
                                task.wait(0.1)
                                if toggleState.joranNyender then
                                    playWithDuration("139622307103608", 1) -- StartChargingRod1Hand (tahan)
                                    playWithDuration("92624107165273", 2)
                                    playWithDuration("134965425664034", 15) -- CastFromFullChargePosition1Hand
                                
                                end 
                                
                                task.wait(0.1) 

                                RF_ChargeFishingRod:InvokeServer(999999)
                                task.wait(0.1)


                                -- koordi2nat acak untuk cast perfect
                                local axisX = -1.238
                                local axisY = 0.968

                                RF_RequestFishingMinigameStarted:InvokeServer(axisX, axisY)
                                task.wait(0.1) 

                                RE_FishingCompleted:FireServer()
                                
 

                            

                                 
                        end)
                        task.wait(autoRecastDelay)
                    end
                end)
            else
                
                RE_FishingCompleted:FireServer()
                UnEquipTool:FireServer(1)
stopAllAnimations()
                Rayfield:Notify({
                    Title = "Auto Fishing Stopped",
                    Content = "Deactivated Auto Fishing",
                    Duration = 1
                })
        
            end
        end
    })
    

    AutoFishTab:CreateSlider({
        Name = "‚è±Ô∏è Auto Fishing Delay (seconds)",
        Range = {0.5, 5},
        Increment = 0.1,
        CurrentValue = autoRecastDelay,
        Callback = function(val)
            autoRecastDelay = val
        end
    }) 
    
    -- üîÅ Joran Nyender 
  local FishingAnimationToggle =   AutoFishTab:CreateToggle({
        Name = "Fishing Animation",
        CurrentValue = false,
        Flag = "FishingAnimationToggle",
        Callback = function(Value)
            toggleState.joranNyender = Value 
        end
    })


    -- Max Rod & Bait Modifier
     local MaxRodBaitToggle =    AutoFishTab:CreateToggle({
        Name = "‚öôÔ∏è Max Rod, Enchant & Bait Modifier",
        CurrentValue = false,
        Flag = "MaxRodBaitToggle",
        Callback = function(state)
            if state then
                 
               
                for _, module in ipairs(itemsFolder:GetChildren()) do
                    if module:IsA("ModuleScript") then
                        local success, rodData = pcall(require, module)
                        if success and type(rodData) == "table" then
                            rodData.ClickPower =9999
                            rodData.Resilience = 9999
                            rodData.Speed = 100
                            rodData.MaxWeight = 1000000
                        end
                        if success and type(rodData) == "table" and rodData.RollData then
                        
                                rodData.RollData.BaseLuck = 9999 
                                rodData.RollData.Frequency.Golden = 100
                                rodData.RollData.Frequency.Rainbow = 100

                        --  print("Rod:", module.Name, "-> BaseLuck:", rodData.RollData.BaseLuck)
                        end
                    end
                end

                -- === Modify Baits ===
                local baitsFolder = ReplicatedStorage:WaitForChild("Baits")

            
                for _, bait in pairs(baitsFolder:GetChildren()) do
                    if bait:IsA("ModuleScript") then
                        local success, baitModule = pcall(require, bait)
                        if success and baitModule and baitModule.Modifiers then
                            baitModule.Price = 0
                            baitModule.Modifiers.BaseLuck = 99999

                            if baitModule.Modifiers.ShinyMultiplier == nil then
                                baitModule.Modifiers.ShinyMultiplier = 99999
                            end
                            if baitModule.Modifiers.MutationMultiplier == nil then
                                baitModule.Modifiers.MutationMultiplier = 99999
                            end

                        -- print("Bait updated:", bait.Name)
                        else
                            warn("Gagal load bait:", bait.Name)
                        end
                    end
                end

                 
                -- === Modify Rods ===
                local enchantsFolder = ReplicatedStorage:WaitForChild("Enchants")

                for _, module in ipairs(enchantsFolder:GetChildren()) do
                    if module:IsA("ModuleScript") then
                        local success, enchantsData = pcall(require, module)
                        
                        if success and type(enchantsData) == "table" and enchantsData.Modifiers then
                        -- Pastikan tabel Probability ada
                            if not enchantsData.Probability then
                                enchantsData.Probability = {}
                            end

                            -- Pastikan tabel Modifiers ada
                            if not enchantsData.Modifiers then
                                enchantsData.Modifiers = {}
                            end

                            -- Pastikan Frequency di dalam Modifiers ada
                            if not enchantsData.Modifiers.Frequency then
                                enchantsData.Modifiers.Frequency = {}
                            end

                            -- Set semua value sesuai permintaan
                            enchantsData.Modifiers.BaseLuck = 9999
                            enchantsData.Modifiers.SizeMultiplier = 99999
                            enchantsData.Modifiers.XPMultiplier = 99999
                            enchantsData.Modifiers.GoldMutationMultiplier = 9999
                            enchantsData.Modifiers.MutationMultiplier = 9999
                            enchantsData.Modifiers.Frequency.Golden = 100
                            enchantsData.Modifiers.Frequency.Rainbow = 100
                            enchantsData.Probability.Chance = 100
    
                        end
                    end
                end
    
 
            end
        end
    })

    -- Buy Weather
    Buy_Weather:CreateParagraph({
        Title = "üå§Ô∏è Purchase Weather Events",
        Content = "Select a weather event to trigger."
    })
    local eventsFolder = ReplicatedStorage:WaitForChild("Events")

    local weathers = {}
    local weathersNoShark = {}

    -- Ambil semua event dari folder Events
    for _, eventModule in ipairs(eventsFolder:GetChildren()) do
        if eventModule:IsA("ModuleScript") then
            local success, eventData = pcall(require, eventModule)
            if success and eventData and type(eventData) == "table" then
                local weatherInfo = {
                    Name = eventData.Name or eventModule.Name,
                    Price = eventData.WeatherMachinePrice or 0,
                    Desc = eventData.Description or "No description",
                }

                table.insert(weathers, weatherInfo)

                if not string.lower(weatherInfo.Name):find("shark") then
                    table.insert(weathersNoShark, weatherInfo)
                end
            end
        end
    end

    -- Table untuk nyimpen pilihan user
    local selectedWeathers = {}

    -- Buat dropdown pilihan multiple weather
    Buy_Weather:CreateDropdown({
        Name = "Select Weather(s) to Auto Buy",
        Options = (function()
            local options = {}
            for _, w in ipairs(weathersNoShark) do
                table.insert(options, w.Name)
            end
            return options
        end)(),
        MultipleOptions = true,
        CurrentOption = {},
        Callback = function(selected)
            selectedWeathers = selected
            --print("Selected weathers:", table.concat(selectedWeathers, ", "))
        end,
    })

    -- Toggle untuk mulai/berhenti auto buy
    Buy_Weather:CreateToggle({
        Name = "üåÄ Auto Buy Selected Weather(s)",
        CurrentValue = false,
        Flag = "AutoBuyWeatherToggle",
        Callback = function(Value)
            autoBuyWeather = Value
            if Value then
                if #selectedWeathers == 0 then

                        Rayfield:Notify({
                            Title = "Auto Weather",
                            Content = "No Weather Selected! Please select at least one weather to auto buy.",
                            Duration = 1
                        })
                else
    Rayfield:Notify({
                            Title = "Auto Weather",
                            Content = "Started Auto Buying Selected Weather(s)",
                            Duration = 1
                        })

                end
                

                task.spawn(function()
                    while autoBuyWeather do
                        if #selectedWeathers == 0 then
                -- Kalau gak ada weather yg dipilih, skip / tunggu dulu
                                task.wait(1)
                            else
                                for _, weatherName in ipairs(selectedWeathers) do
                                    pcall(function()
                                        replicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RF/PurchaseWeatherEvent"]:InvokeServer(weatherName)
                                    end)
                                    task.wait(0.1)
                                end
                                task.wait(0.5) -- Delay antar pembelian
                            end
                    end
                end)
            else
                Rayfield:Notify({
                    Title = "Auto Weather",
                    Content = "Stopped Auto Buying",
                    Duration = 1
                })
            end
        end,
    })
    -- üì¶ Buat tombol untuk semua event
    for _, w in ipairs(weathers) do
        Buy_Weather:CreateButton({
            Name = w.Name .. " Spawn",
            Callback = function()
                pcall(function()
                    replicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RF/PurchaseWeatherEvent"]:InvokeServer(w.Name)
                    Rayfield:Notify({
                        Title = "‚õÖ Weather Event",
                        Content = "Spawned " .. w.Name,
                        Duration = 1
                    })
                end)
            end
        })
    end
    -- Buy Bait
    Buy_Baits:CreateParagraph({
        Title = "Buy Baits",
        Content = "Buy Baits Everywhere"
    })
    local baitsFolder = ReplicatedStorage:WaitForChild("Baits")

    for _, baitModule in ipairs(baitsFolder:GetChildren()) do
        if baitModule:IsA("ModuleScript") then
            local success, baitData = pcall(require, baitModule)
            if success and baitData and baitData.Data then
                local id = baitData.Data.Id or 0
                local name = baitData.Data.Name or "Unknown"
                local desc = baitData.Data.Description or "-"
                local priceText = baitData.Price and baitData.Price .. " Coins" or "No Price"

                Buy_Baits:CreateButton({
                    Name = name .. " (" .. priceText .. ")",
                    Callback = function()
                        pcall(function()
                            replicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RF/PurchaseBait"]:InvokeServer(id)
                            Rayfield:Notify({
                                Title = "Bait Purchase",
                                Content = "Buying " .. name,
                                Duration = 3
                            })
                        end)
                    end
                })
            else
                --warn("Gagal membaca bait module:", baitModule.Name)
            end
        end
    end
    
    AutoSellTab:CreateInput({
        Name = "üéØ Auto Sell Threshold",
        PlaceholderText = "Default: 30",
        RemoveTextAfterFocusLost = false,
        Callback = function(input)
            local num = tonumber(input)
            if num then
                threshold = num
                Rayfield:Notify({
                    Title = "Threshold Diperbarui",
                    Content = "Ikan akan dijual otomatis saat jumlah mencapai " .. threshold,
                    Duration = 1
                })
            else
                Rayfield:Notify({
                    Title = "Input Tidak Valid",
                    Content = "Masukkan angka, bukan teks.",
                    Duration = 1
                })
            end
        end
    })
    -- Toggle Auto Sell berdasarkan threshold ikan
    local AutoSellToggle = AutoSellTab:CreateToggle({
        Name = "üõí Auto Sell",
        CurrentValue = false,
        Flag = "AutoSell",
        Callback = function(value)
            toggleState.AutoSell = value 
        end
    })
    PlayerSetTab:CreateParagraph({
        Title = "Player Settings",
        Content = "On/Off Untuk Mengaktifkan Fitur.\n\n" 
    })

    
    local floatPlatform = nil

    local function floatingPlat(enabled)
        if enabled then
                local charFolder = workspace:WaitForChild("Characters", 5)
                local char = charFolder:FindFirstChild(LocalPlayer.Name)
                if not char then return end

                local hrp = char:FindFirstChild("HumanoidRootPart")
                if not hrp then return end

                floatPlatform = Instance.new("Part")
                floatPlatform.Anchored = true
                floatPlatform.Size = Vector3.new(10, 1, 10)
                floatPlatform.Transparency = 1
                floatPlatform.CanCollide = true
                floatPlatform.Name = "FloatPlatform"
                floatPlatform.Parent = workspace

                task.spawn(function()
                    while floatPlatform and floatPlatform.Parent do
                        pcall(function()
                            floatPlatform.Position = hrp.Position - Vector3.new(0, 3.5, 0)
                        end)
                        task.wait(0.1)
                    end
                end)
    
            else
                if floatPlatform then
                    floatPlatform:Destroy()
                    floatPlatform = nil
                end 
            end
    end

    -- Tambahkan toggle di Rayfield (PlayerSetTab)
    local floatToggle = PlayerSetTab:CreateToggle({
        Name = "üåä Float on Water",
        CurrentValue = false,
        Flag = "AutoFloatToggle",
        Callback = function(state)
            floatingPlat(state)
        end
    })
    local autoEvent = false
    local savedPos = nil
    local autoEventCheckTime = 12 -- detik

    local function getFrontOfBoat(boatModel)
        -- Cari part terdepan berdasarkan sumbu Z di local space
        local frontPart = nil
        local frontZ = nil
        for _, part in ipairs(boatModel:GetDescendants()) do
            if part:IsA("BasePart") then
                local localPos = boatModel.PrimaryPart and boatModel.PrimaryPart.CFrame:PointToObjectSpace(part.Position) or Vector3.new()
                if not frontZ or localPos.Z < frontZ then
                    frontZ = localPos.Z
                    frontPart = part
                end
            end
        end
        return frontPart and frontPart.Position or boatModel:GetPivot().Position
    end
    local function autoEventHandler()
    task.spawn(function()
        while task.wait(autoEventCheckTime) do
            if autoEvent then
                floatingPlat(true)
                local props = Workspace:FindFirstChild("Props")
                local targetPos = nil

                if props then
                    -- Cari Fishing Boat
                    for _, child in ipairs(props:GetChildren()) do
                        if child:IsA("Model") then
                            if child.PrimaryPart then
                                targetPos = child.PrimaryPart.Position
                                break
                            else
                                local part = child:FindFirstChildWhichIsA("BasePart")
                                if part then
                                    targetPos = part.Position
                                    break
                                end
                            end
                        elseif child:IsA("BasePart") then
                            targetPos = child.Position
                            break
                        end
                    end
                end

                local char = Workspace.Characters:FindFirstChild(LocalPlayer.Name)
                local hrp = char and char:FindFirstChild("HumanoidRootPart")

                if targetPos and hrp then
                    local dist = (hrp.Position - targetPos).Magnitude

                    -- Simpan posisi asli saat pertama kali teleport
                    if not savedCFrame then
                        savedCFrame = hrp.CFrame
                    end

                    if dist > 75 then
                        -- Cek apakah target ada di dalam air
                        local rayOrigin = targetPos + Vector3.new(0, 50, 0) -- 50 studs di atas target
                        local rayDirection = Vector3.new(0, -200, 0)        -- Turun 200 studs

                        local raycastParams = RaycastParams.new()
                        raycastParams.FilterDescendantsInstances = {Workspace:FindFirstChild("Water") or Workspace.Terrain}
                        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist

                        local result = Workspace:Raycast(rayOrigin, rayDirection, raycastParams)

                        if result and result.Instance and result.Instance.Material == Enum.Material.Water then
                            -- Teleport 2 studs di atas permukaan air
                            hrp.CFrame = CFrame.new(Vector3.new(targetPos.X, result.Position.Y + 2, targetPos.Z))
                        else
                            -- Tidak ada air, teleport seperti biasa
                            hrp.CFrame = CFrame.new(targetPos + Vector3.new(0, 5, 0))
                        end
                    end

                    -- Hidupkan autoFishing kalau ada fishing boat
                    floatToggle:Set(true)
                    toggleState.bool_autoFish = true
                    if autoFishToggle then
                        autoFishToggle:Set(true)
                        FishingAnimationToggle:Set(true)
                        MaxRodBaitToggle:Set(true)
                    end

                else
                    -- Balik ke posisi awal
                    if savedCFrame and hrp then
                        hrp.CFrame = savedCFrame
                        savedCFrame = nil
                        floatToggle:Set(false)
                    end
                end
            end
        end
    end)
end

    -- Jalankan otomatis
    autoEventHandler()

    -- Toggle di Rayfield
    EventTab:CreateToggle({
        Name = "‚ö° Auto Farm Event ",
        CurrentValue = false,
        Flag = "AutoEventTeleport",
        Callback = function(state)
            autoEvent = state 
        end
    })


    local tradeDelay = false
    local controller = require(ReplicatedStorage.Controllers.ItemTradingController)
    local Promise = require(ReplicatedStorage.Packages.Promise)

    -- Simpan fungsi asli agar bisa dikembalikan
    local originalCreateTradePrompt = controller.CreateTradePrompt

    PlayerSetTab:CreateToggle({
        Name = "Trade No Delay",
        CurrentValue = false,
        Flag = "Trading Without Delay Prompt",
        Callback = function(value)
            tradeDelay = value

            if value then
                -- Aktifkan auto accept (tanpa prompt)
                controller.CreateTradePrompt = function(...)
                    return Promise.resolve(true)
                end

                Rayfield:Notify({
                    Title = "Trade No Delay",
                    Content = "‚úÖ Prompt dilewati. Trade otomatis aktif.",
                    Duration = 2,
                })
            else
                -- Kembalikan fungsi ke normal (dengan prompt)
                controller.CreateTradePrompt = originalCreateTradePrompt

                Rayfield:Notify({
                    Title = "Trade No Delay",
                    Content = "‚ùå Prompt diaktifkan kembali. Trade manual.",
                    Duration = 2,
                })
            end
        end,
    })

    local backupData = {}

    for _, modScript in ipairs(itemsFolder:GetChildren()) do
        if modScript:IsA("ModuleScript") then
            backupData[modScript.Name] = require(modScript)
        end
    end 
    -- Toggle logic
    local blockUpdateOxygen = false

    PlayerSetTab:CreateToggle({
        Name = "Unlimited Oxygen",
        CurrentValue = false,
        Flag = "BlockUpdateOxygen",
        Callback = function(value)
            blockUpdateOxygen = value
            Rayfield:Notify({
                Title = "Update Oxygen Block",
                Content = value and "Remote blocked!" or "Remote allowed!",
                Duration = 3,
            })
        end,
    })

    -- Hook FireServer
    local oldNamecall
    oldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
        local method = getnamecallmethod()
        local args = {...}

        if method == "FireServer" and tostring(self) == "URE/UpdateOxygen" and blockUpdateOxygen then
            warn("Tahan Napas Bang")
            return nil -- prevent call
        end

        return oldNamecall(self, unpack(args))
    end))

    -- Player Tab
    PlayerSetTab:CreateToggle({
        Name = "Infinity Jump",
        CurrentValue = false,
        Callback = function(val)
            toggleState.infJump = val
        end
    })



    UserInputService.JumpRequest:Connect(function()
        if toggleState.infJump and LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
            LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
        end
    end)

    do
        PlayerSetTab:CreateParagraph({
            Title = "üõí Teleport to Shops",
            Content = "Click a button to teleport to the nearest NPC."
        })
    
        
    end



    PlayerSetTab:CreateSlider({
        Name = "Walk Speed",
        Range = {15, 500},
        Increment = 5,
        CurrentValue = 15,
        Callback = function(val)
            local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if hum then hum.WalkSpeed = val end
        end
    })
    local islandLocation = {
        ["01"] = { name = "Crater Island", position = Vector3.new(1014.896, 20.921, 5071.434) },
        ["02"] = { name = "Lost Isle [Treasure Room]", position = Vector3.new(-3598.539, -279.646, -1634.287) },
        ["03"] = { name = "Lost Isle [Lost Shore]", position = Vector3.new(-3677, 107, -912) },
        ["04"] = { name = "Stingray Shores", position = Vector3.new(-2.382,4.5,2839.47) },
        ["05"] = { name = "Tropical Grove", position = Vector3.new(-2051.413, 6.268, 3662) },
        ["06"] = { name = "Esoteric Depths", position = Vector3.new(3209.068, -1302.855, 1411.844) }, 
        ["08"] = { name = "Esoteric Island", position = Vector3.new(2031.415, 27.397, 1394.621) },
        ["09"] = { name = "Lost Isle [Treasure Hall]", position = Vector3.new(-3652, -298.25, -1469) },
        ["10"] = { name = "Kohana", position = Vector3.new(-678.811, 4.935, 708.578) },
        ["11"] = { name = "Kohana Volcano", position = Vector3.new(-516.92, 22, 191) },
        ["12"] = { name = "Lost Isle [Sisyphus]", position = Vector3.new(-3667.556, -135.574, -900.99) },
        ["13"] = { name = "Weather Machine", position = Vector3.new(-1471, -3, 1929) },
        ["14"] = {name = "Winter Fest", position = Vector3.new(1611, 4, 3280) },
        ["15"] = { name = "Coral Reefs", position = Vector3.new(-2949.694, 63.25, 2248.52) }
    }


    for _, data in pairs(islandLocation) do
        IslandsTab:CreateButton({
            Name = data.name,
            Callback = function()
                local char = Workspace.Characters:FindFirstChild(LocalPlayer.Name)
                local hrp = char and char:FindFirstChild("HumanoidRootPart")
                if hrp then
                    hrp.CFrame = CFrame.new(data.position + Vector3.new(5, 5, 0))
                Rayfield:Notify({
                                Title = "Teleport Success",
                                Content = "Teleported to " .. data.name,
                                Duration = 1
                            })
                else
                    Rayfield:Notify({
                                Title = "Teleport Failed",
                                Content = "HumanoidRootPart not found!",
                                Duration = 1
                            })
                end
            end
        })
    end 
    -- NPC Tab 
    local npcFolder = ReplicatedStorage:WaitForChild("NPC")

    for _, npc in ipairs(npcFolder:GetChildren()) do
        NPCTab:CreateButton({
            Name = "Teleport to NPC: " .. npc.Name,
            Callback = function()
                local myChar = LocalPlayer.Character
                local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")

                if not myHRP then
                    Rayfield:Notify({
                        Title = "‚ùå Teleport Failed",
                        Content = "Character or HumanoidRootPart not found.",
                        Duration = 1
                    })
                    return
                end

                -- Ambil posisi dari properti WorldPivot
                local success, pivotCFrame = pcall(function()
                    return npc:GetPivot() -- atau npc.WorldPivot kalau instance mendukung
                end)

                if success and typeof(pivotCFrame) == "CFrame" then
                    local forward = pivotCFrame.LookVector

    -- Naik 5 stud + maju 5 stud di depan NPC
                    local offset = Vector3.new(0, 5, 0) + forward * 5
                    myHRP.CFrame = pivotCFrame + offset
                    Rayfield:Notify({
                        Title = "‚úÖ Teleport Success",
                        Content = "Teleported to NPC: " .. npc.Name,
                        Duration = 1
                    })
                else
                    Rayfield:Notify({
                        Title = "‚ùå Teleport Failed",
                        Content = "WorldPivot not available for NPC: " .. npc.Name,
                        Duration = 1
                    })
                end
            end
        })
    end

    -- Server Hop (Random Public Server)
    local placeId = game.PlaceId
    local serverInfoParagraph = SettingsTab:CreateParagraph({
        Title = "Server Info",
        Content = "Players in server: " .. #Players:GetPlayers() .. "\nPlaceId: " .. placeId
    })

    -- Biar jumlah player update otomatis setiap 5 detik
    task.spawn(function()
        while task.wait(5) do
            serverInfoParagraph:Set({
                Title = "Server Info",
                Content = "Players in server: " .. #Players:GetPlayers() .. "\nPlaceId: " .. placeId
            })
        end
    end)
    -- Fungsi untuk jalankan pengaturan lingkungan (dan simpan nilai asli)
    SettingsTab:CreateParagraph({
        Title = "Anti Lag / Low Texture",
        Content = "Rejoin Server to reset settings."
    })
    SettingsTab:CreateButton({
        Name = "Anti Lag / Low Texture",
        Callback = function()
            _G.Settings = {
                    Players = {
                        ["Ignore Me"] = true
                    },
                
                    MeshParts = {
                        LowerQuality = true
                    },
                    Other = {
                        ["Low Water Graphics"] = true,
                        ["No Shadows"] = true,
                        ["Low Rendering"] = true
                    }
                }

                -- Terapkan pengaturan global
                local terrain = workspace.Terrain

        
        if  sethiddenproperty then 
            sethiddenproperty(terrain, "WaterWaveSpeed", 0)
            sethiddenproperty(terrain, "WaterReflectance", 0) 
        end
            for _, v in pairs(game:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.Material = Enum.Material.SmoothPlastic
                    v.Reflectance = 0
                elseif v:IsA("Decal") or v:IsA("Texture") then
                    v.Transparency = 1
                end
            end

            local Lighting = game:GetService("Lighting")
            for _, effect in pairs(Lighting:GetChildren()) do
                if effect:IsA("PostEffect") then
                    effect.Enabled = false
                end
            end

            Lighting.GlobalShadows = false
            Lighting.FogEnd = 1e10

            settings().Rendering.QualityLevel = "Level01"
        end
    })
    -- === ‚úÖ Anti-AFK Toggle ===
    local antiAfkEnabled = false
    local afkConnection = nil

    SettingsTab:CreateToggle({
        Name = "üõ°Ô∏è Anti AFK",
        CurrentValue = false,
        Flag = "ToggleAntiAFK",
        Callback = function(state)
            antiAfkEnabled = state

            if state then
                local vu = game:GetService("VirtualUser")
                afkConnection = Players.LocalPlayer.Idled:Connect(function()
                    vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                    task.wait(1)
                    vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                
                end)

                Rayfield:Notify({
                    Title = "Anti AFK",
                    Content = "Anti AFK Diaktifkan ‚úîÔ∏è",
                    Duration = 1,
                })
            else
                if afkConnection then
                    afkConnection:Disconnect()
                    afkConnection = nil
                end

                Rayfield:Notify({
                    Title = "Anti AFK",
                    Content = "Anti AFK Dimatikan ‚ùå",
                    Duration = 1,
                })
            end
        end,
    })
    



    SettingsTab:CreateButton({
        Name = "üîÅ Rejoin Server",
        Callback = function()
            TeleportService:Teleport(placeId, LocalPlayer)
        end
    })



    -- Server Hop (Random Public Server)
    local minPlayers = 2 -- default

    -- Input jumlah minimal player
    SettingsTab:CreateInput({
        Name = "Minimum Players to Join",
        PlaceholderText = "Default: 2",
        RemoveTextAfterFocusLost = true,
        Callback = function(value)
            local num = tonumber(value)
            if num and num >= 0 then
                minPlayers = num
                Rayfield:Notify({
                    Title = "‚úÖ Updated",
                    Content = "Minimum players set to " .. num,
                    Duration = 1
                })
            else
                Rayfield:Notify({
                    Title = "Invalid Input",
                    Content = "Please enter a valid number.",
                    Duration = 1
                })
            end
        end
    })

    -- Server Hop Button
    SettingsTab:CreateButton({
        Name = "üåê Server Hop (Join Random Server)",
        Callback = function()
            Rayfield:Notify({
                Title = "Searching...",
                Content = "Finding a new server to join...",
                Duration = 2
            })

            local servers = {}
            local cursor = ""

            repeat
                local url = "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100" .. (cursor ~= "" and "&cursor=" .. cursor or "")
                local success, result = pcall(function()
                    return HttpService:JSONDecode(game:HttpGet(url))
                end)

                if success and result and result.data then
                    for _, server in ipairs(result.data) do
                        -- Hanya ambil server yang belum penuh, bukan server kita, dan playernya > minPlayers
                        if server.playing < server.maxPlayers and server.id ~= game.JobId and server.playing > minPlayers then
                            table.insert(servers, server.id)
                        end
                    end
                    cursor = result.nextPageCursor or ""
                else
                    Rayfield:Notify({
                        Title = "‚ùå Error",
                        Content = "Server dengan jumlah tersebut tidak ditemukan.",
                        Duration = 1
                    })
                    return
                end
            until not cursor or #servers >= 5 -- Stop kalau sudah dapat 5 server (opsional)

            if #servers > 0 then
                local targetServer = servers[math.random(1, #servers)]
                Rayfield:Notify({
                    Title = "Joining...",
                    Content = "Teleporting to another server!",
                    Duration = 2
                })
                TeleportService:TeleportToPlaceInstance(placeId, targetServer, LocalPlayer)
            else
                Rayfield:Notify({
                    Title = "‚ùå Server Hop Failed",
                    Content = "No available server found to hop with > " .. minPlayers .. " players.",
                    Duration = 1
                })
            end
        end
    }) 
    local eventList = {}
    local dropdown -- simpan referensi dropdown untuk update

    local function updateEventDropdown()
        local props = Workspace:FindFirstChild("Props")
        eventList = {}

        if props then
            for _, child in ipairs(props:GetChildren()) do
                if child:IsA("Model") then
                    local pos
                    if child.PrimaryPart then
                        pos = child.PrimaryPart.Position
                    else
                        local part = child:FindFirstChildWhichIsA("BasePart")
                        if part then
                            pos = part.Position
                        end
                    end
                    if pos then
                        table.insert(eventList, { name = child.Name, position = pos })
                    end
                elseif child:IsA("BasePart") then
                    table.insert(eventList, { name = child.Name, position = child.Position })
                end
            end
        end

        local names = { "Select Event" } -- placeholder pertama
        for _, ev in ipairs(eventList) do
            table.insert(names, ev.name)
        end

        if #eventList == 0 then
            names = { "No events found" }
        end

        if dropdown then
            dropdown:Set(names)
        else
            dropdown = EventTab:CreateDropdown({
                Name = "Teleport to Event",
                Options = names,
                CurrentOption = "Select Event",
                Multi = false,
                Callback = function(selected)
                    if type(selected) == "table" then
                        selected = selected[1]
                    end

                    -- Abaikan placeholder / tidak ada event
                    if not selected or selected == "Select Event" or selected == "No events found" then
                        return
                    end

                    for _, ev in ipairs(eventList) do
                        if ev.name == selected then
                            local character = Workspace.Characters:FindFirstChild(LocalPlayer.Name)
                            local hrp = character and character:FindFirstChild("HumanoidRootPart")
                            if hrp then
                                hrp.CFrame = CFrame.new(ev.position + Vector3.new(0, 5, 0))
                            else
                                Rayfield:Notify({
                                    Title = "‚ùå Teleport Failed",
                                    Content = "Failed to teleport to: " .. ev.name,
                                    Duration = 1
                                })
                            end
                            break
                        end
                    end
                end
            })
        end
    end
    -- Tombol untuk refresh event list
    EventTab:CreateButton({
        Name = "üîÑ Refresh Event List",
        Callback = function()
            updateEventDropdown()
            Rayfield:Notify({
                Title = "‚úÖ Refreshed",
                Content = "Event list has been refreshed.",
                Duration = 1
            })
        end
    })

    -- Panggil pertama kali
    updateEventDropdown()



--farm tab
local TeleportPoints = {
    ["Stingray Shores"] = {
        CFrame.new(83.0673141, 4.28545427, 2722.32764, -0.139156297, 0, -0.990270436, 0, 1, 0, 0.990270436, 0, -0.139156297)
    },
    ["Coral Reefs"] = {
            	CFrame.new(-3118.39624, 2.42531538, 2135.26392, 0.92336154, -1.0069185e-07, -0.383931547, 8.0607947e-08, 1, -6.84016968e-08, 0.383931547, 3.22115596e-08, 0.92336154),

        CFrame.new(-2965.5708, 22.7500286, 2249.01709, 0.0730288103, 3.98725897e-09, 0.997329831, 2.27064021e-08, 1, -5.6605951e-09, -0.997329831, 2.30591581e-08, 0.0730288103),
        CFrame.new(-3102.16309, 5.97334528, 2218.88696, 0.758339584, 8.40698444e-09, -0.651859701, 2.32941257e-08, 1, 3.99960918e-08, 0.651859701, -4.55151223e-08, 0.758339584)
    },
    ["Weather Machine"] = {
            	CFrame.new(-1459.3772, 14.7103214, 1831.5188, 0.777951121, 2.52131862e-08, -0.628324807, -5.24126378e-08, 1, -2.47663063e-08, 0.628324807, 5.21991339e-08, 0.777951121),

        CFrame.new(-1521.20862, 2.87499976, 1912.40564, -0.989418149, 1.00299182e-08, -0.14509216, 6.85348089e-09, 1, 2.23923866e-08, 0.14509216, 2.11610462e-08, -0.989418149),
        CFrame.new(-1574.57129, 13.1473379, 1920.83826, -0.816545427, -3.39974235e-08, 0.577281177, -6.96619793e-08, 1, -3.96422877e-08, -0.577281177, -7.25842781e-08, -0.816545427)
    },
    ["Sisyphus"] = {
        CFrame.new(-3765.69751, -135.074417, -906.893677, 0.704144239, 3.52946827e-08, -0.710056961, -3.45032909e-08, 1, 1.5490853e-08, 0.710056961, 1.35915084e-08, 0.704144239),
        CFrame.new(-3780.09692, -135.074417, -962.226746, -0.366469413, -5.94525993e-08, -0.930430114, 1.91083362e-08, 1, -7.14241963e-08, 0.930430114, -4.39537544e-08, -0.366469413)
    },
    ["Winter Fest"] = {
        CFrame.new(1820.92529, 5.7885952, 3305.04761, -0.290378898, 1.26296209e-08, -0.956911743, -2.8187932e-08, 1, 2.17520597e-08, 0.956911743, 3.32897017e-08, -0.290378898),
        CFrame.new(1704.83362, 4.38193512, 3189.80811, 0.715091407, 8.31226021e-09, 0.699030936, -3.8851347e-08, 1, 2.78528525e-08, -0.699030936, -4.70756305e-08, 0.715091407)
    },
    ["Esoteric Depth"] = {
        CFrame.new(3272.27344, -1301.35535, 1390.97058, -0.422851175, -5.61508493e-08, -0.906199157, 7.32285486e-08, 1, -9.6132986e-08, 0.906199157, -1.07009591e-07, -0.422851175)
    },
    ["Tropical Grove"] = {
        CFrame.new(-2089.77246, 6.26732969, 3657.5332, -0.25072059, -1.00947943e-07, 0.96805948, 4.86856466e-09, 1, 1.05539577e-07, -0.96805948, 3.11740074e-08, -0.25072059),
        CFrame.new(-2126.49707, 53.4868774, 3640.20581, -0.872817099, 4.77880704e-08, 0.488047391, 7.77828291e-09, 1, -8.40062881e-08, -0.488047391, -6.95259601e-08, -0.872817099)
    },
    ["Treasure Room"] = {
        	CFrame.new(-3625.0708, -279.074219, -1594.57605, 0.918176472, -3.97606392e-09, -0.396171629, -1.12946204e-08, 1, -3.62128851e-08, 0.396171629, 3.77244298e-08, 0.918176472),
    	CFrame.new(-3600.72632, -276.06427, -1640.79663, -0.696130812, -6.0491181e-09, 0.717914939, -1.09490363e-08, 1, -2.19084972e-09, -0.717914939, -9.38559541e-09, -0.696130812),
    	CFrame.new(-3548.52222, -269.309845, -1659.26685, 0.0472991578, -4.08685423e-08, 0.998880744, -7.68598838e-08, 1, 4.45538149e-08, -0.998880744, -7.88812216e-08, 0.0472991578),
    	CFrame.new(-3581.84155, -279.09021, -1696.15637, -0.999634147, -0.000535600528, -0.0270430837, -0.000448358158, 0.999994695, -0.00323198596, 0.0270446707, -0.00321867829, -0.99962908),
    	CFrame.new(-3601.34302, -282.790955, -1629.37036, -0.526346684, 0.00143659476, 0.850268841, -0.000266355521, 0.999998271, -0.00185445137, -0.850269973, -0.00120255165, -0.526345372),
        CFrame.new(-3601.52588, -282.991669, -1629.59265, -0.0535041578, -7.48535811e-08, 0.998567641, 6.44989342e-08, 1, 7.84168677e-08, -0.998567641, 6.86021764e-08, -0.0535041578),
        CFrame.new(-3594.76074, -275.663788, -1642.65515, 0.992020428, 2.66124651e-08, -0.126077324, -2.72226544e-08, 1, -3.11684589e-09, 0.126077324, 6.52413412e-09, 0.992020428)
    },
    ["Lost Shore"] = {
        CFrame.new(-3674.72852, 5.4255538, -860.631531, -0.995413721, 6.02128791e-09, 0.0956638828, 3.38107586e-09, 1, -2.77609349e-08, -0.0956638828, -2.73101683e-08, -0.995413721)
    },
    ["Kohana Volcano"] = {
        	CFrame.new(-701.447937, 48.1446075, 93.1546631, -0.0770962164, 1.34335654e-08, -0.997023642, 9.84464776e-09, 1, 1.27124169e-08, 0.997023642, -8.83526763e-09, -0.0770962164),
    	CFrame.new(-654.994934, 57.2567711, 75.098526, -0.540957272, 2.58946509e-09, -0.841050088, -7.58775585e-08, 1, 5.18827363e-08, 0.841050088, 9.1883166e-08, -0.540957272),
        CFrame.new(-551.749451, 18.9822178, 186.119385, 0.486031145, -2.23523227e-08, 0.873941481, -5.49010153e-08, 1, 5.61089344e-08, -0.873941481, -7.52509663e-08, 0.486031145)
    },
    ["Crater Island / Kawah"] = {
            CFrame.new(1066.1864, 57.2025681, 5045.5542, -0.682534158, 1.00865822e-08, 0.730853677, -5.8900711e-09, 1, -1.93017531e-08, -0.730853677, -1.74788859e-08, -0.682534158),
            CFrame.new(1057.28992, 33.0884132, 5133.79883, 0.833871782, 5.44149223e-08, 0.551958203, -6.58184218e-09, 1, -8.86416984e-08, -0.551958203, 7.02829084e-08, 0.833871782),
            CFrame.new(988.954712, 42.8254471, 5088.71289, -0.849417388, -9.89310394e-08, 0.527721584, -5.96115086e-08, 1, 9.15179328e-08, -0.527721584, 4.62786431e-08, -0.849417388),
            CFrame.new(1006.70685, 17.2302666, 5092.14844, -0.989664078, 5.6538525e-09, -0.143405005, 9.14879283e-09, 1, -2.3711717e-08, 0.143405005, -2.47786183e-08, -0.989664078),
            CFrame.new(1025.02356, 2.77259707, 5011.47021, -0.974474192, -6.87871804e-08, 0.224499553, -4.47472104e-08, 1, 1.12170284e-07, -0.224499553, 9.92613209e-08, -0.974474192),
            CFrame.new(1071.14551, 3.528404, 5038.00293, -0.532300115, 3.38677708e-08, 0.84655571, 6.69992914e-08, 1, 2.12149165e-09, -0.84655571, 5.7847906e-08, -0.532300115),
            CFrame.new(1022.55457, 16.6277809, 5066.28223, 0.721996129, 0, -0.691897094, 0, 1, 0, 0.691897094, 0, 0.721996129),

            CFrame.new(1023.29114, 19.1177425, 5070.02588, 0.507022858, 2.01505461e-08, -0.861932635, 5.94909153e-08, 1, 5.83732387e-08, 0.861932635, -8.08737255e-08, 0.507022858),
            CFrame.new(981.318909, 41.6503983, 5078.02344, -0.0676535219, -6.19234299e-08, 0.997708857, -2.32029294e-08, 1, 6.04922619e-08, -0.997708857, -1.90572536e-08, -0.0676535219)
    }
}
local selectedIslands = {}


--sell allfish

local function SellAllFish()
     replicatedStorage.Packages._Index["sleitnick_net@0.2.0"].net["RF/SellAllItems"]:InvokeServer()
                        
end
-- Fungsi teleport random
local function TeleportRandom()
    if not selectedIslands or #selectedIslands == 0 then
        warn("Tidak ada pulau yang dipilih!")
        return
    end

    -- Pilih pulau random dari yang dipilih
    local randomIsland = selectedIslands[math.random(1, #selectedIslands)]
    local points = TeleportPoints[randomIsland]

    if points and #points > 0 then
        local randomPoint = points[math.random(1, #points)]
        local hrp = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
        hrp.CFrame = randomPoint
    else
        --warn("Pulau " .. randomIsland .. " tidak punya CFrame.")
    end
    print("Teleporting to " .. randomIsland)
end

local islandNames = {}
for islandName, _ in pairs(TeleportPoints) do
    table.insert(islandNames, islandName)
end

-- Dropdown
local MultiDropdown = FarmTab:CreateDropdown({
    Name = "Select Islands",
    Options = islandNames,
    MultipleOptions = true,
    Callback = function(selected)
        selectedIslands = selected
    end
})

    FarmTab:CreateInput({
        Name = "Auto Teleport Threshold",
        PlaceholderText = "Default: 10",
        RemoveTextAfterFocusLost = false,
        Callback = function(input)
            local num = tonumber(input)
            if num then
                thresholdTP = num
                Rayfield:Notify({
                    Title = "Threshold Diperbarui",
                    Content = "User akan teleport otomatis saat jumlah mencapai " .. thresholdTP,
                    Duration = 1
                })
            
            end
        end
    })

    local AutoFarmToggle = FarmTab:CreateToggle({
    Name = "Auto Fish Selected Island",
    CurrentValue = false,
    Callback = function(state)
      
         if state then
              TeleportRandom()
              toggleState.bool_autoFarm = state
              toggleState.bool_autoFish = state
              autoFishToggle:Set(state)
            FishingAnimationToggle:Set(state)
            MaxRodBaitToggle:Set(state) 
                
            
            end
    end
})

--get FishCaught


local RemoteFishCaught = game:GetService("ReplicatedStorage")
    .Packages._Index["sleitnick_net@0.2.0"].net["RE/ObtainedNewFishNotification"]

RemoteFishCaught.OnClientEvent:Connect(function(...)
     fishCount = fishCount +  1
     fishCountFarm = fishCountFarm + 1
          if(toggleState.AutoSell and fishCount >= threshold) then
                                    -- Jika auto sell aktif dan jumlah ikan >= threshold, teleport
                                    fishCount = 0
                                     SellAllFish()
                                end

                                if(toggleState.bool_autoFarm and fishCountFarm >= thresholdTP) then
                                    -- Jika auto farm aktif dan jumlah ikan >= threshold, teleport
                                   -- print("Fish Count:", fishCount, "Threshold:", thresholdTP)
                                   fishCountFarm = 0
                                    TeleportRandom()
                                end
end)



 local webhookURL = "https://discord.com/api/webhooks/1405049416892547204/aTSOoZDGMsI9Ewm39J81nm7OV_zp4UuB5d_MU0L_Rx1c2zcYf5ERzQvr77PL2eGDF9-5"

local function sendFishData(playerName, fishName, rarity)
    local url = "https://aldytoi-fish.vercel.app/api/webhook"
    local body = HttpService:JSONEncode({
        playerName = playerName,
        fishName = fishName,
        rarity = rarity
    })

    if syn and syn.request then
        syn.request({
            Url = url,
            Method = "POST",
            Headers = { ["Content-Type"] = "application/json" },
            Body = body
        })
    else
        warn("Executor tidak support HTTP request")
    end
end


-- Contoh panggilan
 -- AutoFishTab (Auto Fish)
    DiscordTab:CreateParagraph({
        Title = "DC Webhook Settings",
        Content = "Setup Discord Options, Input jumlah rarity ikan yang ingin di kirimkan ke discord. jika ingin rarity 1 in 500K, input saja 500.  defaultnya adalah 200, jadi ikan yang rarity 1 in 200 akan di kirimkan ke discord."
    })

    DiscordTab:CreateButton({
        Name = "Copy Link Discord Webhook (channelDiscord)",
        Callback = function()
            local channelDiscord = "https://discord.gg/vNHJRyry"
            setclipboard(channelDiscord)
            Rayfield:Notify({
                Title = "Link Copied",
                Content = "Webhook URL telah disalin ke clipboard.",
                Duration = 1
            })
        end
    })
local rarityValue = 200;
DiscordTab:CreateInput({
        Name = "üéØ Webhook Rarity 1 in ?",
        PlaceholderText = "200",
        RemoveTextAfterFocusLost = false,
        Callback = function(input)
            local num = tonumber(input)
            if num then
                rarityValue = num 
            else
                Rayfield:Notify({
                    Title = "Input Tidak Valid",
                    Content = "Masukkan angka, bukan teks.",
                    Duration = 1
                })
            end
        end
    })
    local sendToDiscord = false
  local DiscordTabToggle =   DiscordTab:CreateToggle({
        Name = "Send Ke Discord",
        CurrentValue = sendToDiscord,
        Flag = "DiscordTabToggle",
        Callback = function(Value)
             sendToDiscord = Value 
        end
    })

    
local container = player.PlayerGui["Small Notification"].Display.Container

local function detectNewFish()
    local player = game.Players.LocalPlayer
    local playerName = player and player.Name or "Unknown"

    local itemNameLabel = container:FindFirstChild("ItemName")
    local rarityLabel = container:FindFirstChild("Rarity")

    if itemNameLabel and rarityLabel then
        local fishName = itemNameLabel.Text
        local rarity = rarityLabel.Text

        if fishName and rarity and fishName ~= "" and rarity ~= "" then
            local numberStr = rarity:match("in%s*(%d+)")
            if numberStr then
                local number = tonumber(numberStr)
                if number and number > rarityValue and sendToDiscord then
                    sendFishData(playerName, fishName, rarity)
                end
                
            end
               
        end
    end
end


if container:FindFirstChild("ItemName") then
    container.ItemName:GetPropertyChangedSignal("Text"):Connect(detectNewFish)
end
