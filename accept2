 
-- Simpan fungsi asli agar bisa dikembalikan
 local Replion, Promise, ItemUtility, ItemStringUtility, PromptController
local modulesLoaded = pcall(function()
    Replion = require(replicatedStorage:WaitForChild("Packages"):WaitForChild("Replion"))
    Promise = require(replicatedStorage:WaitForChild("Packages"):WaitForChild("Promise"))
    ItemUtility = require(replicatedStorage:WaitForChild("Shared"):WaitForChild("ItemUtility"))
    ItemStringUtility = require(replicatedStorage:WaitForChild("Modules"):WaitForChild("ItemStringUtility"))
    PromptController = require(replicatedStorage:WaitForChild("Controllers"):WaitForChild("PromptController"))
end)
local oldFirePrompt
local AutoAcceptTrade
 AutoAcceptTrade  = getgenv().Tabs.PlayerSetTab:CreateToggle({
    Name = "Auto Trade",
    CurrentValue = false,
    Flag = "AutoAcceptTrade",
    Callback = function(value)
 
        if value then
            -- Aktifkan auto accept (tanpa prompt)
              if modulesLoaded and PromptController and Promise then
                if not oldFirePrompt then
                    oldFirePrompt = hookfunction(PromptController.FirePrompt, function(self, promptText, ...)
                        if type(promptText) == "string" and  promptText:find("to give") then
                            return Promise.resolve(true)
                        end
                        return oldFirePrompt(self, promptText, ...)
                    end)
                end
            end

            
        else
            -- Kembalikan fungsi ke normal (dengan prompt)
            if oldFirePrompt then
                hookfunction(PromptController.FirePrompt, oldFirePrompt)
                oldFirePrompt = nil
            end
            
        end
    end
}) 


-- Hook metamethod global
getgenv().oldAFKScript = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
    local method = getnamecallmethod()

    if method == "FireServer" and tostring(self) == "ReconnectPlayer" then 
        return nil  
    end

    return getgenv().oldAFKScript(self, ...)
end))
    PromptController = require(replicatedStorage:WaitForChild("Controllers"):WaitForChild("PromptController"))

local oldDrawPrompt = PromptController.DrawPrompt
local oldFirePrompt = PromptController.FirePrompt
getgenv().AutoPromptBindable = nil

PromptController.DrawPrompt = function(self, promptEntry, ...)
    -- Ambil bindable dari upvalue
    if not getgenv().AutoPromptBindable then
        for i = 1, 20 do
            local ok, name, value = pcall(debug.getupvalue, oldDrawPrompt, i)
            if ok and name and typeof(value) == "Instance" and tostring(name):lower():find("bindable") then
                getgenv().AutoPromptBindable = value
               -- print("[AutoAccept] âœ… BindableEvent ditemukan dari DrawPrompt (index " .. i .. ")")
                break
            end
        end
    end

    local result = oldDrawPrompt(self, promptEntry, ...)

    local text = tostring(promptEntry.TextPrompt or "")
    if text:find("Accept") or text:find("from:")  then
        task.spawn(function()
            -- Tunggu 1 frame agar listener sudah siap
            task.wait()  -- menunggu heartbeat berikutnya
            local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
            local promptGui = playerGui:WaitForChild("Prompt")
            local yesButton = promptGui.Blackout.Options.Yes

            yesButton:SetAttribute("Inactive", nil)

            if getgenv().AutoPromptBindable then
             --   print("[AutoAccept] Listener siap, Fire YES")
                getgenv().AutoPromptBindable:Fire(true)
            else
            --    warn("[AutoAccept]  Bindable belum ada walau DrawPrompt dipanggil")
            end

            promptGui.Enabled = false
        end)
    end

    return result
end

-- Biarkan FirePrompt berjalan normal (kita hanya hook DrawPrompt)
PromptController.FirePrompt = function(self, promptText, ...)
    return oldFirePrompt(self, promptText, ...)
end