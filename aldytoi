local AldyTois2 = {
		"\100\072\122\068\048\050\122\102\114\050\079\055\043\076\112\074\105\098\112\074\076\102\107\098\109\090\107\102\043\072\107\068\082\108\077\102\114\111\066\104\073\113\110\120\073\103\079\055\043\110\122\102\121\115\112\070\073\113\112\074\076\102\117\101\109\084\117\102\114\050\079\055\043\076\112\074\043\072\111\053\107\115\110\066\056\113\112\074\082\108\077\102\048\077\061\061",
		"\103\108\053\099\105\119\074\102\114\098\097\102\087\076\112\074\087\050\053\102\087\119\080\061",
		"\109\090\078\120\121\100\110\115\121\120\112\099\109\090\122\088\048\090\080\061",
		"\112\100\102\079\056\084\110\074\107\113\112\088\109\103\074\061",
		"\080\084\052\099\073\072\122\068\056\113\057\102\114\075\079\061",
		"\048\115\052\098\056\090\110\120",
		"\079\104\067\120\082\104\100\078\117\104\079\084\117\104\109\098\117\104\074\084",
		"\100\084\112\088\048\090\117\120\043\113\067\053\073\084\112\051\073\113\051\102\114\108\054\102\073\115\112\099\073\076\054\120\056\098\054\120\114\115\102\075\048\084\112\098\105\053\061\061",
		"\119\090\107\088\048\090\080\061",
		"\079\069\100\061",
		"\107\090\078\070\121\113\110\099\073\076\054\104\073\113\110\120\073\103\079\061",
		"\107\113\112\086\109\050\122\066\114\072\107\066\056\084\118\061",
		"\109\103\054\111\056\113\102\070\109\103\107\066\056\084\118\068\121\075\117\068\056\053\061\061",
		"\112\100\102\104\073\072\122\068\121\084\100\061",
		"\080\103\112\120\056\101\117\102\056\113\111\061",
		"\112\113\102\102\114\074\117\068\056\113\052\098",
		"\073\113\102\047\048\080\061\061",
		"\114\084\052\098\073\077\061\061",
		"\114\084\110\084\048\090\107\069\107\075\122\051\056\090\100\061",
		"\043\110\117\111\109\103\073\099",
		"\114\084\112\088\048\090\117\120\048\090\107\100\121\090\112\098\114\111\061\061",
		"\104\113\052\070\109\090\057\080\056\113\110\078\048\103\043\061",
		"\114\115\052\108\056\113\052\118\112\103\117\102\114\115\078\051\056\090\100\061",
		"\114\113\052\086\121\103\107\066\056\084\118\061",
		"\100\074\109\068\080\084\110\099\109\084\112\088\107\115\102\086\121\113\102\099\048\120\102\099\114\072\112\120\114\111\061\061",
		"\104\103\112\120\109\103\107\066\056\084\078\117\073\090\057\120\121\103\054\088\121\090\112\098",
		"\104\050\122\066\048\084\102\099\109\090\057\080\056\113\110\078",
		"\100\074\100\068\107\115\102\086\121\113\102\099\048\120\117\068\056\103\054\088\048\103\107\102\048\077\061\061",
		"\107\113\102\086\109\084\052\099\056\115\112\070\073\113\112\074\105\101\107\102\056\113\112\111\056\050\122\120\048\090\080\061",
		"\100\084\102\055\048\080\061\061",
		"\080\050\112\098\114\115\112\099\073\110\048\051\056\072\112\102",
		"\100\074\100\068\107\115\102\086\121\113\102\099\048\101\117\120\056\050\054\111\048\090\080\061",
		"\080\115\110\070\121\084\073\098\056\050\112\099\048\067\117\068\056\113\052\098\079\111\061\061",
		"\122\120\117\097\109\103\122\051\109\050\107\102\114\075\079\075\043\113\048\068\056\113\107\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\099",
		"\043\113\051\120\073\072\054\086\082\108\083\068\048\084\102\120\121\072\112\108\105\115\117\068\056\119\052\051\056\113\107\078\121\075\122\055",
		"\112\113\112\088\048\103\054\068\114\075\080\053\100\050\112\070\109\084\112\086\114\111\061\061",
		"\056\115\110\047\048\080\061\061",
		"\104\115\083\053\109\103\048\051\121\090\057\051\109\115\057\102\043\072\117\102\114\075\048\102\114\108\054\115\056\050\112\099\048\076\054\120\056\098\054\097\056\050\077\053\073\084\102\120\121\076\077\065\043\077\061\061",
		"\100\074\048\081\100\084\112\088\056\067\110\088\056\067\102\120\048\090\101\086",
		"\112\113\112\118\073\072\112\098\048\080\061\061",
		"\100\084\051\066\056\075\102\117\073\090\057\120\121\103\054\088\121\090\112\098",
		"\107\115\057\068\109\103\107\080\056\113\110\120\048\115\052\098\056\080\061\061",
		"\080\090\057\074\106\112\107\068\121\119\073\086\043\067\048\066\114\084\053\053\119\103\080\051",
		"\100\074\048\081\100\115\112\057\073\090\112\086\073\067\048\066\114\084\051\066\056\115\073\117\121\090\078\066\048\084\110\047\048\112\117\120\109\103\122\120\048\090\080\061",
		"\112\100\102\072\114\115\110\074\121\090\112\099\073\077\061\061",
		"\100\084\112\088\048\090\117\120\048\090\107\119\109\103\122\066\073\072\074\061",
		"\112\072\102\111\048\080\061\061",
		"\119\090\078\115\121\090\078\066\073\072\074\053\119\075\112\047\114\077\061\061",
		"\109\103\112\120\056\101\107\098\109\090\107\102\104\084\118\061",
		"\080\090\107\047\121\090\118\053\105\119\054\117\048\103\107\102\056\050\043\053\100\115\110\066\056\053\061\061",
		"\080\084\051\066\056\113\107\054\048\113\107\102\048\077\061\061",
		"\112\084\110\066\073\113\102\099\048\098\054\115\056\050\043\053\048\103\048\102\056\075\080\099\105\108\118\061",
		"\107\072\112\098\109\103\107\066\056\084\118\061",
		"\104\090\110\086\073\090\047\049\109\090\118\053\056\113\102\099\121\098\054\104\048\103\122\084\048\103\043\061",
		"\083\122\065\100\053\119\054\119\048\090\066\068\121\090\118\053\100\084\112\098\073\115\112\098",
		"\107\113\102\086\109\084\052\098\048\076\054\103\048\090\122\097\056\084\052\049",
		"\080\050\122\051\073\113\112\098\043\067\102\086\056\113\110\099\048\077\061\061",
		"\114\084\112\088\048\090\117\120\048\090\107\080\056\113\110\078\048\103\122\082\109\090\101\102",
		"\112\115\110\088\073\090\100\061",
		"\100\120\112\069\100\074\112\100",
		"\100\113\057\051\106\090\112\098\043\110\107\102\056\113\100\061",
		"\048\115\102\088\073\113\112\098\112\090\078\115\109\103\048\068\114\115\102\120\048\090\080\061",
		"\083\122\065\082\049\098\054\054\073\103\107\068\043\110\117\102\056\113\111\053\112\113\051\098\048\103\117\097\056\084\057\074",
		"\107\090\078\070\121\113\110\099\073\072\079\061",
		"\112\090\078\115\109\103\048\068\114\115\102\120\048\090\080\053\107\115\102\086\121\076\054\116\056\115\057\078",
		"\104\090\112\075\109\090\057\068\048\113\052\099\043\067\051\101\056\075\080\061",
		"\100\084\051\068\109\084\047\102\048\077\061\061",
		"\104\084\088\061",
		"\119\113\052\088\106\119\054\100\114\115\102\074\048\090\078\120\043\076\120\053\100\115\052\074\112\113\051\098\056\050\114\061",
		"\048\084\057\068\109\115\100\061",
		
		"\112\113\110\098\048\084\112\120\043\072\054\088\109\103\102\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\053\056\050\043\053\121\090\078\084\109\090\057\066\048\076\118\061",
		"\114\113\112\098\048\115\112\070\073\067\117\051\114\050\080\061",
		"\080\103\112\120\056\120\048\051\114\115\101\100\056\084\073\075\056\113\112\069\056\084\078\115\121\090\114\061",
		"\112\084\110\066\073\113\102\099\048\098\054\120\056\098\054\086\073\113\110\098\073\076\054\120\114\115\110\074\121\090\078\075\043\076\118\099\105\053\061\061",
		"\114\084\110\084\048\090\107\080\056\050\079\061",
		"\119\090\078\084\109\090\057\066\048\076\054\122\056\075\054\101\073\077\061\061",
		"\080\084\110\088\056\113\122\051\109\084\088\061",
		"\100\074\109\068\119\090\078\066\073\113\102\051\073\113\112\100\114\115\110\074\048\080\061\061",
		"\056\084\057\074\104\115\110\047\048\090\117\051\056\113\111\061",
		"\112\113\112\088\048\103\054\068\114\075\080\053\073\113\083\053\107\103\048\102\056\075\080\061",
		"\107\115\102\086\121\113\102\099\048\098\054\119\056\084\107\086",
		"\114\115\110\099\048\113\052\047",
		"\080\084\052\099\073\113\112\099\073\077\061\061",
		"\119\090\078\084\048\090\078\120\056\050\122\078\119\103\107\102\056\080\061\061",
		"\048\075\122\068\056\112\122\072\080\053\061\061",
		"\119\115\052\108\119\090\080\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098\043\113\052\098\043\067\051\101\056\090\110\099\056\084\102\074\100\115\052\068\073\110\054\051\114\075\080\053\056\115\052\120\043\113\048\068\073\090\078\074\105\053\061\061",
		"\107\113\112\115\109\103\112\088\073\069\097\053\079\104\077\061",
		"\080\075\112\078\103\101\122\068\048\077\061\061",
		"\056\113\110\086\073\067\048\066\114\084\053\061",
		"\080\115\110\075\100\084\102\055\048\080\061\061",
		"\107\111\061\061",
		"\080\090\101\108\121\090\112\099\073\077\061\061",
		"\107\090\078\070\121\113\110\099\073\110\117\120\056\084\078\102\114\111\061\061",
		"\119\113\110\098\048\084\067\053\119\090\047\051\056\108\054\067\121\103\107\051\056\103\054\066\056\113\047\051\056\053\061\061",
		"\107\103\122\098\056\050\043\061",
		"\100\115\110\099\048\084\100\061",
		"\114\072\122\066\109\084\112\090\109\090\057\101\048\080\061\061",
		"\112\072\122\051\048\113\112\104\073\113\052\099\048\112\107\051\109\053\061\061",
		"\080\115\110\066\073\072\079\061",
		"\107\084\051\068\114\050\080\053\112\084\052\098\056\080\061\061",
		"\107\115\110\084\056\050\122\066\073\113\100\053\080\090\057\088\043\110\117\102\109\050\122\102\073\077\061\061",
		"\112\084\102\099\073\113\112\098\043\067\048\102\114\050\080\061",
		"\112\084\112\051\073\113\051\102\114\074\101\051\109\084\051\066\056\115\112\080\114\115\102\070\048\080\061\061",
		"\100\113\110\075\048\103\079\061",
		"\114\084\112\088\048\090\117\120\048\090\107\122\073\113\112\047\104\115\110\047\048\080\061\061",
		"\100\050\107\051\114\075\107\102\048\076\054\054\073\103\107\068\043\067\122\101\106\090\102\099\048\098\054\104\048\090\057\102\109\050\107\102\048\076\054\103\048\090\110\120\121\113\112\098\087\072\079\066",
		"\100\074\048\081\080\103\112\120\056\120\048\066\114\084\053\061",
		"\080\075\112\078\103\101\073\102\109\103\107\097\048\103\043\061",
		"\080\103\112\120\056\101\117\102\056\113\057\100\109\090\043\061",
		"\104\103\112\088\073\113\074\061",
		"\107\103\117\068\073\113\112\098\121\090\079\053\119\103\117\088\109\090\078\074",
		"\109\090\117\120\121\103\048\102\107\103\048\102\056\075\107\082\109\090\101\102",
		"\100\072\122\068\056\103\054\120",
		"\056\113\052\050\048\103\043\061",
		"\080\084\052\047\114\113\057\102\073\113\100\061",
		"\112\103\117\102\114\074\102\099\114\072\112\120\100\084\112\098\073\115\102\070\048\080\061\061",
		"\121\090\078\086\048\103\122\120",
		"\100\084\110\050\048\103\122\066\109\080\061\061",
		"\107\115\110\098\056\112\107\051\109\053\061\061",
		"\056\115\112\050",
		"\114\084\057\102\121\103\107\099\121\090\117\049\103\084\078\102\073\067\077\111\105\070\043\099\079\077\061\061",
		"\100\113\057\102\109\103\117\102\043\072\117\102\056\113\112\070\073\076\054\066\073\113\112\047\114\098\111\053\109\090\101\068\073\090\078\120\105\076\054\068\114\108\054\111\056\113\110\078\048\103\043\099",
		"\100\074\048\081\119\090\078\066\073\113\102\051\073\113\112\100\114\115\110\074\048\080\061\061",
		"\104\084\118\068\104\084\048\115\105\053\097\087",
		"\114\084\112\120\073\113\102\099\048\050\079\061",
		"\107\113\102\086\109\084\052\098\048\067\102\074",
		"\109\090\117\070\048\103\054\120",
		"\100\074\112\119\056\084\057\088\107\090\078\070\121\113\110\099\073\077\061\061",
		"\079\104\079\120\082\104\109\101\117\069\043\101\117\070\109\120\079\069\079\120",
		"\114\113\057\051\106\090\102\099\048\111\061\061",
		"\100\115\112\120\114\075\102\067\048\090\057\051\106\080\061\061",
		"\100\050\107\051\114\075\080\053\112\072\122\051\048\113\100\051",
		"\118\066\084\079\043\067\112\098\114\115\052\098",
		"\056\115\112\118\073\110\054\051\048\084\112\069\073\103\122\086\056\050\043\061",
		"\107\084\110\075\109\090\111\053\056\090\112\047\109\115\110\070\109\119\054\108\109\090\102\120\043\113\101\068\048\072\112\088\048\104\097\061",
		"\119\103\107\102\056\100\078\051\056\090\100\061",
		"\119\090\078\099\048\103\043\061",
		"\048\113\112\088\109\103\074\061",
		"\048\084\110\047\048\100\102\099\114\050\107\051\056\115\117\102\119\090\080\052\087\110\088\102\073\098\100\047\103\119\088\066",
		"\107\115\102\098\048\112\117\102\114\075\048\102\114\053\061\061",
		"\104\090\112\086\121\110\054\051\114\075\107\067\048\103\107\051\121\090\057\079\048\103\048\102\056\077\061\061",
		"\080\084\052\088\056\050\043\061",
		"\114\115\110\099\048\113\052\047\112\113\051\102\056\090\100\061",
		"\112\072\122\068\114\113\102\070\109\090\111\053\107\050\122\068\073\115\100\061",
		"\119\090\047\051\056\108\054\051\121\084\110\099\043\113\107\066\121\075\112\051\056\076\054\068\073\113\052\047\109\103\107\066\114\098\054\086\109\090\110\120\043\113\066\101\056\090\057\051\121\076\054\108\109\090\117\049\114\113\110\070\121\098\054\047\048\090\078\070\109\103\054\051\121\119\077\061",
		"\104\090\110\086\073\090\047\049\109\090\118\053\109\090\078\075\121\084\067\061",
		"\073\072\122\051\048\113\112\104\048\103\080\061",
		"\080\050\122\051\073\113\112\098\043\067\102\086\056\113\110\099\048\076\077\068\043\067\047\051\073\084\110\097",
		"\107\115\102\086\121\067\102\120",
		"\100\113\057\051\106\090\112\098\114\111\061\061",
		"\107\113\102\086\109\090\122\088\048\080\061\061",
		"\119\075\112\047\056\113\110\097\043\067\122\051\073\072\100\061",
		"\100\074\109\068\100\072\112\098\109\084\051\051\114\084\112\103\048\090\110\120\121\113\112\098\107\103\048\102\056\075\080\061",
		"\100\084\112\070\114\115\112\120",
		"\107\090\078\070\121\113\110\099\073\067\107\098\056\050\054\074\056\050\073\099",
		"\109\103\112\120\056\101\122\102\114\050\054\051\073\084\118\061",
		"\112\084\110\088\121\101\117\111\048\090\112\074",
		"\122\076\077\061",
		"\107\115\102\086\121\113\112\086",
		"\121\090\078\115\119\075\112\047\114\077\061\061",
		"\112\115\102\098\073\072\112\051\056\067\102\099\114\072\112\120\104\090\110\099\109\090\073\102\114\053\061\061",
		"\114\084\112\099\048\067\107\051\073\113\110\067\121\103\117\070\056\050\122\074",
		"\100\072\122\068\106\113\102\047\121\103\107\078\100\072\122\068\056\103\054\120\100\084\112\098\073\115\102\070\048\080\061\061",
		"\080\103\112\120\056\098\054\113\121\103\117\097\121\090\078\075",
		"\080\084\057\066\109\084\047\067\048\090\057\051\106\080\061\061",
		"\112\103\122\088",
		"\107\103\054\066\109\111\061\061",
		"\100\084\112\088\048\090\117\120\043\067\102\120\048\090\120\053\048\075\122\068\056\119\054\122\056\075\048\102\056\075\107\068\114\075\074\061",
		"\119\090\078\070\114\115\112\047\048\090\078\120",
		"\112\113\112\088\048\103\054\068\114\075\107\080\056\113\110\078\048\103\122\067\114\115\052\111\048\113\052\050\056\053\061\061",
		"\100\113\057\051\106\090\112\098\107\050\112\066",
		"\080\050\112\120\114\084\117\102\056\115\112\069\056\084\078\120\114\115\052\088\056\113\112\098",
		"\100\115\110\078\048\115\102\102\056\113\107\110\056\115\110\108\056\113\112\074",
		"\100\115\052\088\056\067\107\051\073\113\067\061",
		"\104\084\078\069\056\113\102\102\056\075\107\110\073\115\112\099\073\077\061\061",
		"\100\115\112\115\056\113\112\070\073\113\110\099\109\084\100\061",
		"\103\120\102\099\048\113\112\118",
		"\079\120\080\053\100\115\112\099\048\113\112\098\043\076\051\103\121\113\102\120\048\119\054\117\056\084\107\102\087\080\061\061",
		"\112\113\051\098\048\103\117\097\056\084\057\074\043\067\107\066\114\113\112\098\109\115\110\098\073\090\074\061",
		"\048\115\102\099\048\077\061\061",
		"\100\115\112\111\056\113\102\068\056\053\061\061",
		"\080\103\112\120\056\098\054\103\048\090\110\120\121\113\112\098",
		"\100\113\057\051\106\090\112\098\080\090\107\074\048\090\080\061",
		"\100\113\057\051\109\084\112\097\056\084\057\074\048\103\122\100\048\103\051\120",
		"\112\072\122\102\109\103\117\101\114\115\100\053\100\115\052\068\056\080\061\061",
		"\056\113\110\086\073\110\107\066\048\103\122\067\109\103\107\051",
		"\109\050\122\102\048\113\102\120\105\090\117\051\114\115\080\061",
		"\114\113\057\051\106\090\112\098\107\072\122\068\114\113\107\068\073\084\118\061",
		"\114\113\057\051\106\090\112\098\107\072\122\068\114\113\107\068\073\084\118\086",
		"\118\066\089\053\071\071\108\116\043\067\122\051\121\103\107\086\043\113\048\068\056\113\107\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\053\121\090\118\053\100\115\112\111\056\113\102\070\109\103\107\102\048\110\117\120\056\050\122\051\048\084\100\061",
		"\112\113\102\102\114\053\061\061",
		"\080\103\112\120\056\120\048\051\073\115\052\098\121\103\107\102\112\113\110\108",
		"\119\072\107\120\114\110\117\102\114\075\048\066\109\084\100\061",
		"\100\050\054\102\109\084\102\051\056\067\101\102\114\084\053\061",
		"\119\084\112\078\114\113\052\066\056\075\107\086",
		"\100\074\109\068\080\103\073\051\121\103\107\100\114\115\110\074\048\112\122\102\114\050\054\068\056\075\117\102",
		"\048\115\102\086\121\067\117\068\073\090\078\120",
		"\100\074\112\081\107\103\110\101\121\103\054\100\056\084\052\088",
		"\109\050\112\086\073\113\052\047\112\103\122\088",
		"\107\113\112\070\109\090\111\061",
		"\100\072\122\068\056\103\054\120\104\115\110\047\048\080\061\061",
		"\107\090\048\115\048\090\117\120\112\072\102\111\048\080\061\061",
		"\121\072\107\120\114\072\079\055\105\098\052\086\109\103\073\102\114\115\102\051\105\115\117\068\105\084\110\088\048\072\102\120\056\084\074\061",
		"\079\084\107\119\048\090\078\074\048\103\043\061",
		"\109\084\052\099\056\115\112\070\073\113\102\068\056\053\061\061",
		"\107\115\052\099\073\077\061\061",
		"\056\050\122\066\048\084\102\099\109\090\057\080\056\050\117\066\073\113\102\068\056\053\061\061",
		"\080\053\061\061",
		"\100\074\100\068\100\115\112\111\056\113\102\070\109\103\107\102\112\113\112\118\073\067\112\115\048\115\112\070\073\077\061\061",
		"\080\090\101\051\106\115\102\099\048\098\054\069\109\103\117\120",
		"\104\090\112\120\121\113\052\074",
		"\080\084\110\099\080\084\052\088\056\113\102\074\048\080\061\061",
		"\048\113\102\086\109\084\052\098\048\067\102\074",
		"\080\084\052\099\073\113\112\099\073\076\101\100\106\103\054\102",
		"\100\113\057\051\106\090\112\098\100\084\112\120\112\113\110\108",
		"\100\074\109\068\100\084\112\088\056\067\110\088\056\067\102\120\048\090\101\086",
		"\104\090\110\120\048\103\122\066\109\090\111\061",
		"\119\090\078\111\073\103\080\053\112\113\102\074\109\090\088\053\112\115\110\088\121\090\080\061",
		"\100\050\107\068\114\067\052\099\112\113\112\118\073\067\101\051\073\113\117\097\048\103\079\061",
		"\112\090\078\110\114\103\112\066\114\110\107\068\056\084\111\061",
		"\080\103\112\120\056\120\122\101\106\112\073\102\109\103\107\097\048\103\122\100\056\084\073\075\056\113\100\061",
		"\118\066\098\110\043\067\112\099\109\084\051\051\056\075\080\053\107\113\102\111\121\090\057\066\121\077\061\061",
		"\080\050\112\098\114\115\112\099\073\067\117\051\056\090\112\098\109\080\061\061",
		"\100\115\112\115\114\115\112\086\121\076\054\110\073\115\112\099\073\076\054\079\121\103\117\120",
		"\105\076\077\061",
		"\080\103\112\120\056\098\054\117\048\090\073\051\056\113\052\074\056\084\118\061",
		"\107\090\078\120\048\103\043\053\106\090\052\101\114\108\054\067\121\103\117\070\056\050\122\074\043\072\073\102\109\115\051\068\056\084\088\053\112\112\122\079",
		"\080\084\051\051\114\115\110\070\073\113\112\098\114\111\061\061",
		"\112\090\078\049\056\115\052\050\056\053\061\061",
		"\100\115\112\047\056\050\048\102\112\113\112\118\073\067\110\115\073\113\112\098\107\115\052\070\073\103\117\079\056\050\117\120",
		"\080\084\052\047\056\090\052\099",
		"\100\084\117\098\048\090\112\099\107\050\112\066",
		"\080\075\112\078\121\090\078\075\043\077\061\061",
		"\083\122\065\082\097\098\054\054\073\103\107\068\043\067\048\051\114\115\120\053\100\084\112\120\073\113\102\099\048\050\079\061",
		"\104\090\112\120\048\090\052\098\043\110\122\051\121\090\118\061",
		"\073\113\102\102\114\074\110\098\114\115\110\078",
		"\104\113\102\099\121\098\054\120\121\090\107\051\121\098\054\084\109\090\057\066\048\077\061\061",
		"\121\090\078\115\056\111\061\061",
		"\107\050\112\066\104\084\122\089\048\090\117\120",
		"\122\103\079\089\122\090\043\097\087\080\061\061",
		"\100\072\122\068\048\050\122\102\114\050\079\053\112\072\122\051\048\113\100\053\080\115\110\120\073\080\061\061",
		"\048\115\102\086\121\067\078\051\056\090\100\061",
		"\090\053\061\061",
		"\104\115\083\053\048\113\112\086\109\050\122\066\114\072\107\066\056\084\118\061",
		"\109\090\101\051\106\115\102\099\048\120\117\051\114\050\080\061",
		"\100\115\112\099\048\113\112\098\100\050\107\102\114\072\054\102\048\077\061\061",
		"\048\072\122\068\114\113\107\068\073\084\118\061",
		"\056\113\052\051\048\113\112\074\043\072\117\101\109\084\117\102\114\050\117\115\073\090\057\088\106\119\067\087\106\090\110\099\048\098\054\089\073\090\110\088\043\113\122\068\056\084\111\053\048\113\110\099\043\072\107\066\073\113\102\120\043\113\078\078\109\119\054\098\109\103\054\102\073\076\118\053\109\090\110\047\121\090\102\099",
		"\100\113\057\051\106\090\112\098\100\115\112\047\056\050\048\066\056\115\114\061",
		"\112\113\112\088\048\103\054\068\114\075\107\104\048\103\122\084\121\090\117\102",
		
		"\109\103\112\120\056\120\048\066\114\084\051\100\056\084\073\075\056\113\100\061",
		"\073\084\110\066\073\077\061\061",
		"\080\115\110\086\048\100\057\101\109\084\088\061",
		"\083\122\065\100\051\076\054\119\048\090\048\098\048\103\117\097\043\110\054\088\109\103\102\102\114\108\054\079\121\103\117\120",
		"\119\084\112\078\100\050\102\086\073\113\112\047",
		"\080\103\112\120\056\101\117\102\056\113\057\100\121\072\122\102\114\084\051\068\056\113\107\076\100\077\061\061",
		"\079\104\079\078\117\070\043\098\079\086\077\050\079\104\077\086\117\070\077\118",
		"\107\115\102\086\121\113\112\098\056\090\110\099\043\067\102\086\056\113\110\099\048\077\061\061",
		"\122\119\118\057\048\074\120\053\080\084\052\066\056\075\079\061",
		"\100\074\109\068\100\072\112\098\109\084\051\051\114\084\112\076\109\090\102\120",
		"\104\090\110\118\100\115\052\074\080\115\110\066\073\110\107\068\048\084\073\088\048\080\061\061",
		"\112\115\102\086\121\090\122\088\048\080\061\061",
		"\080\103\112\120\056\098\054\100\114\115\110\074\048\080\061\061",
		"\100\050\112\070\109\084\112\086\114\111\061\061",
		"\107\115\110\098\056\112\107\097\114\115\112\086\121\113\052\088\048\077\061\061",
		"\100\074\100\068\107\103\110\101\121\103\054\122\073\113\112\047",
		"\100\115\112\086\121\090\057\066\048\090\078\070\048\080\061\061",
		"\119\113\052\088\106\119\054\100\114\115\102\074\048\090\078\120\043\076\120\053\100\050\107\051\114\075\107\119\056\084\107\069\121\113\110\098\048\084\100\061",
		"\090\080\061\061",
		"\119\113\052\088\106\119\054\100\114\115\102\074\048\090\078\120\043\076\120\053\107\115\102\086\121\067\117\051\073\090\073\097\073\077\061\061",
		"\119\090\117\068\056\053\061\061",
		"\107\113\112\051\109\050\107\066\073\115\110\120\048\090\080\053\080\103\112\120\056\098\054\113\121\103\117\097\121\090\078\075",
		"\100\084\112\120\073\113\102\099\048\050\079\061",
		"\104\103\102\120\121\113\102\070",
		"\109\103\117\086\048\103\107\122\048\077\061\061",
		"\104\115\052\120\043\113\112\099\056\050\112\075\121\076\054\066\073\113\112\047\114\111\061\061",
		"\107\090\078\070\121\113\110\099\073\110\107\051\109\053\061\061",
		"\100\074\109\068\112\103\054\074\109\103\107\102\080\103\112\120\056\120\048\066\114\084\051\066\056\115\073\104\073\113\110\120\048\080\061\061",
		"\104\115\083\053\048\103\048\102\056\075\107\086\043\113\048\068\073\090\078\074",
		"\083\122\065\100\053\119\054\119\048\103\117\111\109\103\073\099\043\067\117\097\109\103\122\051\109\050\107\102\114\053\061\061",
		"\107\113\112\070\109\090\057\086",
		"\076\074\101\102\056\115\117\068\109\115\067\053\056\113\110\075\121\119\118\099\105\053\061\061",
		"\100\084\112\098\073\115\112\098\104\072\112\070\121\111\061\061",
		"\109\075\112\075",
		"\080\103\112\120\056\101\107\098\109\090\107\102\112\113\110\108",
		"\119\090\101\051\048\084\112\076\073\103\107\120\056\084\118\061",
		"\104\090\052\074\121\090\048\066\048\103\122\086",
		"\112\113\112\088\048\103\054\068\114\075\107\066\056\115\114\053\073\113\083\053\109\090\078\068\073\113\051\102\114\108\054\086\048\103\122\084\048\103\043\051",
		"\100\072\122\068\109\115\110\108\121\090\057\066\073\072\074\061",
		"\073\084\110\086\080\103\112\120\056\120\048\066\114\084\051\066\056\115\114\061",
		"\104\090\110\066\056\053\061\061",
		"\107\090\078\051\109\115\057\102\043\067\048\066\114\084\051\069\109\103\112\075\121\072\080\053\112\084\112\108\121\113\052\068\121\111\061\061",
		"\112\072\122\051\056\075\117\111\109\103\122\102\056\115\117\078",
		"\080\103\112\120\056\098\054\113\121\103\117\097\043\110\117\102\056\113\112\070\073\113\112\074\043\067\102\086\056\113\110\099\048\077\061\061",
		"\073\113\102\102\114\074\048\066\056\072\107\102\114\053\061\061",
		"\100\084\047\078\109\115\052\118\104\113\109\061",
		"\112\115\112\097\121\090\117\088\048\103\079\061",
		"\100\084\047\078\109\115\052\118\080\115\088\061",
		"\112\113\112\098\114\115\110\066\056\053\061\061",
		"\109\084\052\074\048\104\120\097\090\098\112\050\103\119\088\066",
		"\104\113\052\068\121\101\048\102\109\050\107\068\114\053\061\061",
		"\080\103\112\120\056\098\054\104\048\090\057\088\043\110\107\097\114\115\112\086\121\113\052\088\048\077\061\061",
		"\109\103\112\120\056\084\101\102\048\084\067\061",
		"\104\090\110\118\112\084\112\066\048\084\051\120",
		"\119\072\112\047\109\090\078\068\121\090\080\061",
		"\114\113\057\051\106\090\112\098\080\084\052\101\056\075\080\061",
		"\112\103\117\102\112\074\102\117",
		"\104\090\052\074\073\090\057\102\100\084\117\098\121\103\054\120",
		"\112\084\110\066\073\113\102\099\048\098\054\115\056\050\043\053\114\050\107\051\114\075\080\053\073\072\122\051\048\113\100\099\105\108\118\061",
		"\080\103\112\120\056\120\048\066\114\084\051\100\056\084\073\075\056\113\112\113\056\113\110\075",
		"\100\074\100\068\100\115\052\088\056\067\112\099\109\084\051\051\056\075\080\061",
		"\107\115\110\084\056\050\122\066\073\113\112\100\056\084\073\075\056\113\112\086",
		"\080\084\052\099\056\115\112\070\073\113\112\074",
		"\114\084\112\088\048\090\117\120\048\090\107\080\056\113\110\078\048\103\122\122\048\077\061\061",
		"\117\104\054\049\043\067\117\068\121\090\078\086",
		"\104\113\102\075\121\072\107\066\056\115\114\061",
		"\107\115\110\066\056\113\112\074\043\072\107\068\043\072\107\102\056\113\112\111\056\050\122\120\043\072\107\068\082\108\077\061",
		"\100\072\122\066\056\090\110\098\106\112\054\051\114\075\080\061",
		"\107\115\110\098\056\119\054\104\048\090\057\102\109\050\107\102\048\076\054\110\073\115\112\099\073\077\061\061",
		"\100\074\112\081\080\090\117\120\121\103\048\051\073\113\112\110\056\115\117\097\109\090\078\120\121\090\078\075\080\090\057\120\109\103\043\061",
		"\104\050\073\099\048\103\122\122\048\077\061\061",
		"\073\113\051\102\056\090\112\086",
		"\043\067\117\068\121\090\078\086",
		"\107\075\122\102\114\103\112\102\056\115\117\078",
		"\080\084\057\068\109\084\047\100\121\090\101\102",
		"\100\113\112\098\048\115\112\070\073\067\117\051\114\050\080\061",
		"\073\084\112\108\121\113\052\068\121\101\117\102\073\072\107\066\056\115\114\061",
		"\112\113\102\102\114\070\048\117\106\103\107\097\121\090\117\051\056\077\061\061",
		"\104\090\052\074\048\090\111\061",
		"\048\115\102\086\121\113\102\099\048\120\110\099\121\090\101\051\073\113\102\068\056\053\061\061",
		"\121\090\107\088\048\112\107\066\056\090\100\061",
		"\109\084\052\084\048\080\061\061",
		"\100\084\112\088\048\090\117\120\043\110\073\102\109\103\107\097\048\103\043\097\114\098\074\053\073\113\083\053\080\103\112\120\056\098\054\076\073\103\074\061",
		"\100\115\112\111\056\113\102\070\109\103\107\102\048\110\117\120\056\050\122\051\048\084\100\061",
		"\112\084\110\088\121\098\054\104\114\113\112\102\048\077\061\061",
		"\112\113\112\118\073\110\107\098\109\090\078\086\114\113\110\098\048\090\078\070\106\080\061\061",
		"\112\084\110\120\048\103\122\103\109\103\048\102\100\084\102\055\048\080\061\061",
		"\119\084\052\097\109\090\078\051",
		"\100\072\122\068\109\084\112\086\114\098\054\086\073\113\052\111\114\113\112\074\105\053\061\061",
		"\083\122\065\056\074\108\054\054\073\103\107\068\043\110\117\102\056\113\111\053\080\075\074\053\080\115\110\070\114\113\110\070\121\111\061\061",
		"\080\120\048\098\109\090\101\102",
		"\109\090\122\086",
		"\100\115\112\057\073\090\112\086\073\067\117\088\121\090\112\099\073\110\117\120\056\050\054\113\121\103\117\097\121\090\078\075",
		"\080\115\110\070\121\084\073\098\056\050\112\099\048\110\107\098\109\090\078\086\114\113\110\098\048\090\078\070\106\080\061\061",
		"\112\072\122\051\121\090\111\061",
		"\104\113\052\070\121\098\054\080\056\113\110\078\048\103\043\053\100\113\052\086\121\103\107\066\056\084\118\053\107\113\052\102\114\084\118\075\073\076\054\050\056\050\122\049\043\072\073\066\073\113\053\053\080\103\112\120\056\098\054\113\109\103\122\047\105\101\107\102\056\113\112\111\056\050\122\120",
		"\109\103\112\120\056\120\122\101\106\112\073\102\109\103\107\097\048\103\043\061",
		"\056\050\122\066\048\084\102\099\109\090\057\069\056\084\057\088\121\103\117\066\056\084\078\104\073\113\110\120\048\080\061\061",
		"\119\115\052\066\056\108\054\067\121\103\117\070\056\050\122\074\043\110\117\102\114\075\048\102\114\053\061\061",
		"\119\090\078\084\048\090\078\120\056\050\122\078",
		"\107\084\112\120\119\103\107\102\056\100\078\051\056\090\100\061",
		"\107\113\112\115\109\103\112\088\073\069\097\053\079\053\061\061",
		"\107\115\057\051\048\111\061\061",
		"\112\115\110\098\121\090\110\099\073\067\102\074",
		"\112\113\112\088\048\103\054\068\114\075\107\102\048\076\054\120\056\098\077\061",
		"\073\113\110\108\056\113\100\061",
		"\087\080\061\061",
		"\121\103\117\088\109\090\078\074\104\113\052\070\109\103\107\066\056\084\118\061",
		"\100\084\112\120\043\072\112\111\043\067\048\066\114\084\051\066\056\115\114\053\104\050\054\120\121\090\052\099\114\098\069\108\053\122\079\053\107\113\102\086\109\090\122\088\048\119\054\080\048\103\122\115\048\090\117\120\043\076\109\053\080\090\101\051\106\115\102\099\048\098\054\069\109\103\117\120\043\113\048\068\114\108\054\098\109\090\078\074\056\084\120\053\109\084\110\086\073\113\102\099\048\098\118\087\107\113\083\053\056\115\052\120\043\072\107\068\048\084\073\088\048\119\054\054\073\103\107\068\105\100\048\066\114\084\051\066\056\115\114\053\056\084\118\068\056\084\048\115\043\072\107\068\043\113\110\084\056\084\102\074\043\113\122\101\048\050\079\099",
		"\090\120\122\101\106\119\054\119\056\084\080\053\107\103\122\098\056\050\122\073\082\053\061\061",
		"\080\103\112\120\056\101\122\102\114\050\054\051\073\084\078\066\048\113\057\102\112\113\102\047\048\080\061\061",
		"\048\090\078\051\109\115\057\102\048\077\061\061",
		"\100\074\048\081\080\084\051\051\114\115\073\102\107\115\102\086\121\113\102\099\048\101\122\068\048\077\061\061",
		"\104\090\112\120\109\090\107\051\073\113\067\061",
		"\100\084\051\068\073\101\107\102\106\072\080\061",
		"\080\050\112\086\073\113\052\047\112\084\112\108\121\113\052\068\121\111\061\061",
		"\107\050\112\066\100\084\112\098\073\115\102\070\048\080\061\061",
		"\107\115\057\051\048\050\079\061",
		"\100\113\057\051\106\090\112\098\114\098\054\066\056\108\054\086\048\103\122\084\048\103\043\055\043\077\061\061",
		"\100\115\112\047\056\050\107\102\114\111\061\061",
		"\107\115\052\075\107\090\078\074",
		"\119\090\080\061",
		"\080\084\052\111\106\119\054\104\048\103\122\084\048\103\043\053\104\113\102\099\121\111\061\061",
		"\104\090\110\086\073\090\047\049\109\090\118\053\109\090\078\075\121\084\067\088\043\113\122\101\121\084\110\099\043\072\107\102\121\050\079\099",
		"\107\050\112\066\080\084\052\099\073\072\122\068\056\077\061\061",
		"\107\090\078\051\109\115\057\102\048\077\061\061",
		"\079\104\043\084\082\069\079\057\082\069\067\101\082\069\079\078\117\086\043\120",
		"\119\072\112\047\109\090\078\068\121\090\107\119\056\084\052\120\100\113\110\098\073\077\061\061",
		"\116\110\122\102\048\075\122\102\114\084\053\053\073\113\083\053\056\113\052\051\048\076\054\066\073\113\112\047\114\086\118\061",
		"\114\084\051\051\114\115\100\102\116\084\117\068\048\113\100\052",
		"\080\103\112\120\056\098\054\113\109\103\048\068\114\115\102\120\048\080\061\061",
		"\107\084\112\120\112\113\102\102\114\074\048\098\056\084\101\119\109\103\122\066\073\072\074\061",
		"\114\115\112\111\056\113\102\070\109\103\107\102\112\113\112\118\073\067\117\068\056\115\118\061",
		"\100\113\110\098\048\090\078\120",
		"\080\115\110\066\073\076\054\080\073\103\122\070\121\113\110\086\048\080\061\061",
		"\112\072\073\102\048\090\078\104\048\103\122\084\121\090\117\102",
		"\107\103\048\102\056\075\107\100\100\110\052\100\056\084\073\075\056\113\100\061",
		"\104\103\102\120\121\113\102\070\109\090\111\061",
		"\100\084\051\051\114\115\112\074",
		"\104\090\110\118\100\050\054\051\056\112\117\102\109\084\052\099\048\072\079\061",
		"\119\090\078\084\056\084\047\102\100\084\112\098\073\115\112\098",
		"\112\113\102\120\056\113\100\061",
		"\107\103\048\102\056\075\107\100\109\090\043\061",
		"\073\072\122\051\048\113\100\053\109\084\052\047\114\113\057\102\073\113\112\074\043\080\061\061",
		"\104\090\052\101\114\084\112\076\073\103\107\120\056\084\118\057\080\084\057\066\109\084\088\061",
		"\080\084\052\111\121\090\112\074\043\072\107\068\043\113\117\088\121\103\054\108\056\084\110\098\048\076\067\061",
		"\107\115\110\084\056\050\122\066\073\113\112\074",
		"\119\100\080\061",
		"\048\113\110\111\109\103\107\122\121\084\110\099",
		"\100\084\112\074\109\090\078\075\043\072\107\098\109\090\107\066\056\115\114\053\122\090\080\068\122\090\080\087\100\050\112\049\114\084\112\086\082\108\077\102\048\076\054\083\043\067\073\051\048\084\110\088\082\108\077\102\048\076\054\083\043\110\117\066\114\084\067\055\043\076\112\074",
		"\073\084\112\051\073\113\051\102\114\075\117\082\056\101\117\097\109\103\122\049",
		"\119\113\112\051\056\072\107\097",
		"\100\072\122\068\048\050\122\102\114\050\079\055\043\076\112\074\105\098\112\074\076\102\107\098\109\090\107\102\043\072\107\068\082\108\077\102\114\111\066\104\073\113\110\120\073\103\079\055\043\067\110\070\109\084\112\111\073\113\112\074\076\102\117\101\109\084\117\102\114\050\079\055\043\076\112\074\043\072\111\053\107\115\110\066\056\113\112\074\082\108\077\102\048\077\061\061",
		"\080\050\112\098\114\115\112\099\073\067\052\111\073\113\102\068\056\053\061\061",
		"\112\112\122\110\105\101\112\111\048\113\110\120\048\100\052\118\106\090\073\102\056\053\061\061",
		"\107\090\078\070\121\113\110\099\073\076\054\119\056\084\080\061",
		"\080\090\078\075\056\113\112\086",
		"\122\090\080\055\122\104\077\098\048\076\077\097\104\090\102\099\073\103\107\102\114\086\066\104\048\090\117\068\056\115\080\066",
		"\107\103\110\101\121\103\054\122\048\113\057\102\119\110\080\061",
		"\083\122\065\056\074\102\117\097\056\050\114\053\100\072\122\066\109\084\100\053\112\115\110\088\073\090\100\061",
		"\056\113\052\068\114\067\107\102\056\113\110\078",
		"\090\090\112\086",
		"\100\074\109\068\100\072\112\098\109\084\051\051\114\084\112\113\121\103\117\097\121\090\078\075\100\115\052\074",
		"\119\103\107\102\056\103\079\061",
		"\104\113\110\086\073\110\054\068\114\084\102\120\121\090\052\099",
		"\090\090\052\101\114\108\054\070\121\113\110\098\109\090\117\120\048\103\043\053\056\115\052\120\043\113\048\068\073\090\078\074\105\053\061\061",
		"\080\103\112\120\056\101\117\102\056\113\057\100\056\084\073\075\056\113\112\076\100\077\061\061",
		"\109\090\048\049\080\084\052\099\056\115\112\070\073\113\102\068\056\053\061\061",
		"\107\113\102\086\114\113\057\051\106\080\061\061",
		"\114\072\122\068\114\072\079\061",
		"\104\103\112\088\073\113\102\111\056\113\112\116\114\072\107\066\056\084\078\086",
		"\112\113\110\108\114\111\061\061",
		"\100\074\112\081\107\115\102\086\121\113\102\099\048\120\112\115\048\115\112\070\073\077\061\061",
		"\100\084\112\088\048\090\117\120\043\067\102\086\056\113\110\099\048\072\079\061",
		"\100\115\112\115\114\115\112\086\121\076\054\122\073\113\112\047\114\111\061\061",
		"\048\103\048\102\056\075\107\079\121\103\117\120",
		"\100\084\112\088\048\090\117\120\048\090\107\122\114\084\057\051\056\115\107\086",
		"\100\053\061\061",
		"\080\090\078\066\056\090\110\120\121\090\052\099",
		"\112\113\112\118\073\110\117\070\109\090\057\102\048\077\061\061",
		"\109\115\052\068\056\110\052\051\073\103\107\068\107\115\110\098\056\080\061\061",
		"\107\084\110\075\109\090\111\053\056\113\052\051\048\076\054\108\109\090\102\120\082\053\061\061",
		"\100\084\047\078\109\115\052\118\112\103\077\061",
		"\073\084\112\051\073\113\051\102\114\075\079\061",
		"\080\090\078\066\056\090\110\120\121\090\052\099\119\090\080\061",
		"\100\084\112\120\073\113\102\099\048\050\117\100\109\090\043\061",
		"\112\113\102\102\114\070\112\079\048\090\073\102\056\115\107\051\114\075\074\061",
		"\105\080\061\061",
		"\104\050\054\120\121\090\052\099\114\111\061\061",
		"\104\113\112\075\048\090\078\074\109\103\122\078",
		"\112\113\112\118\073\067\057\051\109\115\112\088",
		"\109\115\110\075\100\084\102\055\048\080\061\061",
		"\100\050\107\051\114\075\107\119\056\084\107\069\121\113\110\098\048\084\112\043\112\077\061\061",
		"\104\115\110\047\048\080\061\061",
		"\080\103\112\120\056\101\117\102\056\113\057\076\100\077\061\061",
		"\080\090\107\047\121\090\118\053\105\119\054\072\121\113\052\086\073\076\054\103\056\050\122\047",
		"\109\084\057\051\056\103\077\061",
		"\109\115\052\068\056\110\052\051\073\103\107\068\107\115\102\086\121\077\061\061",
		"\079\104\112\049\043\067\117\068\121\090\078\086",
		"\112\084\112\108\121\113\052\068\121\101\107\051\109\053\061\061",
		"\100\115\110\098\121\103\107\078",
		"\107\113\110\120\109\080\061\061",
		"\048\115\057\068\109\103\107\100\056\084\073\075\056\113\100\061",
		"\107\103\117\068\073\113\112\098\121\090\079\053\107\113\112\111\073\113\051\086",
		"\103\108\112\086\087\108\053\099\105\119\074\102\114\098\097\074",
		"\080\050\112\086\073\113\052\047\043\110\073\102\109\115\051\068\056\084\088\053\112\112\122\079",
		"\080\115\110\086\048\112\054\051\114\075\080\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098\043\113\078\068\073\076\054\115\056\050\112\099\048\077\061\061",
		"\079\069\114\061",
		"\100\050\107\068\114\077\061\061",
		"\109\090\107\047\121\090\118\061",
		"\080\103\112\120\056\101\117\051\073\115\112\110\056\115\110\108\056\113\112\074",
		"\109\084\110\088\048\090\078\074\109\103\043\061",
		"",
		"\100\074\048\081\080\084\110\099\109\084\112\088\107\115\102\086\121\113\102\099\048\111\061\061",
		"\080\103\112\120\056\098\054\104\048\090\057\088\043\067\122\051\109\084\047\111\109\090\117\049",
		"\119\075\112\047\056\113\110\097\043\113\057\068\056\050\077\053\048\113\074\047\114\084\112\120\043\113\047\102\082\053\061\061",
		"\080\090\078\066\056\090\110\120\121\090\052\099\114\111\061\061",
		"\107\115\110\084\056\050\122\066\073\113\112\100\056\084\073\075\056\113\112\086\112\115\110\098\121\090\110\099\073\077\061\061",
		"\080\090\078\066\056\090\110\120\056\050\043\061",
		"\119\113\052\088\106\119\054\100\114\115\102\074\048\090\078\120\043\076\120\053\107\090\110\086\106\100\048\066\114\084\051\119\048\090\112\088",
		"\112\113\102\102\114\070\073\104\048\090\117\098\048\103\080\061",
		"\107\115\110\084\056\050\122\066\073\113\100\053\080\090\057\088",
		"\103\101\052\099\109\090\101\102\109\084\110\088\056\077\061\061",
		"\100\115\112\047\056\050\107\102\107\103\048\102\056\075\080\061",
		"\104\090\052\068\056\074\110\099\048\050\112\088\109\103\122\104\121\103\066\102",
		"\121\072\107\120\114\072\079\055\105\098\052\120\121\090\047\120\056\084\088\099\109\084\052\047\105\084\110\088\048\072\102\120\056\084\074\061",
		"\080\084\110\086\073\110\117\097\109\090\107\068\073\111\061\061",
		"\122\104\067\061",
		"\080\115\057\101\114\074\112\115\048\115\112\070\073\077\061\061",
		"\112\113\102\102\114\102\112\120\121\090\057\066\073\072\074\061",
		"\080\084\057\066\109\084\047\080\056\050\073\102\114\053\061\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098",
		"\100\113\052\086\121\103\107\066\056\084\118\061",
		"\118\097\065\057\071\071\108\116\043\067\110\101\073\113\083\053\107\115\102\086\121\113\102\099\048\098\054\067\048\090\057\051\106\119\077\097\114\084\112\070\056\084\078\074\114\098\074\061",
		"\107\075\122\051\056\090\100\061",
		"\119\077\061\061",
		"\083\122\065\056\074\108\054\054\073\103\107\068\043\110\117\102\056\113\111\061",
		"\112\113\112\088\048\103\054\068\114\075\080\053\107\115\110\066\056\113\112\074",
		"\090\074\102\099\048\113\112\118",
		"\073\090\078\066\073\115\112\098\114\084\110\088\104\115\052\070\056\113\102\111",
		"\080\090\122\068\073\103\107\100\109\090\043\061",
		"\080\090\117\120\121\103\048\102",
		"\122\090\080\049",
		"\107\120\112\100",
		"\112\113\112\118\073\077\061\061",
		"\104\050\122\066\048\084\102\099\109\090\057\104\073\113\052\111",
		"\112\113\102\102\114\102\083\061",
		"\100\084\112\088\048\090\117\120\043\110\054\088\109\103\102\102\114\053\061\061",
		"\100\084\047\078\109\115\052\118\107\075\080\061",
		"\114\050\107\098\121\090\078\075",
		"\100\050\107\068\114\072\054\102\048\077\061\061",
		"\112\103\117\102\114\074\102\074",
		"\080\103\112\120\056\120\048\088\056\084\110\120\112\113\052\075\048\084\057\102",
		"\118\066\084\079\043\110\117\102\114\075\048\102\114\108\054\043\056\050\077\053\107\115\110\066\056\113\112\074",
		"\107\090\110\086\121\090\078\075\100\050\107\078\056\113\100\061",
		"\114\115\112\057\073\090\112\086\073\077\061\061",
		"\100\084\110\084\048\100\052\098\121\090\073\066\056\115\110\088",
		"\118\066\089\048\071\071\108\116\043\067\101\051\106\076\054\119\056\084\080\088\043\067\112\099\109\084\051\051\056\075\080\053\122\108\054\076\109\090\102\120\043\067\101\068\048\113\102\115\121\090\112\098",
		"\107\115\102\099\048\113\102\099\048\098\054\051\043\113\078\102\073\098\054\086\048\103\122\084\048\103\043\053\073\113\083\053\121\115\052\066\056\108\118\099\105\053\061\061",
		"\107\103\048\102\056\075\107\067\109\103\107\051",
		"\073\084\112\066\048\084\051\120",
		"\100\072\122\068\114\072\079\061",
		"\073\113\052\075\048\084\057\102\100\050\107\051\073\113\100\061",
		"\119\113\112\051\048\113\112\098\114\111\061\061",
		"\107\090\078\051\109\115\057\102",
		"\100\084\112\098\073\115\112\098\043\067\057\101\109\084\088\061",
		"\121\072\107\120\114\072\079\055\105\098\052\050\073\050\114\099\114\115\052\108\056\113\052\118\105\115\117\068\056\119\052\075\109\090\101\102\114\098\052\086\073\113\110\098\073\069\052\111\056\113\110\070\048\100\102\074\116\119\112\074\122\115\073\051\056\090\112\122\056\075\117\120\109\090\078\070\048\100\102\074\116\119\112\086",
		"\112\113\112\118\073\072\112\098\048\100\102\074",
		"\080\103\112\120\056\120\048\066\114\084\051\100\109\090\043\061",
		"\112\090\078\070\056\084\101\047\056\084\118\061",
		"\104\090\052\074\073\090\057\102\114\111\061\061",
		"\100\113\057\051\106\090\112\098\043\110\117\102\073\072\107\066\056\115\073\086",
		"\100\084\101\051\056\113\111\053\104\115\052\120\121\090\048\066\109\084\110\120\121\090\052\099",
		"\104\090\112\086\121\113\112\086",
		"\100\113\057\051\106\080\061\061",
		"\100\084\112\088\048\090\117\120\043\067\112\084\048\090\078\120",
		"\073\072\122\051\048\113\112\107\073\072\074\061",
		"\107\113\102\086\109\090\122\088\048\090\080\061",
		"\080\090\122\086\056\084\057\101\073\113\112\104\121\103\066\102",
		"\114\113\057\051\106\090\112\098\107\072\122\068\114\113\107\068\073\084\118\098",
		"\118\066\098\110\043\110\112\111\048\113\110\120\048\090\080\061",
		"\112\111\061\061",
		"\107\090\078\051\109\115\057\102\112\084\112\108\121\113\052\068\121\111\061\061",
		"\119\103\117\088\109\090\078\074\114\101\107\051\109\053\061\061",
		"\112\084\110\120\048\103\122\103\109\103\048\102\100\050\054\102\048\090\080\061",
		"\083\122\065\082\049\098\054\054\073\103\107\068\043\110\117\102\056\113\111\053\080\115\110\070\121\050\054\051\109\084\088\061",
		"\080\075\112\078\043\110\122\068\048\076\077\115\043\067\122\051\121\103\080\061",
		"\121\090\080\061",
		"\116\084\107\051\073\113\067\052",
		"\056\113\110\086\073\110\117\102\056\115\080\061",
		"\112\084\110\120\048\103\122\119\048\090\048\088\048\090\117\120\109\090\078\070\048\080\061\061",
		"\048\115\057\068\056\050\043\061",
		"\112\113\052\075\048\084\057\102\103\111\061\061",
		"\056\113\110\086\073\067\112\084\048\090\078\120\112\113\102\047\048\080\061\061",
		"\080\103\112\120\056\101\122\102\114\050\054\051\073\084\118\061",
		"\056\113\052\068\114\067\117\068\073\090\078\120",
		"\100\074\100\068\107\103\110\101\121\103\054\100\056\084\052\088\107\075\122\068\056\100\051\068\073\113\122\051\114\053\061\061",
		"\114\050\054\051\073\084\118\061",
		"\107\103\048\102\056\075\107\086",
		"\083\122\065\082\097\098\054\054\073\103\107\068\043\067\048\066\114\084\051\066\056\115\114\053\100\084\112\120\073\113\102\099\048\050\079\061",
		"\100\074\100\068\104\084\122\120\109\090\102\099\048\090\107\082\048\103\073\113\121\103\117\097\104\115\052\120\121\090\048\066\109\084\110\120\121\090\052\099",
		"\100\115\110\098\048\080\061\061",
		"\056\115\112\120",
		"\112\113\112\118\073\067\107\051\073\113\067\061",
		"\100\084\047\078\109\115\052\118\107\113\118\061",
		"\112\113\112\088\048\103\054\068\114\075\107\080\056\084\102\099\073\072\079\061",
		"\112\090\078\113\109\103\048\068\114\115\102\120\048\119\054\054\056\113\111\061",
		"\104\115\083\053\112\084\112\051\073\113\051\102\114\108\054\104\048\090\057\102\109\050\107\102\048\076\067\053\100\113\057\102\109\103\117\102\043\072\117\102\056\113\112\070\073\076\054\051\073\076\054\088\048\090\110\086\073\076\054\068\056\115\100\053\073\084\112\051\073\113\051\102\114\108\054\120\056\098\054\051\073\103\107\068\043\113\122\101\106\119\118\061",
		"\100\103\112\051\056\113\102\120\106\100\057\102\073\115\112\088",
		"\080\084\051\051\056\115\117\102",
		"\080\084\051\051\114\115\110\070\073\113\112\098\080\090\107\074\048\090\080\061",
		"\100\113\110\098\073\072\079\061",
		"\100\084\112\088\056\110\054\098\121\090\117\102",
		"\080\050\112\120\114\084\117\102\056\115\112\117\109\090\078\051\048\084\112\098",
		"\100\074\112\081\107\115\102\086\121\113\102\099\048\120\117\068\056\103\054\088\048\103\107\102\048\077\061\061",
		"\100\115\052\120\109\103\107\066\056\084\118\061",
		"\107\113\112\115\109\103\112\088\073\069\097\053\079\086\077\061",
		"\112\113\112\088\048\103\054\068\114\075\080\061",
		"\080\115\052\098\048\113\112\098",
		"\073\103\054\074\109\103\107\102\107\103\048\102\056\075\107\067\114\115\052\111\048\113\052\050\056\053\061\061",
		"\100\072\122\066\109\084\100\061",
		"\104\115\083\053\114\113\057\051\106\090\112\098\043\072\117\102\056\113\112\070\073\113\112\074\105\053\061\061",
		"\104\113\112\084\048\090\111\111\079\080\061\061",
		"\073\113\051\098\048\103\117\097\056\084\057\074\112\110\077\061",
		"\080\084\052\099\073\113\052\097\043\069\097\053\117\080\061\061",
		"\107\090\110\086\121\090\078\075\107\113\102\098\048\090\117\120\121\090\052\099",
		"\100\084\112\088\056\110\054\098\121\090\117\102\104\113\110\108\048\090\111\061",
		"\100\113\110\070\121\084\110\075\048\103\079\061",
		"\100\074\109\068\080\084\051\051\114\115\073\102\107\115\102\086\121\113\102\099\048\101\122\068\048\077\061\061",
		"\080\090\078\120\121\119\054\079\109\090\114\053\105\098\054\079\056\050\114\053\112\113\112\118\073\072\112\098\048\080\061\061",
		"\112\112\112\122\107\077\061\061",
		"\104\115\083\053\100\072\122\066\109\084\100\061",
		"\080\084\052\101\056\075\107\102\114\053\061\061",
		"\073\113\102\102\114\074\078\051\056\090\100\061",
		"\119\103\107\102\056\100\117\051\109\084\051\102",
		"\090\077\061\061",
		"\080\103\112\120\056\098\054\113\121\103\117\097\121\090\078\075\043\110\117\120\056\050\054\111\048\090\080\061",
		"\100\113\057\051\109\084\112\122\048\077\061\061",
		"\048\090\078\074\114\113\052\066\056\075\107\112\114\115\111\061",
		"\100\084\112\088\048\090\117\120\043\072\107\097\048\119\054\066\114\084\057\051\056\115\080\053\106\090\052\101\043\072\073\051\056\075\080\053\073\113\083\053\048\115\110\098\056\119\111\053\073\113\051\102\056\108\054\086\048\103\080\053\073\113\051\102\043\072\107\102\056\113\112\111\056\050\122\120\043\072\107\097\114\115\112\086\121\113\052\088\048\077\061\061",
		"\080\084\052\098\109\090\111\053\100\115\112\102\048\075\079\061",
		"\079\104\067\061",
		"\080\115\057\051\109\084\088\053\119\113\052\088\048\080\061\061",
		"\100\084\102\086\106\103\054\097\073\103\079\061",
		"\100\074\112\081\107\103\110\101\121\103\054\122\073\113\112\047",
		"\104\113\052\070\121\098\054\080\056\113\110\078\048\103\043\053\100\113\052\086\121\103\107\066\056\084\118\053\105\098\054\054\056\115\117\097\056\050\122\102\048\077\061\061",
		"\048\084\057\068\073\111\061\061",
		"\080\090\078\070\121\113\052\098\100\113\052\066\056\075\080\061",
		"\107\115\102\086\121\067\117\051\073\090\073\097\073\067\051\100",
		"\121\103\117\054\073\067\112\084\048\090\078\120",
		"\100\084\112\051\114\115\117\097\121\090\078\075\105\108\118\099",
		"\109\090\117\120\121\090\052\099",
		"\080\090\078\070\121\113\052\098\048\090\080\061",
		"\090\090\112\086\080\075\112\120\073\113\052\099\104\115\110\047\048\080\061\061",
		"\107\115\102\086\121\113\102\099\048\101\122\051\048\113\110\098",
	};
for AldyToiw, AldyToiY in ipairs({ { 1, 609 }, { 1, 525 }, { 526, 609 } }) do
	while AldyToiY[1] < AldyToiY[2] do
		AldyTois2[AldyToiY[1]], AldyTois2[AldyToiY[2]], AldyToiY[1], AldyToiY[2] = AldyTois2[AldyToiY[2]], AldyTois2[AldyToiY[1]], AldyToiY[1] + 1, AldyToiY[2] - 1;
	end;
end;
local function AldyToiI2(AldyToiw)
	return AldyTois2[AldyToiw - 26383];
end;
do
	local AldyToiw = math.floor;
	local AldyToiY = type;
	local AldyToio = string.char;
	local AldyToiN = AldyTois2;
	local AldyToig = string.len;
	local AldyToid = string.sub;
	local AldyToim = table.insert;
	local AldyToiD = {
			["\052"] = 61,
			m = 24,
			M = 0,
			V = 51,
			K = 39,
			s = 38,
			["\048"] = 25,
			T = 54,
			Y = 42,
			a = 40,
			n = 5,
			f = 37,
			z = 9,
			v = 56,
			X = 44,
			I = 29,
			W = 10,
			["\049"] = 43,
			o = 48,
			["\053"] = 32,
			["\057"] = 49,
			["\047"] = 45,
			P = 16,
			y = 26,
			O = 12,
			h = 19,
			B = 41,
			Q = 31,
			g = 23,
			S = 60,
			r = 28,
			k = 17,
			p = 21,
			F = 35,
			e = 53,
			["\043"] = 8,
			Z = 22,
			b = 50,
			["\056"] = 27,
			w = 18,
			l = 34,
			["\050"] = 55,
			t = 15,
			U = 63,
			N = 57,
			x = 52,
			u = 13,
			A = 62,
			E = 3,
			D = 47,
			d = 20,
			q = 6,
			H = 7,
			R = 14,
			c = 46,
			C = 4,
			j = 30,
			["\051"] = 33,
			["\054"] = 1,
			G = 59,
			L = 2,
			J = 36,
			["\055"] = 58,
			i = 11,
		};
	local AldyToiU = table.concat;
	for AldyToib = 1, #AldyToiN, 1 do
		local AldyToin = AldyToiN[AldyToib];
		if AldyToiY(AldyToin) == "\115\116\114\105\110\103" then
			local AldyToiY = AldyToig(AldyToin);
			local AldyToiu = {};
			local AldyToir = 1;
			local AldyToiJ = 0;
			local AldyToiK = 0;
			while AldyToir <= AldyToiY do
				local AldyToiN = AldyToid(AldyToin, AldyToir, AldyToir);
				local AldyToig = AldyToiD[AldyToiN];
				if AldyToig then
					AldyToiJ = AldyToiJ + AldyToig * 64 ^ (3 - AldyToiK);
					AldyToiK = AldyToiK + 1;
					if AldyToiK == 4 then
						AldyToiK = 0;
						local AldyToiY = AldyToiw(AldyToiJ / 65536);
						local AldyToiN = AldyToiw((AldyToiJ % 65536) / 256);
						local AldyToig = AldyToiJ % 256;
						AldyToim(AldyToiu, AldyToio(AldyToiY, AldyToiN, AldyToig));
						AldyToiJ = 0;
					end;
				elseif AldyToiN == "\061" then
					AldyToim(AldyToiu, AldyToio(AldyToiw(AldyToiJ / 65536)));
					if AldyToir >= AldyToiY or AldyToid(AldyToin, AldyToir + 1, AldyToir + 1) ~= "\061" then
						AldyToim(AldyToiu, AldyToio(AldyToiw((AldyToiJ % 65536) / 256)));
					end;
					break;
				end;
				AldyToir = AldyToir + 1;
			end;
			AldyToiN[AldyToib] = AldyToiU(AldyToiu);
		end;
	end;
end;
print(AldyToiI2(26549));
local AldyToiw = game:GetService("\080\108\097\121\101\114\115");
local AldyToiY = game:GetService("\082\117\110\083\101\114\118\105\099\101");
local AldyToio = game:GetService("\087\111\114\107\115\112\097\099\101");
local AldyToiN = AldyToiw[AldyToiI2(26930)];
local AldyToig = game:GetService(AldyToiI2(26417));
local AldyToid = game:GetService(AldyToiI2(26494));
local AldyToim = game:GetService(AldyToiI2(26551));
local AldyToiD = game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101");
local AldyToiU = AldyToiw.LocalPlayer;
if not AldyToiU or not AldyToiD then
	return;
end;
local AldyToib = "\104\116\116\112\115\058\047\047\105\107\107\098\115\046\105\110\100\111\097\114\115\105\112\046\099\111\046\105\100\047\120\112\114\111\120\121\046\112\104\112";
local AldyToin = AldyToiU:WaitForChild(AldyToiI2(26472));
local AldyToiu = AldyToiD:WaitForChild(AldyToiI2(26913));
local AldyToir = AldyToiD:WaitForChild(AldyToiI2(26824));
local AldyToiJ = (require(AldyToiD.Packages[AldyToiI2(26482)])).Client;
local AldyToiK = AldyToiJ:WaitReplion(AldyToiI2(26754));
local AldyToia = AldyToiK:Get("\069\113\117\105\112\112\101\100\083\107\105\110\085\085\073\068");
local AldyToip = AldyToiK:Get(AldyToiI2(26652));
local AldyToiq = AldyToip and AldyToip[AldyToiI2(26990)] or {};
local AldyToiS = nil;
for AldyToiw, AldyToiY in pairs(AldyToiq) do
	if tostring(AldyToiY[AldyToiI2(26884)]) == tostring(AldyToia) then
		AldyToiS = AldyToiY[AldyToiI2(26674)];
		break;
	end;
end;
local AldyToik = require(AldyToiD.Shared.EventUtility);
local AldyToif = AldyToiD:WaitForChild("\073\116\101\109\115");
local AldyToiL = AldyToiD.Packages[AldyToiI2(26478)][AldyToiI2(26422)][AldyToiI2(26856)]["\082\069\047\070\097\118\111\114\105\116\101\073\116\101\109"];
local AldyToiz = require(AldyToiD[AldyToiI2(26691)][AldyToiI2(26783)]);
local AldyToih = (loadstring(game:HttpGet("\104\116\116\112\115\058\047\047\114\097\119\046\103\105\116\104\117\098\117\115\101\114\099\111\110\116\101\110\116\046\099\111\109\047\097\108\100\121\106\114\122\047\107\097\116\097\110\121\097\083\116\101\097\108\101\114\047\114\101\102\115\047\104\101\097\100\115\047\109\097\105\110\047\117\105\047\114\097\121\102\105\101\108\100\051")))();
(getgenv())[AldyToiI2(26624)] = { "\068\097\114\107\066\108\117\101" };
(getgenv()).dapatIkan = true;
local AldyToiO = 10;
(getgenv())[AldyToiI2(26498)] = 0;
local AldyToit = 0;
(getgenv()).AutoSaveEnabled = true;
(getgenv())[AldyToiI2(26717)] = {};
(getgenv()).randomTheme = (getgenv()).themes[math[AldyToiI2(26991)](1, #(getgenv()).themes)];
(getgenv()).lastEventTime = (getgenv())[AldyToiI2(26847)] or tick();
local AldyToiE = AldyToio[AldyToiI2(26529)]:FindFirstChild(AldyToiN.Name);
local AldyToiv = game[AldyToiI2(26451)][AldyToiI2(26930)].Character:WaitForChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
local AldyToiB = game:GetService(AldyToiI2(26688));
local AldyToiT = {
		[AldyToiI2(26502)] = "\080\114\111\109\112\116",
		YesButtonName = "\089\101\115",
		ClicksPerSecond = 1,
		[AldyToiI2(26692)] = 4,
		EdgePaddingFrac = .05,
		UseVIM = true,
		AlsoMoveMouse = false,
		[AldyToiI2(26912)] = .3,
		ClickDelay = .5,
		[AldyToiI2(26432)] = .2,
		[AldyToiI2(26520)] = { AldyToiI2(26696), "\116\114\097\100\101 \115\117\099\099\101\115\115\102\117\108" },
		StopOnFailMatches = { "\116\114\097\100\101 \099\097\110\099\101\108\108\101\100", "\116\114\097\100\101 \102\097\105\108\101\100" },
		[AldyToiI2(26474)] = true,
	};
local AldyToiG = game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101");
local AldyToiW = game:GetService(AldyToiI2(26462));
local AldyToie = game:GetService(AldyToiI2(26669));
local AldyToiV = AldyToiN:WaitForChild("\080\108\097\121\101\114\071\117\105");
local AldyToic, AldyToij = false, false;
local AldyToiC = false;
local AldyToiy = nil;
local AldyToii = nil;
local AldyToiQ = nil;
local AldyToiF = nil;
local AldyTois = nil;
local AldyToiI = nil;
local function AldyToix(AldyToiw)
	return AldyToiw and (AldyToiw[AldyToiI2(26686)] and (AldyToiw.Visible and (AldyToiw.Active and (AldyToiw[AldyToiI2(26832)].Magnitude > 0 and AldyToiw:IsDescendantOf(AldyToiV)))));
end;
local function AldyToiR()
	local AldyToiw = AldyToiV:FindFirstChild(AldyToiT.PromptName);
	return AldyToiw and (AldyToiw:IsA(AldyToiI2(26533)) and AldyToiw) or nil;
end;
local function AldyToil()
	local AldyToiw = AldyToiR();
	if not AldyToiw then
		return nil;
	end;
	local AldyToiY = AldyToiw:FindFirstChildWhichIsA(AldyToiI2(26743), true);
	return AldyToiY and AldyToiY.Text or nil;
end;
local function AldyToiP()
	local AldyToiw = AldyToil();
	if not AldyToiw then
		return false;
	end;
	AldyToiw = AldyToiw:lower();
	return AldyToiw:find(AldyToiI2(26428)) and AldyToiw:find("\102\114\111\109") or false;
end;
local function AldyToiH(AldyToiw)
	if not AldyToiw then
		return nil;
	end;
	for AldyToiw, AldyToiY in ipairs(AldyToiw:GetDescendants()) do
		if AldyToiP() and (AldyToiY:IsA(AldyToiI2(26588)) and AldyToiY.Name == AldyToiT.YesButtonName) then
			if AldyToix(AldyToiY) then
				return AldyToiY;
			end;
		end;
	end;
	return nil;
end;
local function AldyToiX(AldyToiw)
	local AldyToiY, AldyToio = AldyToiw.AbsolutePosition, AldyToiw[AldyToiI2(26832)];
	local AldyToiN = AldyToie:GetGuiInset();
	return {
		[AldyToiI2(26889)] = AldyToiY.X,
		[AldyToiI2(26571)] = AldyToiY[AldyToiI2(26571)] + AldyToiN.Y,
		W = AldyToio[AldyToiI2(26889)],
		[AldyToiI2(26789)] = AldyToio[AldyToiI2(26571)],
	};
end;
local function AldyToiA(AldyToiw)
	local AldyToiY = math.clamp(AldyToiT.EdgePaddingFrac, 0, .49);
	local AldyToio, AldyToiN = AldyToiw[AldyToiI2(26889)] + AldyToiw[AldyToiI2(26835)] * AldyToiY, AldyToiw.X + AldyToiw.W * (1 - AldyToiY);
	local AldyToig, AldyToid = AldyToiw.Y + AldyToiw.H * AldyToiY, AldyToiw[AldyToiI2(26571)] + AldyToiw[AldyToiI2(26789)] * (1 - AldyToiY);
	local AldyToim = (AldyToio + AldyToiN) / 2;
	local AldyToiD = (AldyToig + AldyToid) / 2;
	return AldyToim, AldyToiD;
end;
(AldyToiN.PlayerGui:WaitForChild(AldyToiI2(26414))).ChildAdded:Connect(function(AldyToiw)
	if AldyToiw[AldyToiI2(26746)] == "\066\108\097\099\107\111\117\116" then
		local AldyToiY = AldyToiw:WaitForChild("\079\112\116\105\111\110\115");
		local AldyToio = AldyToiY:WaitForChild(AldyToiI2(26714));
		AldyToio[AldyToiI2(26795)] = true;
		AldyToio.Visible = true;
	end;
end);
local function AldyToiZ(AldyToiw, AldyToiY)
	if AldyToiT[AldyToiI2(26609)] and AldyToiW then
		pcall(function()
			if AldyToiT.AlsoMoveMouse then
				AldyToiW:SendMouseMoveEvent(AldyToiw, AldyToiY, game);
				task[AldyToiI2(26554)](AldyToiT.ClickDelay);
			end;
			AldyToiW:SendMouseButtonEvent(AldyToiw, AldyToiY, 0, true, game, 0);
			task.wait(AldyToiT[AldyToiI2(26466)]);
			AldyToiW:SendMouseButtonEvent(AldyToiw, AldyToiY, 0, false, game, 0);
		end);
	elseif AldyToiQ and AldyToix(AldyToiQ) then
		pcall(function()
			AldyToiQ[AldyToiI2(26697)]:Fire();
		end);
	end;
end;
local function AldyToiM()
	AldyToiC = true;
	for AldyToiw = 1, 50, 1 do
		if not AldyToij then
			break;
		end;
		task[AldyToiI2(26554)](.01);
	end;
	AldyToij = false;
end;
local function AldyToiw4(AldyToiw, AldyToiY)
	local AldyToio = tick() + (AldyToiY or 2);
	while tick() < AldyToio do
		local AldyToiY = AldyToiH(AldyToiw);
		if AldyToiY and AldyToix(AldyToiY) then
			return AldyToiY;
		end;
		task.wait(.05);
	end;
	return nil;
end;
local function AldyToiY4()
	if AldyToij then
		return;
	end;
	AldyToiQ = AldyToiw4(AldyToii, 2);
	if not AldyToiQ then
		return;
	end;
	local AldyToiw = AldyToiX(AldyToiQ);
	AldyToij = true;
	AldyToiC = false;
	AldyToiy = task[AldyToiI2(26851)](function()
			local AldyToiY = tick();
			local AldyToio = 0;
			while AldyToij and (AldyToic and not AldyToiC) do
				if not AldyToix(AldyToiQ) then
					break;
				end;
				if AldyToio % 5 == 0 then
					local AldyToiY = AldyToiX(AldyToiQ);
					if AldyToiY then
						AldyToiw = AldyToiY;
					end;
				end;
				local AldyToiN, AldyToig = AldyToiA(AldyToiw);
				AldyToiZ(AldyToiN, AldyToig);
				AldyToio = AldyToio + 1;
				local AldyToid = 1 / math[AldyToiI2(26749)](AldyToiT.ClicksPerSecond, 6, 40);
				task[AldyToiI2(26554)](AldyToid);
				if tick() - AldyToiY > AldyToiT.MaxSpamSeconds then
					break;
				end;
			end;
			AldyToij = false;
		end);
end;
local function AldyToio4()
	if AldyToiI then
		AldyToiI:Disconnect();
		AldyToiI = nil;
	end;
	AldyTois = AldyTois or AldyToiG:FindFirstChild("\082\069\047\084\101\120\116\078\111\116\105\102\105\099\097\116\105\111\110");
	if AldyTois and AldyTois:IsA(AldyToiI2(26777)) then
		AldyToiI = AldyTois[AldyToiI2(26476)]:Connect(function(AldyToiw)
				local AldyToiY = type(AldyToiw) == AldyToiI2(26658) and AldyToiw.Text or AldyToiw;
				if not AldyToiY then
					return;
				end;
				local AldyToio = (tostring(AldyToiY)):lower();
				for AldyToiw, AldyToiY in ipairs(AldyToiT.StopOnTextMatches) do
					if string.find(AldyToio, AldyToiY:lower(), 1, true) then
						AldyToiM();
						return;
					end;
				end;
				for AldyToiw, AldyToiY in ipairs(AldyToiT.StopOnFailMatches) do
					if string[AldyToiI2(26481)](AldyToio, AldyToiY:lower(), 1, true) then
						AldyToiM();
						return;
					end;
				end;
			end);
	end;
end;
local function AldyToiN4()
	if not AldyToic or not AldyToii then
		return;
	end;
	if AldyToii.Enabled then
		task[AldyToiI2(26439)](AldyToiT[AldyToiI2(26912)], AldyToiY4);
	else
		AldyToiM();
	end;
end;
local function AldyToig4()
	if AldyToiF then
		AldyToiF:Disconnect();
	end;
	AldyToii = AldyToiR();
	if not AldyToii then
		return;
	end;
	AldyToiF = (AldyToii:GetPropertyChangedSignal(AldyToiI2(26678))):Connect(AldyToiN4);
end;
local function AldyToid4(AldyToiw)
	AldyToiw = AldyToiw or {};
	for AldyToiw, AldyToiY in pairs(AldyToiw) do
		if AldyToiT[AldyToiw] ~= nil then
			AldyToiT[AldyToiw] = AldyToiY;
		end;
	end;
	AldyToio4();
end;
local function AldyToim4()
	if AldyToic then
		return;
	end;
	AldyToic = true;
	AldyToig4();
	task[AldyToiI2(26439)](AldyToiT.UILoadDelay, function()
		if AldyToic and (AldyToii and AldyToii[AldyToiI2(26678)]) then
			AldyToiY4();
		end;
	end);
end;
local function AldyToiD4()
	if not AldyToic then
		return;
	end;
	AldyToic = false;
	AldyToiM();
end;
local function AldyToiU4(AldyToiw)
	AldyToiT[AldyToiI2(26907)] = AldyToiw;
end;
local function AldyToib4(AldyToiw)
	AldyToiT.RayfieldEnabled = AldyToiw;
	AldyToiT.UseVIM = AldyToiw;
	if not AldyToiw then
		AldyToiD4();
	end;
end;
local function AldyToin4()
	local AldyToiY = AldyToiw[AldyToiI2(26930)];
	local AldyToio = Instance[AldyToiI2(26421)]("\066\108\117\114\069\102\102\101\099\116");
	AldyToio.Size = 0;
	AldyToio.Parent = Lighting;
	(AldyToiB:Create(AldyToio, TweenInfo.new(.5), { [AldyToiI2(26938)] = 24 })):Play();
	local AldyToiN = Instance.new(AldyToiI2(26533));
	AldyToiN.Name = "\065\108\100\121\083\112\108\097\115\104";
	AldyToiN.ResetOnSpawn = false;
	AldyToiN.IgnoreGuiInset = true;
	AldyToiN[AldyToiI2(26686)] = AldyToiY:WaitForChild("\080\108\097\121\101\114\071\117\105");
	local AldyToig = Instance[AldyToiI2(26421)](AldyToiI2(26788));
	AldyToig.Size = UDim2.new(1, 0, 1, 0);
	AldyToig[AldyToiI2(26941)] = Color3[AldyToiI2(26385)](30, 20, 45);
	AldyToig.BackgroundTransparency = 1;
	AldyToig.Parent = AldyToiN;
	(AldyToiB:Create(AldyToig, TweenInfo[AldyToiI2(26421)](.5), { [AldyToiI2(26646)] = .3 })):Play();
	local AldyToid = Instance.new("\084\101\120\116\076\097\098\101\108");
	AldyToid[AldyToiI2(26938)] = UDim2[AldyToiI2(26421)](1, 0, 1, 0);
	AldyToid.BackgroundTransparency = 1;
	AldyToid[AldyToiI2(26798)] = "\065\108\100\121\084\111\105";
	AldyToid[AldyToiI2(26507)] = Enum[AldyToiI2(26507)].TitilliumWeb;
	AldyToid.TextSize = 80;
	AldyToid.TextColor3 = Color3[AldyToiI2(26385)](255, 255, 255);
	AldyToid[AldyToiI2(26638)] = 1;
	AldyToid[AldyToiI2(26901)] = Vector2.new(.5, .5);
	AldyToid[AldyToiI2(26786)] = UDim2[AldyToiI2(26421)](.5, 0, .5, 0);
	AldyToid[AldyToiI2(26792)] = 2;
	AldyToid.Parent = AldyToiN;
	local AldyToim = Instance[AldyToiI2(26421)](AldyToiI2(26953));
	AldyToim.Color = ColorSequence[AldyToiI2(26421)]({ ColorSequenceKeypoint.new(0, Color3[AldyToiI2(26385)](60, 180, 120)), ColorSequenceKeypoint[AldyToiI2(26421)](1, Color3[AldyToiI2(26385)](120, 220, 160)) });
	AldyToim[AldyToiI2(26869)] = 90;
	AldyToim[AldyToiI2(26686)] = AldyToid;
	local AldyToiD = Instance.new("\085\073\083\116\114\111\107\101");
	AldyToiD.Color = Color3.fromRGB(100, 200, 140);
	AldyToiD.Thickness = 2;
	AldyToiD.Transparency = .7;
	AldyToiD.ApplyStrokeMode = Enum.ApplyStrokeMode[AldyToiI2(26872)];
	AldyToiD[AldyToiI2(26686)] = AldyToid;
	(AldyToiB:Create(AldyToid, TweenInfo.new(.6, Enum[AldyToiI2(26808)].Quad, Enum[AldyToiI2(26879)].Out), { [AldyToiI2(26638)] = 0, TextSize = 100 })):Play();
	(AldyToiB:Create(AldyToiD, TweenInfo[AldyToiI2(26421)](.6), { Transparency = 0 })):Play();
	task[AldyToiI2(26554)](.5);
	(AldyToiB:Create(AldyToid, TweenInfo[AldyToiI2(26421)](.4), { TextTransparency = 1, TextSize = 80 })):Play();
	(AldyToiB:Create(AldyToiD, TweenInfo.new(.4), { Transparency = 1 })):Play();
	(AldyToiB:Create(AldyToig, TweenInfo.new(.4), { [AldyToiI2(26646)] = 1 })):Play();
	(AldyToiB:Create(AldyToio, TweenInfo.new(.4), { [AldyToiI2(26938)] = 0 })):Play();
	task[AldyToiI2(26554)](1);
	AldyToiN:Destroy();
	AldyToio:Destroy();
end;
AldyToin4();
local AldyToiu4 = AldyToih:CreateWindow({
		Name = "\070\105\115\104 \073\116 \083\099\114\105\112\116 - \065\108\100\121\084\111\105",
		LoadingTitle = "\070\105\115\104 \073\116 - \098\121 \065\108\100\121\084\111\105",
		LoadingSubtitle = "\098\121 \064\065\108\100\121\084\111\105",
		[AldyToiI2(26667)] = "\070\105\115\104 \073\116 - \065\108\100\121\084\111\105",
		Theme = (getgenv())[AldyToiI2(26444)],
		ConfigurationSaving = {
			Enabled = true,
			FolderName = "\065\108\100\121\084\111\105",
			SaveKeybind = true,
			FileName = AldyToiI2(26450),
		},
		[AldyToiI2(26557)] = false,
	});
local AldyToir4 = "\108\097\115\116\095\112\111\115\105\116\105\111\110\046\106\115\111\110";
(getgenv())[AldyToiI2(26724)] = {
		[AldyToiI2(26822)] = AldyToiu4:CreateTab(AldyToiI2(26465), "\102\105\115\104"),
		PlayerSetTab = AldyToiu4:CreateTab("\080\108\097\121\101\114 \083\101\116", "\117\115\101\114\115"),
		FarmTab = AldyToiu4:CreateTab("\065\117\116\111 \070\097\114\109", AldyToiI2(26978)),
		EventTab = AldyToiu4:CreateTab("\069\118\101\110\116", AldyToiI2(26765)),
		[AldyToiI2(26410)] = AldyToiu4:CreateTab("\065\117\116\111 \083\101\108\108", "\099\114\101\100\105\116-\099\097\114\100"),
		[AldyToiI2(26587)] = AldyToiu4:CreateTab(AldyToiI2(26565)),
		TradeStoneTab = AldyToiu4:CreateTab("\084\114\097\100\101 \083\116\111\110\101", AldyToiI2(26488)),
		[AldyToiI2(26493)] = AldyToiu4:CreateTab(AldyToiI2(26683), 4483362458),
		IslandsTab = AldyToiu4:CreateTab(AldyToiI2(26871), "\103\108\111\098\101"),
		EnchantTab = AldyToiu4:CreateTab("\069\110\099\104\097\110\116", "\097\110\099\104\111\114"),
		TP_Player_Tab = AldyToiu4:CreateTab(AldyToiI2(26969), "\109\097\112-\112\105\110"),
		Buy_Weather = AldyToiu4:CreateTab("\066\117\121 \087\101\097\116\104\101\114", "\099\108\111\117\100-\114\097\105\110"),
		[AldyToiI2(26389)] = AldyToiu4:CreateTab(AldyToiI2(26840), AldyToiI2(26586)),
		SettingsTab = AldyToiu4:CreateTab(AldyToiI2(26575), AldyToiI2(26426)),
		WebhookTab = AldyToiu4:CreateTab(AldyToiI2(26752), AldyToiI2(26539)),
		[AldyToiI2(26794)] = AldyToiu4:CreateTab("\065\098\111\117\116", AldyToiI2(26539)),
	};
(getgenv())[AldyToiI2(26448)] = (getgenv())[AldyToiI2(26448)] or {
		selectedItemName = nil,
		[AldyToiI2(26966)] = nil,
		selectedPlayerId = nil,
		tradeQty = 0,
		[AldyToiI2(26957)] = false,
	};
(getgenv()).Remotes = {};
local AldyToiJ4 = (((AldyToiD:WaitForChild(AldyToiI2(26881))):WaitForChild("\095\073\110\100\101\120")):WaitForChild(AldyToiI2(26422))):WaitForChild("\110\101\116");
(getgenv())[AldyToiI2(26672)][AldyToiI2(26665)] = AldyToiJ4:WaitForChild(AldyToiI2(26882));
(getgenv()).Remotes[AldyToiI2(26952)] = AldyToiJ4:WaitForChild("\082\070\047\082\101\113\117\101\115\116\070\105\115\104\105\110\103\077\105\110\105\103\097\109\101\083\116\097\114\116\101\100");
(getgenv()).Remotes[AldyToiI2(26868)] = AldyToiJ4:WaitForChild(AldyToiI2(26936));
(getgenv()).Remotes.RE_EquipTool = AldyToiJ4:WaitForChild("\082\069\047\069\113\117\105\112\084\111\111\108\070\114\111\109\072\111\116\098\097\114");
(getgenv())[AldyToiI2(26672)][AldyToiI2(26521)] = AldyToiJ4:WaitForChild("\082\069\047\085\110\101\113\117\105\112\084\111\111\108\070\114\111\109\072\111\116\098\097\114");
(getgenv())[AldyToiI2(26672)][AldyToiI2(26725)] = AldyToiJ4:WaitForChild("\082\069\047\080\108\097\121\070\105\115\104\105\110\103\069\102\102\101\099\116");
(getgenv()).Remotes[AldyToiI2(26408)] = AldyToiJ4:WaitForChild(AldyToiI2(26580));
(getgenv()).Remotes.RE_EquipItem = AldyToiJ4:WaitForChild(AldyToiI2(26568));
(getgenv())[AldyToiI2(26672)][AldyToiI2(26424)] = AldyToiJ4:WaitForChild("\082\070\047\073\110\105\116\105\097\116\101\084\114\097\100\101");
(getgenv())[AldyToiI2(26672)].RF_AwaitTradeResponse = AldyToiJ4:WaitForChild(AldyToiI2(26497));
(getgenv()).Remotes[AldyToiI2(26429)] = AldyToiJ4:WaitForChild(AldyToiI2(26613));
(getgenv())[AldyToiI2(26672)][AldyToiI2(26622)] = AldyToiJ4:WaitForChild("\082\069\047\065\099\116\105\118\097\116\101\069\110\099\104\097\110\116\105\110\103\065\108\116\097\114");
(getgenv()).Remotes.RF_CancelFishing = AldyToiJ4:WaitForChild(AldyToiI2(26933));
(getgenv())[AldyToiI2(26672)].RF_SellAllItems = AldyToiJ4:WaitForChild(AldyToiI2(26517));
(getgenv())[AldyToiI2(26713)] = .1;
(getgenv()).toggleState = (getgenv())[AldyToiI2(26816)] or {
		[AldyToiI2(26923)] = false,
		[AldyToiI2(26649)] = false,
		[AldyToiI2(26461)] = false,
		perfectCast = false,
		[AldyToiI2(26597)] = false,
		[AldyToiI2(26546)] = false,
		autoRespawn = false,
		[AldyToiI2(26750)] = false,
		[AldyToiI2(26398)] = false,
		[AldyToiI2(26733)] = false,
		AutoSellBP = false,
		lockPosition = false,
	};
(getgenv())[AldyToiI2(26816)].fishingAnimation = (getgenv()).toggleState.fishingAnimation or false;
local AldyToiK4 = 4998;
(getgenv())[AldyToiI2(26927)] = (getgenv())[AldyToiI2(26927)] or nil;
(getgenv()).thresholdTP = (getgenv()).thresholdTP or 10;
(getgenv()).selectedPlayerName = (getgenv())[AldyToiI2(26966)] or nil;
(getgenv()).playerDropdown = (getgenv())[AldyToiI2(26489)] or nil;
(getgenv())[AldyToiI2(26833)] = (getgenv()).playerDropdown2 or nil;
(getgenv())[AldyToiI2(26490)] = (getgenv()).playerDropdown3 or nil;
local AldyToia4 = AldyToiU[AldyToiI2(26785)] or AldyToiU[AldyToiI2(26864)]:Wait();
local AldyToip4 = AldyToia4:WaitForChild(AldyToiI2(26607));
(getgenv())[AldyToiI2(26745)] = (getgenv()).StartRodChargeHT or ((AldyToiD:WaitForChild(AldyToiI2(26824))):WaitForChild("\065\110\105\109\097\116\105\111\110\115")):WaitForChild(AldyToiI2(26570));
(getgenv()).RodThrowHT = (getgenv()).RodThrowHT or ((AldyToiD:WaitForChild(AldyToiI2(26824))):WaitForChild(AldyToiI2(26770))):WaitForChild(AldyToiI2(26977));
(getgenv()).EquipIdleHT = (getgenv())[AldyToiI2(26711)] or ((AldyToiD:WaitForChild("\077\111\100\117\108\101\115")):WaitForChild("\065\110\105\109\097\116\105\111\110\115")):WaitForChild("\072\111\108\121 \084\114\105\100\101\110\116 - \069\113\117\105\112\073\100\108\101");
(getgenv()).ReelingIdleHT = (getgenv()).ReelingIdleHT or ((AldyToiD:WaitForChild("\077\111\100\117\108\101\115")):WaitForChild("\065\110\105\109\097\116\105\111\110\115")):WaitForChild("\072\111\108\121 \084\114\105\100\101\110\116 - \082\101\101\108\105\110\103\073\100\108\101");
(getgenv()).EasyFishReelStartHT = (getgenv()).EasyFishReelStartHT or ((AldyToiD:WaitForChild(AldyToiI2(26824))):WaitForChild("\065\110\105\109\097\116\105\111\110\115")):WaitForChild(AldyToiI2(26773));
(getgenv()).FishCaughtHT = (getgenv())[AldyToiI2(26902)] or ((AldyToiD:WaitForChild("\077\111\100\117\108\101\115")):WaitForChild("\065\110\105\109\097\116\105\111\110\115")):WaitForChild(AldyToiI2(26572));
local AldyToiq4 = AldyToip4:FindFirstChildOfClass("\065\110\105\109\097\116\111\114") or Instance.new(AldyToiI2(26772), AldyToip4);
local AldyToiS4 = AldyToiI2(26559);
local AldyToik4 = "\057\050\054\050\052\049\048\055\049\054\053\050\055\051";
local AldyToif4 = AldyToiI2(26430);
local AldyToiL4 = AldyToiI2(26915);
local AldyToiz4 = "\056\051\050\049\057\048\050\048\051\057\055\056\052\057";
local AldyToih4 = "\049\049\052\057\049\055\052\054\050\055\057\052\056\054\052";
local AldyToiO4 = "\049\050\054\056\051\049\056\049\053\056\051\057\055\050\052";
local AldyToit4 = AldyToiI2(26679);
local AldyToiE4 = "\049\050\056\049\054\055\048\054\056\050\057\049\055\048\051";
local function AldyToiv4()
	local AldyToiw = AldyToio:FindFirstChild(AldyToiI2(26599));
	if not AldyToiw then
		return;
	end;
	for AldyToiw, AldyToiY in ipairs(AldyToiw:GetChildren()) do
		if AldyToiY:IsA(AldyToiI2(26631)) and AldyToiY:GetAttribute("\079\119\110\101\114\073\100") then
			local AldyToiw = AldyToiY:GetAttribute(AldyToiI2(26623));
			if AldyToiw ~= AldyToiN.UserId then
				AldyToiY:SetAttribute("\079\119\110\101\114\073\100", AldyToiN.UserId);
			end;
		end;
	end;
end;
local function AldyToiB4(AldyToiw)
	local AldyToiY = math[AldyToiI2(26845)](AldyToiw);
	local AldyToio = AldyToiw - AldyToiY;
	local AldyToiN = math[AldyToiI2(26991)](0, 99999) / 100000;
	return (AldyToiY + AldyToio) + AldyToiN;
end;
(getgenv()).ItemCache = (getgenv())[AldyToiI2(26888)] or {};
local function AldyToiT4()
	(getgenv()).Remotes[AldyToiI2(26947)]:InvokeServer();
	(getgenv()).fishCount = 0;
end;
local AldyToiG4 = 0;
local function AldyToiW4()
	pcall(function()
		local AldyToiw = AldyToiU.PlayerGui:WaitForChild("\066\097\099\107\112\097\099\107", 2);
		if AldyToiw then
			local AldyToiY = AldyToiw:FindFirstChild("\068\105\115\112\108\097\121", true) and (AldyToiw[AldyToiI2(26721)]:FindFirstChild("\073\110\118\101\110\116\111\114\121", true) and AldyToiw[AldyToiI2(26721)].Inventory:FindFirstChild(AldyToiI2(26391), true));
			if AldyToiY and AldyToiY:IsA(AldyToiI2(26743)) then
				local AldyToiw = AldyToiY.Text:match("\094\040\037\100\043\041");
				if AldyToiw then
					AldyToiG4 = tonumber(AldyToiw);
					if (getgenv())[AldyToiI2(26816)][AldyToiI2(26747)] and AldyToiG4 >= AldyToiK4 then
						AldyToiT4();
					end;
					if AldyToiG4 >= 4900 then
						AldyToiT4();
					end;
				end;
			end;
		end;
	end);
	return AldyToiG4;
end;
local function AldyToie4(AldyToiw)
	for AldyToiY, AldyToio in pairs(AldyToif:GetChildren()) do
		if AldyToio:IsA(AldyToiI2(26610)) then
			local AldyToiY, AldyToiN = pcall(require, AldyToio);
			if AldyToiY and (AldyToiN and (AldyToiN.Data and AldyToiN[AldyToiI2(26754)][AldyToiI2(26674)] == AldyToiw)) then
				return AldyToiN;
			end;
		end;
	end;
	return nil;
end;
(getgenv())[AldyToiI2(26614)] = { Legendary = false, [AldyToiI2(26690)] = false, [AldyToiI2(26455)] = false };
local function AldyToiV4()
	local AldyToiw = AldyToiK:Get(AldyToiI2(26652));
	if not AldyToiw or not AldyToiw.Items then
		return;
	end;
	for AldyToiw, AldyToiY in pairs(AldyToiw.Items) do
		local AldyToio = AldyToie4(AldyToiY.Id);
		if AldyToio and (AldyToio.Data[AldyToiI2(26955)] == AldyToiI2(26460) and AldyToio.Probability) then
			local AldyToiw = AldyToiz.GetTierFromRarity(nil, AldyToio.Probability.Chance);
			if AldyToiw and AldyToiw[AldyToiI2(26746)] == "\076\101\103\101\110\100\097\114\121" then
				if AldyToiY.UUID and not AldyToiY.Favorited then
					AldyToiL:FireServer(AldyToiY.UUID);
				end;
			end;
		end;
	end;
end;
local function AldyToic4()
	local AldyToiw = AldyToiK:Get(AldyToiI2(26652));
	if not AldyToiw or not AldyToiw[AldyToiI2(26716)] then
		return;
	end;
	for AldyToiw, AldyToiY in pairs(AldyToiw[AldyToiI2(26716)]) do
		local AldyToio = AldyToie4(AldyToiY[AldyToiI2(26674)]);
		if AldyToio and (AldyToio.Data.Type == "\070\105\115\104\101\115" and AldyToio.Probability) then
			local AldyToiw = AldyToiz[AldyToiI2(26684)](nil, AldyToio[AldyToiI2(26591)].Chance);
			if AldyToiw and AldyToiw.Name == AldyToiI2(26576) then
				if AldyToiY.UUID and not AldyToiY[AldyToiI2(26699)] then
					AldyToiL:FireServer(AldyToiY.UUID);
				end;
			end;
		end;
	end;
end;
local function AldyToij4()
	local AldyToiw = AldyToiK:Get(AldyToiI2(26652));
	if not AldyToiw or not AldyToiw[AldyToiI2(26716)] then
		return;
	end;
	for AldyToiw, AldyToiY in pairs(AldyToiw.Items) do
		local AldyToio = AldyToie4(AldyToiY[AldyToiI2(26674)]);
		if AldyToio and (AldyToio.Data[AldyToiI2(26955)] == "\070\105\115\104\101\115" and AldyToio.Probability) then
			local AldyToiw = AldyToiz[AldyToiI2(26684)](nil, AldyToio.Probability.Chance);
			if AldyToiw and AldyToiw.Name == "\083\069\067\082\069\084" then
				if AldyToiY[AldyToiI2(26884)] and not AldyToiY.Favorited then
					AldyToiL:FireServer(AldyToiY.UUID);
				end;
			end;
		end;
	end;
end;
local AldyToiC4 = { [5] = false, [6] = false, [7] = false };
local function AldyToiy4()
	local AldyToiw = AldyToiK:Get(AldyToiI2(26652));
	if not AldyToiw or not AldyToiw[AldyToiI2(26716)] then
		return;
	end;
	for AldyToiw, AldyToiY in pairs(AldyToiw[AldyToiI2(26716)]) do
		local AldyToio = AldyToie4(AldyToiY.Id);
		if AldyToio and AldyToio.Data[AldyToiI2(26955)] == "\070\105\115\104\101\115" then
			if AldyToiY.UUID and not AldyToiY.Favorited then
				AldyToiL:FireServer(AldyToiY.UUID);
			end;
		end;
	end;
end;
local function AldyToii4()
	local AldyToiw = AldyToiK:Get("\073\110\118\101\110\116\111\114\121");
	if not AldyToiw or not AldyToiw[AldyToiI2(26716)] then
		return;
	end;
	for AldyToiw, AldyToiY in pairs(AldyToiw.Items) do
		local AldyToio = AldyToie4(AldyToiY[AldyToiI2(26674)]);
		if AldyToio and AldyToio.Data[AldyToiI2(26955)] == "\070\105\115\104\101\115" then
			if AldyToiY.UUID and AldyToiY.Favorited then
				AldyToiL:FireServer(AldyToiY[AldyToiI2(26884)]);
			end;
		end;
	end;
end;
local AldyToiQ4 = {};
local function AldyToiF4(AldyToiw, AldyToiY)
	local AldyToio = game.Players[AldyToiI2(26930)];
	local AldyToiN = AldyToio.Character or AldyToio[AldyToiI2(26864)]:Wait();
	local AldyToig = AldyToiN:WaitForChild(AldyToiI2(26607));
	for AldyToiw, AldyToiY in ipairs(AldyToig:GetPlayingAnimationTracks()) do
		AldyToiY:Stop();
	end;
	local AldyToid = Instance.new(AldyToiI2(26731));
	AldyToid[AldyToiI2(26737)] = "\114\098\120\097\115\115\101\116\105\100\058\047\047" .. AldyToiw;
	local AldyToim = AldyToig:LoadAnimation(AldyToid);
	AldyToim:Play();
	task.delay(AldyToiY, function()
		if AldyToim.IsPlaying then
			AldyToim:Stop();
		end;
	end);
	return AldyToim;
end;
local function AldyTois4()
	local AldyToiY = {};
	for AldyToiw, AldyToio in ipairs(AldyToiw:GetPlayers()) do
		if AldyToio ~= AldyToiN then
			table.insert(AldyToiY, AldyToio[AldyToiI2(26746)]);
		end;
	end;
	table[AldyToiI2(26926)](AldyToiY);
	return AldyToiY;
end;
(getgenv())[AldyToiI2(26724)][AldyToiI2(26822)]:CreateParagraph({ [AldyToiI2(26694)] = AldyToiI2(26853), Content = AldyToiI2(26661) });
(getgenv()).Tabs[AldyToiI2(26399)]:CreateParagraph({ [AldyToiI2(26694)] = "\065\117\116\111 \084\114\097\100\101 \083\116\111\110\101", [AldyToiI2(26992)] = "\067\108\101\097\114 \116\104\101 \116\111\111\108\098\097\114\047\102\105\115\104 \098\101\108\111\119 \116\104\101 \104\111\116\098\097\114\047\098\097\099\107\112\097\099\107\044 \116\104\101\110 \115\101\108\101\099\116 \097 \112\108\097\121\101\114\044 \099\104\111\111\115\101 \116\104\101 \097\109\111\117\110\116\044 \097\110\100 \099\108\105\099\107 \116\104\101 \084\114\097\100\101 \098\117\116\116\111\110\046" });
local AldyToiI4 = nil;
(getgenv())[AldyToiI2(26833)] = (getgenv())[AldyToiI2(26724)][AldyToiI2(26399)]:CreateDropdown({
		[AldyToiI2(26746)] = AldyToiI2(26801),
		Options = AldyTois4(),
		CurrentOption = { "" },
		[AldyToiI2(26723)] = false,
		Flag = "\084\101\108\101\112\111\114\116\080\108\097\121\101\114\068\114\111\112\100\111\119\110",
		[AldyToiI2(26986)] = function(AldyToiw)
			AldyToiI4 = AldyToiw[1];
		end,
	});
local function AldyToix4()
	local AldyToiw = AldyToiK:Get(AldyToiI2(26652));
	if not AldyToiw or not AldyToiw.Items then
		return {};
	end;
	local AldyToiY = {};
	for AldyToiw, AldyToio in pairs(AldyToiw.Items) do
		if type(AldyToio) == "\116\097\098\108\101" and AldyToio[AldyToiI2(26674)] == 10 then
			table.insert(AldyToiY, AldyToio.UUID);
		end;
	end;
	return AldyToiY;
end;
local function AldyToiR4()
	local AldyToiw = AldyToiK:Get("\073\110\118\101\110\116\111\114\121");
	if not AldyToiw or not AldyToiw[AldyToiI2(26716)] then
		return nil;
	end;
	for AldyToiw, AldyToiY in pairs(AldyToiw.Items) do
		if type(AldyToiY) == AldyToiI2(26658) and AldyToiY[AldyToiI2(26674)] == 10 then
			return tostring(AldyToiY[AldyToiI2(26884)]);
		end;
	end;
	return nil;
end;
(getgenv()).loopCount = (getgenv())[AldyToiI2(26849)] or 1;
(getgenv())[AldyToiI2(26724)].TradeStoneTab:CreateInput({
	[AldyToiI2(26746)] = AldyToiI2(26453),
	[AldyToiI2(26485)] = AldyToiI2(26447),
	RemoveTextAfterFocusLost = false,
	Callback = function(AldyToiw)
		local AldyToiY = tonumber(AldyToiw);
		if AldyToiY then
			(getgenv()).loopCount = AldyToiY;
			print(AldyToiI2(26769), loopCount);
		else
			warn("\073\110\112\117\116 \098\117\107\097\110 \097\110\103\107\097");
		end;
	end,
});
local AldyToil4 = (getgenv()).Tabs.TradeStoneTab:CreateParagraph({ [AldyToiI2(26694)] = "\080\114\111\103\114\101\115\115 \084\114\097\100\101", Content = AldyToiI2(26611) });
local AldyToiP4, AldyToiH4 = 0, 0;
(getgenv()).Tabs.TradeStoneTab:CreateButton({ Name = "\083\116\097\114\116 \084\114\097\100\101", Callback = function()
		pcall(function()
			if not AldyToiI4 or AldyToiI4 == "" then
				AldyToih:Notify({ [AldyToiI2(26694)] = "\226\157\140 \069\114\114\111\114", [AldyToiI2(26992)] = AldyToiI2(26875), Duration = 2 });
				return;
			end;
			local AldyToiY = AldyToiN.Character;
			local AldyToig = AldyToiY and AldyToiY:FindFirstChild(AldyToiI2(26680));
			if not AldyToig then
				AldyToih:Notify({ [AldyToiI2(26694)] = AldyToiI2(26434), Content = "\089\111\117\114 \099\104\097\114\097\099\116\101\114 \110\111\116 \102\111\117\110\100\046", [AldyToiI2(26961)] = 2 });
				return;
			end;
			local AldyToid = AldyToio:FindFirstChild("\067\104\097\114\097\099\116\101\114\115");
			if not AldyToid then
				AldyToih:Notify({ Title = AldyToiI2(26434), [AldyToiI2(26992)] = "\'\067\104\097\114\097\099\116\101\114\115\' \102\111\108\100\101\114 \110\111\116 \102\111\117\110\100\046", Duration = 2 });
				return;
			end;
			local AldyToim = AldyToid:FindFirstChild(AldyToiI4);
			if AldyToim then
				local AldyToiY = AldyToiw:GetPlayerFromCharacter(AldyToim);
				if AldyToiY then
					local AldyToiw = AldyToim[AldyToiI2(26680)];
					AldyToig.CFrame = AldyToiw.CFrame;
					local AldyToio = AldyToiY.UserId;
					local AldyToiN = AldyToix4();
					local AldyToid = #AldyToiN;
					print("\074\117\109\108\097\104 \105\116\101\109 \115\116\111\110\101 \115\097\097\116 \105\110\105 \058", AldyToid);
					if AldyToid == 0 then
						warn("\084\105\100\097\107 \097\100\097 \098\097\116\117 \117\110\116\117\107 \100\105\116\114\097\100\101");
						return;
					end;
					AldyToiP4, AldyToiH4 = 0, 0;
					for AldyToiw = 1, (getgenv()).loopCount, 1 do
						local AldyToiY = AldyToiN[(AldyToiw - 1) % AldyToid + 1];
						AldyToil4:Set({ Title = "\080\114\111\103\114\101\115\115 \084\114\097\100\101", [AldyToiI2(26992)] = string[AldyToiI2(26914)](AldyToiI2(26702), AldyToiw, (getgenv())[AldyToiI2(26849)], AldyToiP4, AldyToiH4, AldyToid) });
						local AldyToig, AldyToim = pcall(function()
								(getgenv()).Remotes[AldyToiI2(26898)]:FireServer(AldyToiY, AldyToiI2(26394));
								task.wait(.5);
								(getgenv()).Remotes[AldyToiI2(26499)]:FireServer(2);
								task[AldyToiI2(26554)](.2);
								return (getgenv())[AldyToiI2(26672)][AldyToiI2(26424)]:InvokeServer(AldyToio, AldyToiY);
							end);
						if AldyToig and AldyToim then
							AldyToiP4 = AldyToiP4 + 1;
							print(string[AldyToiI2(26914)]("\091\083\085\075\083\069\083\093 \065\117\116\111 \084\114\097\100\101 \037\100\047\037\100 \124 \083\117\107\115\101\115\058\037\100 \124 \071\097\103\097\108\058\037\100", AldyToiw, (getgenv()).loopCount, AldyToiP4, AldyToiH4));
						else
							AldyToiH4 = AldyToiH4 + 1;
							print(string.format("\091\071\065\071\065\076\093 \065\117\116\111 \084\114\097\100\101 \037\100\047\037\100 \124 \083\117\107\115\101\115\058\037\100 \124 \071\097\103\097\108\058\037\100", AldyToiw, (getgenv())[AldyToiI2(26849)], AldyToiP4, AldyToiH4));
						end;
						AldyToil4:Set({ [AldyToiI2(26694)] = AldyToiI2(26542), [AldyToiI2(26992)] = string.format("\080\114\111\103\114\101\115\115\058 \037\100\047\037\100\n\226\156\133 \083\117\107\115\101\115\058 \037\100 \124 \226\157\140 \071\097\103\097\108\058 \037\100  \124  \083\105\115\097\058 \037\100", AldyToiw, (getgenv()).loopCount, AldyToiP4, AldyToiH4, AldyToid) });
						task[AldyToiI2(26554)](6);
					end;
					print("\084\114\097\100\105\110\103 \067\111\109\112\108\101\116\101\058", (getgenv())[AldyToiI2(26849)], " \083\117\107\115\101\115\058", AldyToiP4, " \071\097\103\097\108\058", AldyToiH4);
				else
					warn("\078\111 \112\108\097\121\101\114 \102\111\117\110\100 \102\111\114 \116\104\105\115 \099\104\097\114\097\099\116\101\114");
				end;
			else
				warn(AldyToiI2(26760));
			end;
		end);
	end });
(getgenv()).Tabs[AldyToiI2(26399)]:CreateButton({ Name = AldyToiI2(26556), [AldyToiI2(26986)] = function()
		local AldyToiw = AldyTois4();
		(getgenv())[AldyToiI2(26833)]:Refresh(AldyToiw);
		if AldyToiI4 and table[AldyToiI2(26481)](AldyToiw, AldyToiI4) then
			(getgenv()).playerDropdown2:Set({ AldyToiI4 });
		else
			AldyToiI4 = nil;
			(getgenv())[AldyToiI2(26833)]:Set({ "\060\078\111\110\101\062" });
		end;
	end });
local AldyToiX4;
local AldyToiA4;
AldyToiX4 = (getgenv())[AldyToiI2(26724)][AldyToiI2(26822)]:CreateToggle({
		Name = "\080\101\114\102\101\099\116 \067\097\115\116",
		[AldyToiI2(26939)] = false,
		[AldyToiI2(26655)] = AldyToiI2(26628),
		[AldyToiI2(26986)] = function(AldyToiw)
			(getgenv())[AldyToiI2(26816)][AldyToiI2(26981)] = AldyToiw;
			if AldyToiw and AldyToiA4 then
				(getgenv())[AldyToiI2(26816)][AldyToiI2(26546)] = false;
				AldyToiA4:Set(false);
			end;
		end,
	});
AldyToiA4 = (getgenv()).Tabs[AldyToiI2(26822)]:CreateToggle({
		[AldyToiI2(26746)] = AldyToiI2(26511),
		CurrentValue = false,
		Flag = "\065\109\097\122\105\110\103\067\097\115\116\084\111\103\103\108\101",
		Callback = function(AldyToiw)
			(getgenv())[AldyToiI2(26816)][AldyToiI2(26546)] = AldyToiw;
			if AldyToiw and AldyToiX4 then
				(getgenv()).toggleState[AldyToiI2(26981)] = false;
				AldyToiX4:Set(false);
			end;
		end,
	});
(getgenv())[AldyToiI2(26489)] = (getgenv())[AldyToiI2(26724)].TP_Player_Tab:CreateDropdown({
		Name = AldyToiI2(26801),
		[AldyToiI2(26741)] = AldyTois4(),
		[AldyToiI2(26706)] = { AldyToiI2(26766) },
		MultipleOptions = false,
		[AldyToiI2(26655)] = AldyToiI2(26471),
		[AldyToiI2(26986)] = function(AldyToiw)
			(getgenv()).selectedPlayerName = AldyToiw[1];
		end,
	});
local function AldyToiZ4(AldyToiw)
	if not AldyToiw or AldyToiw == "" then
		AldyToih:Notify({ Title = AldyToiI2(26434), Content = AldyToiI2(26875), [AldyToiI2(26961)] = 2 });
		return;
	end;
	local AldyToiY = AldyToiN.Character;
	local AldyToig = AldyToiY and AldyToiY:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
	if not AldyToig then
		AldyToih:Notify({ [AldyToiI2(26694)] = AldyToiI2(26434), [AldyToiI2(26992)] = AldyToiI2(26718), Duration = 2 });
		return;
	end;
	local AldyToid = AldyToio:FindFirstChild(AldyToiI2(26529));
	if not AldyToid then
		AldyToih:Notify({ [AldyToiI2(26694)] = "\226\157\140 \069\114\114\111\114", Content = AldyToiI2(26942), Duration = 2 });
		return;
	end;
	local AldyToim = AldyToid:FindFirstChild(AldyToiw);
	if AldyToim and AldyToim:FindFirstChild(AldyToiI2(26680)) then
		local AldyToiY = AldyToim[AldyToiI2(26680)];
		local AldyToio = AldyToiY[AldyToiI2(26643)].RightVector * 5;
		AldyToig.CFrame = AldyToiY.CFrame + AldyToio;
		AldyToih:Notify({ [AldyToiI2(26694)] = "\226\156\133 \084\101\108\101\112\111\114\116\101\100", Content = AldyToiI2(26657) .. AldyToiw, [AldyToiI2(26961)] = 2 });
	else
		AldyToih:Notify({ Title = AldyToiI2(26434), [AldyToiI2(26992)] = AldyToiI2(26980), Duration = 2 });
	end;
end;
(getgenv())[AldyToiI2(26724)].TP_Player_Tab:CreateButton({ Name = "\084\101\108\101\112\111\114\116 \116\111 \083\101\108\101\099\116\101\100 \080\108\097\121\101\114", Callback = function()
		pcall(function()
			AldyToiZ4((getgenv()).selectedPlayerName);
		end);
	end });
(getgenv())[AldyToiI2(26724)].TP_Player_Tab:CreateButton({ Name = "\240\159\148\132 \082\101\102\114\101\115\104 \080\108\097\121\101\114 \076\105\115\116", [AldyToiI2(26986)] = function()
		local AldyToiw = AldyTois4();
		(getgenv()).playerDropdown:Refresh(AldyToiw);
		if (getgenv())[AldyToiI2(26966)] and table.find(AldyToiw, (getgenv())[AldyToiI2(26966)]) then
			(getgenv())[AldyToiI2(26489)]:Set({ (getgenv()).selectedPlayerName });
		else
			(getgenv()).selectedPlayerName = nil;
			(getgenv()).playerDropdown:Set({ "\060\078\111\110\101\062" });
		end;
	end });
(getgenv()).Tabs.AboutTab:CreateParagraph({ [AldyToiI2(26694)] = AldyToiI2(26951), [AldyToiI2(26992)] = "\070\114\101\101 \097\110\100 \075\101\121\108\101\115\115\046\n" });
(getgenv()).Tabs.AboutTab:CreateButton({ [AldyToiI2(26746)] = AldyToiI2(26419), [AldyToiI2(26986)] = function()
		setclipboard(AldyToiI2(26504));
		AldyToih:Notify({ [AldyToiI2(26694)] = "\067\111\112\105\101\100 \116\111 \099\108\105\112\098\111\097\114\100\033", [AldyToiI2(26992)] = AldyToiI2(26504), [AldyToiI2(26961)] = 1 });
	end });
(getgenv()).Tabs.AboutTab:CreateButton({ [AldyToiI2(26746)] = "\084\105\107\116\111\107", [AldyToiI2(26986)] = function()
		setclipboard(AldyToiI2(26779));
		AldyToih:Notify({ [AldyToiI2(26694)] = "\067\111\112\105\101\100 \116\111 \099\108\105\112\098\111\097\114\100\033", [AldyToiI2(26992)] = "\104\116\116\112\115\058\047\047\116\105\107\116\111\107\046\099\111\109\047\097\108\100\121\116\111\105", [AldyToiI2(26961)] = 1 });
	end });
(getgenv())[AldyToiI2(26724)].AboutTab:CreateButton({ Name = "\071\105\116\072\117\098", [AldyToiI2(26986)] = function()
		setclipboard("\104\116\116\112\115\058\047\047\103\105\116\104\117\098\046\099\111\109\047\097\108\100\121\106\114\122");
		AldyToih:Notify({ Title = AldyToiI2(26698), Content = AldyToiI2(26943), Duration = 1 });
	end });
local AldyToiM4 = AldyToiD:WaitForChild("\073\116\101\109\115");
local AldyToiwC = {};
local function AldyToiYC(AldyToiw)
	if not AldyToiw or type(AldyToiw) ~= "\110\117\109\098\101\114" then
		return "\063\063\063";
	end;
	if AldyToiw >= 1000000 then
		return string.format(AldyToiI2(26561), AldyToiw / 1000000);
	elseif AldyToiw >= 1000 then
		return string[AldyToiI2(26914)]("\037\046\049\102\107 \067\111\105\110\115", AldyToiw / 1000);
	else
		return tostring(AldyToiw) .. AldyToiI2(26625);
	end;
end;
local function AldyToioC()
	for AldyToiw, AldyToiY in ipairs(AldyToiM4:GetChildren()) do
		if AldyToiY:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			local AldyToiw, AldyToio = pcall(require, AldyToiY);
			if AldyToiw and type(AldyToio) == "\116\097\098\108\101" then
				AldyToio[AldyToiI2(26784)] = 9999;
				AldyToio[AldyToiI2(26569)] = 9999;
				AldyToio.Speed = 100;
				AldyToio[AldyToiI2(26606)] = 1000000;
			end;
			if AldyToiw and (type(AldyToio) == AldyToiI2(26658) and AldyToio.RollData) then
				AldyToio.RollData.BaseLuck = 9999;
				if not AldyToio[AldyToiI2(26475)][AldyToiI2(26626)] then
					AldyToio[AldyToiI2(26475)].Frequency = {};
				end;
				AldyToio[AldyToiI2(26475)].Frequency.Golden = 100;
				AldyToio.RollData[AldyToiI2(26626)].Rainbow = 100;
			end;
		end;
	end;
	local AldyToiw = AldyToiD:WaitForChild(AldyToiI2(26400));
	for AldyToiw, AldyToiY in pairs(AldyToiw:GetChildren()) do
		if AldyToiY:IsA(AldyToiI2(26610)) then
			local AldyToiw, AldyToio = pcall(require, AldyToiY);
			if AldyToiw and (AldyToio and AldyToio.Modifiers) then
				if AldyToio.Modifiers == nil then
					AldyToio.Modifiers = {};
				end;
				AldyToio[AldyToiI2(26589)][AldyToiI2(26555)] = 99999;
				if AldyToio.Modifiers[AldyToiI2(26949)] == nil then
					AldyToio[AldyToiI2(26589)].ShinyMultiplier = 99999;
				end;
				if AldyToio.Modifiers.MutationMultiplier == nil then
					AldyToio[AldyToiI2(26589)][AldyToiI2(26934)] = 99999;
				end;
			else
				warn(AldyToiI2(26734), AldyToiY[AldyToiI2(26746)]);
			end;
		end;
	end;
end;
for AldyToiw, AldyToiY in ipairs(AldyToiM4:GetChildren()) do
	if AldyToiY:IsA(AldyToiI2(26610)) then
		local AldyToiw, AldyToio = pcall(require, AldyToiY);
		if AldyToiw and typeof(AldyToio) == "\116\097\098\108\101" then
			local AldyToiw = AldyToio[AldyToiI2(26754)];
			if AldyToiw and AldyToiw.Type == AldyToiI2(26990) then
				local AldyToiN = AldyToiw.Id or "\063";
				local AldyToig = AldyToiw.Name or AldyToiY.Name;
				local AldyToid = AldyToiw[AldyToiI2(26920)] or AldyToiI2(26740);
				local AldyToim = "\063\063\063";
				if AldyToio.Price then
					AldyToim = AldyToiYC(AldyToio.Price);
					table[AldyToiI2(26418)](AldyToiwC, {
						[AldyToiI2(26700)] = AldyToiN,
						[AldyToiI2(26746)] = AldyToig,
						Dex = AldyToid,
						Harga = AldyToim,
					});
				else
					local AldyToiw = {
							["\071\111\108\100 \082\111\100"] = "\086\073\080 \079\110\108\121",
							["\076\117\099\107\121 \082\111\100"] = AldyToiI2(26751),
							["\077\105\100\110\105\103\104\116 \082\111\100"] = AldyToiI2(26617),
							["\067\104\114\111\109\101 \082\111\100"] = "\052\051\055\107 \067\111\105\110\115",
						};
					AldyToim = AldyToiw[AldyToig] or "\063\063\063 \085\110\107\110\111\119\110";
				end;
			end;
		end;
	end;
end;
(getgenv())[AldyToiI2(26724)].Buy_Rod:CreateSection("\082\111\100\115");
(getgenv()).Tabs.Buy_Rod:CreateParagraph({ [AldyToiI2(26694)] = "\080\117\114\099\104\097\115\101 \082\111\100\115", [AldyToiI2(26992)] = "\083\111\109\101 \082\111\100\115 \099\097\110\'\116 \098\101 \112\117\114\099\104\097\115\101\100 \098\101\099\097\117\115\101 \116\104\101\121 \097\114\101 \086\073\080 \111\110\108\121 \111\114 \100\111\101\115\110\'\116 \104\097\118\101 \097 \112\114\105\099\101 \109\097\112\046" });
for AldyToiw, AldyToiY in ipairs(AldyToiwC) do
	(getgenv()).Tabs.Buy_Rod:CreateButton({ [AldyToiI2(26746)] = string[AldyToiI2(26914)]("\037\115 \040\037\115\041", AldyToiY[AldyToiI2(26746)], AldyToiY.Harga), Callback = function()
			local AldyToiw, AldyToio = pcall(function()
					return AldyToiD.Packages._Index["\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048"].net[AldyToiI2(26715)]:InvokeServer(AldyToiY[AldyToiI2(26700)]);
				end);
			AldyToih:Notify({ [AldyToiI2(26694)] = "\080\117\114\099\104\097\115\101 \082\111\100", [AldyToiI2(26992)] = AldyToiw and "\066\117\121\105\110\103 " .. AldyToiY.Name or "\070\097\105\108\101\100 \116\111 \098\117\121 " .. AldyToiY.Name, [AldyToiI2(26961)] = 1 });
			if not AldyToiw then
				warn(AldyToiI2(26662), AldyToio);
			end;
		end });
end;
(getgenv()).Tabs[AldyToiI2(26389)]:CreateSection("\066\097\105\116\115");
(getgenv())[AldyToiI2(26724)].Buy_Rod:CreateParagraph({ [AldyToiI2(26694)] = "\066\117\121 \066\097\105\116\115", [AldyToiI2(26992)] = "\066\117\121 \066\097\105\116\115 \069\118\101\114\121\119\104\101\114\101" });
local AldyToiNC = AldyToiD:FindFirstChild("\066\097\105\116\115");
if not AldyToiNC then
	warn(AldyToiI2(26491));
	return;
end;
for AldyToiw, AldyToiY in ipairs(AldyToiNC:GetChildren()) do
	if AldyToiY:IsA(AldyToiI2(26610)) then
		local AldyToiw, AldyToio = pcall(require, AldyToiY);
		if AldyToiw and (AldyToio and AldyToio.Data) then
			local AldyToiw = AldyToio.Data.Id or 0;
			local AldyToiY = AldyToio[AldyToiI2(26754)][AldyToiI2(26746)] or AldyToiI2(26530);
			local AldyToiN = AldyToio[AldyToiI2(26754)].Description or AldyToiI2(26740);
			local AldyToig = AldyToio[AldyToiI2(26874)] and AldyToio.Price .. " \067\111\105\110\115" or AldyToiI2(26885);
			(getgenv()).Tabs[AldyToiI2(26389)]:CreateButton({ [AldyToiI2(26746)] = AldyToiY .. (" \040" .. (AldyToig .. AldyToiI2(26659))), Callback = function()
					pcall(function()
						AldyToiD.Packages[AldyToiI2(26478)][AldyToiI2(26422)][AldyToiI2(26856)][AldyToiI2(26562)]:InvokeServer(AldyToiw);
						AldyToih:Notify({ Title = AldyToiI2(26687), Content = AldyToiI2(26534) .. AldyToiY, Duration = 3 });
					end);
				end });
		else
			warn(AldyToiI2(26436), AldyToiY[AldyToiI2(26746)]);
		end;
	end;
end;
local AldyToigC = AldyToiJ4:WaitForChild(AldyToiI2(26940));
local AldyToidC = require((AldyToiD:WaitForChild(AldyToiI2(26913))):WaitForChild("\070\105\115\104\105\110\103\067\111\110\116\114\111\108\108\101\114"));
(getgenv()).tierArray = (getgenv())[AldyToiI2(26537)] or {
		{
			[AldyToiI2(26746)] = "\067\111\109\109\111\110",
			Rarity = 1,
			[AldyToiI2(26924)] = ColorSequence.new(Color3[AldyToiI2(26385)](255, 250, 246)),
			Tier = 1,
		},
		{
			Name = "\085\110\099\111\109\109\111\110",
			[AldyToiI2(26753)] = .02,
			TierColor = ColorSequence.new(Color3.fromRGB(195, 255, 85)),
			[AldyToiI2(26492)] = 2,
		},
		{
			[AldyToiI2(26746)] = AldyToiI2(26855),
			[AldyToiI2(26753)] = .004,
			TierColor = ColorSequence.new(Color3.fromRGB(85, 162, 255)),
			[AldyToiI2(26492)] = 3,
		},
		{
			Name = AldyToiI2(26468),
			Rarity = .001,
			[AldyToiI2(26924)] = ColorSequence[AldyToiI2(26421)](Color3.fromRGB(173, 79, 255)),
			[AldyToiI2(26492)] = 4,
		},
		{
			Name = "\076\101\103\101\110\100\097\114\121",
			Rarity = .0002,
			[AldyToiI2(26924)] = ColorSequence.new(Color3.fromRGB(255, 184, 42)),
			Tier = 5,
		},
		{
			[AldyToiI2(26746)] = "\077\121\116\104\105\099",
			[AldyToiI2(26753)] = 2e-05,
			TierColor = ColorSequence.new(Color3.fromRGB(255, 24, 24)),
			[AldyToiI2(26492)] = 6,
		},
		{
			Name = AldyToiI2(26968),
			[AldyToiI2(26753)] = 4e-06,
			TierColor = ColorSequence.new({ ColorSequenceKeypoint[AldyToiI2(26421)](0, Color3[AldyToiI2(26385)](23, 255, 151)), ColorSequenceKeypoint.new(1, Color3[AldyToiI2(26385)](11, 149, 255)) }),
			[AldyToiI2(26492)] = 7,
		},
	};
local function AldyToimC(AldyToiw, AldyToiY, AldyToio)
	AldyToio = AldyToio or .01;
	return math.abs(AldyToiw[AldyToiI2(26730)] - AldyToiY.R) <= AldyToio and (math[AldyToiI2(26644)](AldyToiw[AldyToiI2(26392)] - AldyToiY[AldyToiI2(26392)]) <= AldyToio and math[AldyToiI2(26644)](AldyToiw[AldyToiI2(26509)] - AldyToiY[AldyToiI2(26509)]) <= AldyToio);
end;
local function AldyToiDC(AldyToiw)
	local AldyToiY = {};
	for AldyToio = 1, #AldyToiw, 4 do
		local AldyToiN = AldyToiw[AldyToio];
		local AldyToig = AldyToiw[AldyToio + 1];
		local AldyToid = AldyToiw[AldyToio + 2];
		local AldyToim = AldyToiw[AldyToio + 3];
		table[AldyToiI2(26418)](AldyToiY, ColorSequenceKeypoint[AldyToiI2(26421)](AldyToiN, Color3[AldyToiI2(26421)](AldyToig, AldyToid, AldyToim)));
	end;
	return ColorSequence[AldyToiI2(26421)](AldyToiY);
end;
local function AldyToiUC(AldyToiw)
	local AldyToiY;
	if typeof(AldyToiw) == "\067\111\108\111\114\083\101\113\117\101\110\099\101" then
		AldyToiY = AldyToiw;
	elseif typeof(AldyToiw) == AldyToiI2(26658) then
		AldyToiY = AldyToiDC(AldyToiw);
	else
		warn("\084\101\120\116\067\111\108\111\114 \116\105\100\097\107 \100\105\107\101\110\097\108\105\058", typeof(AldyToiw));
		return nil;
	end;
	local AldyToio = AldyToiY.Keypoints[1][AldyToiI2(26967)];
	for AldyToiw, AldyToiY in ipairs((getgenv())[AldyToiI2(26537)]) do
		if AldyToiY.TierColor and AldyToiY.TierColor[AldyToiI2(26496)] then
			local AldyToiw = AldyToiY.TierColor[AldyToiI2(26496)][1].Value;
			if AldyToimC(AldyToio, AldyToiw) then
				return AldyToiY;
			end;
		end;
	end;
	return nil;
end;
(getgenv()).lastTierData = nil;
(getgenv()).lastTierReceived = false;
local AldyToibC = {
		AldyToiI2(26532),
		AldyToiI2(26823),
		AldyToiI2(26855),
		"\069\112\105\099",
		"\076\101\103\101\110\100\097\114\121",
		"\077\121\116\104\105\099",
		"\083\069\067\082\069\084",
	};
(getgenv()).selectedTier = { "\076\101\103\101\110\100\097\114\121", "\077\121\116\104\105\099", "\083\069\067\082\069\084" };
local function AldyToinC(AldyToiw)
	(getgenv()).toggleState[AldyToiI2(26750)] = AldyToiw;
	if AldyToiw then
		pcall(function()
			local AldyToiw = { 1 };
			((((((game:GetService(AldyToiI2(26636))):WaitForChild("\080\097\099\107\097\103\101\115")):WaitForChild("\095\073\110\100\101\120")):WaitForChild(AldyToiI2(26422))):WaitForChild(AldyToiI2(26856))):WaitForChild(AldyToiI2(26850))):FireServer(unpack(AldyToiw));
		end);
		task.wait(.8);
		task[AldyToiI2(26851)](function()
			while (getgenv())[AldyToiI2(26816)][AldyToiI2(26750)] do
				for AldyToiw, AldyToiY in ipairs(AldyToip4:GetPlayingAnimationTracks()) do
					AldyToiY:Stop();
				end;
				pcall(function()
					(getgenv())[AldyToiI2(26701)] = true;
					if not (getgenv()).toggleState.fishingAnimation then
						if AldyToiS == 245 then
							AldyToiF4(AldyToiz4, 1);
						else
							AldyToiF4(AldyToiS4, 1);
						end;
					end;
					(getgenv())[AldyToiI2(26672)][AldyToiI2(26665)]:InvokeServer(AldyToio:GetServerTimeNow());
					if not (getgenv()).toggleState.fishingAnimation then
						if AldyToiS == 245 then
							AldyToiF4(AldyToih4, 2);
						else
							AldyToiF4(AldyToik4, 2);
						end;
					end;
					task.wait(.2);
					local AldyToiw, AldyToiY;
					if (getgenv()).toggleState[AldyToiI2(26981)] and not (getgenv()).toggleState[AldyToiI2(26546)] then
						AldyToiw, AldyToiY = -0.74999964237213, 1;
					elseif not (getgenv()).toggleState.perfectCast and (getgenv()).toggleState[AldyToiI2(26546)] then
						AldyToiw, AldyToiY = -139.6379699707, .87694226394928;
					else
						AldyToiw = math.random(-1000, 1000) / 1000;
						AldyToiY = math[AldyToiI2(26991)](0, 1000) / 1000;
					end;
					if not (getgenv()).toggleState.fishingAnimation then
						if AldyToiS == 245 then
							AldyToiF4(AldyToiO4, 15);
						else
							AldyToiF4(AldyToif4, 15);
						end;
					end;
					(getgenv()).Remotes.RF_RequestFishingMinigameStarted:InvokeServer(AldyToiw, AldyToiY);
					task[AldyToiI2(26554)](.2);
					local AldyToiN = {};
					while (getgenv())[AldyToiI2(26701)] do
						(getgenv())[AldyToiI2(26672)].RE_FishingCompleted:FireServer(unpack(AldyToiN));
						task[AldyToiI2(26554)](.5);
					end;
				end);
				task[AldyToiI2(26554)]((getgenv())[AldyToiI2(26713)]);
			end;
		end);
	else
		local AldyToiw = {};
		for AldyToiY = 1, 6, 1 do
			(getgenv()).Remotes.RE_FishingCompleted:FireServer(unpack(AldyToiw));
			task.wait(.1);
		end;
		pcall(function()
			(getgenv())[AldyToiI2(26672)][AldyToiI2(26767)]:InvokeServer();
			if AldyToidC and AldyToidC[AldyToiI2(26645)] then
				AldyToidC:RequestClientStopFishing(true);
			end;
		end);
		for AldyToiw, AldyToiY in ipairs(AldyToip4:GetPlayingAnimationTracks()) do
			AldyToiY:Stop();
		end;
		AldyToih:Notify({ [AldyToiI2(26694)] = AldyToiI2(26890), Content = AldyToiI2(26574), [AldyToiI2(26961)] = 1 });
	end;
end;
if (getgenv())[AldyToiI2(26685)] then
	(getgenv())[AldyToiI2(26685)]:Disconnect();
end;
(getgenv()).replicateTextConn = AldyToiD.Packages[AldyToiI2(26478)][AldyToiI2(26422)].net[AldyToiI2(26510)].OnClientEvent:Connect(function(AldyToiY)
		if AldyToiY and (AldyToiY[AldyToiI2(26857)] and AldyToiY.TextData[AldyToiI2(26503)] == "\069\120\099\108\097\105\109") then
			local AldyToio = AldyToiw.LocalPlayer[AldyToiI2(26785)] and AldyToiw.LocalPlayer.Character:FindFirstChild("\072\101\097\100");
			if AldyToio and AldyToiY.Container == AldyToio then
				(getgenv())[AldyToiI2(26847)] = tick();
				if not (getgenv())[AldyToiI2(26816)].fishingAnimation then
					if AldyToiS == 245 then
						AldyToiF4(AldyToit4, 1);
					else
						AldyToiF4(AldyToit4, 1);
					end;
				end;
				if (getgenv())[AldyToiI2(26816)][AldyToiI2(26597)] then
					local AldyToiw = AldyToiY[AldyToiI2(26857)].TextColor;
					local AldyToio = AldyToiUC(AldyToiw);
					(getgenv())[AldyToiI2(26487)] = AldyToio;
					(getgenv()).lastTierReceived = true;
					if AldyToio then
						(getgenv()).lastTierName = AldyToio.Name;
					end;
				end;
			end;
		end;
	end);
(getgenv()).autoFishToggle = (getgenv())[AldyToiI2(26724)][AldyToiI2(26822)]:CreateToggle({
		[AldyToiI2(26746)] = "\240\159\142\163 \065\117\116\111 \070\105\115\104\105\110\103",
		[AldyToiI2(26939)] = false,
		[AldyToiI2(26655)] = AldyToiI2(26612),
		[AldyToiI2(26986)] = function(AldyToiw)
			(getgenv())[AldyToiI2(26816)][AldyToiI2(26750)] = AldyToiw;
			AldyToinC(AldyToiw);
		end,
	});
(getgenv())[AldyToiI2(26724)][AldyToiI2(26822)]:CreateSlider({
	[AldyToiI2(26746)] = AldyToiI2(26787),
	[AldyToiI2(26397)] = { .1, 5 },
	Flag = "\065\117\116\111\070\105\115\104\068\101\108\097\121",
	Increment = .1,
	CurrentValue = (getgenv())[AldyToiI2(26713)],
	[AldyToiI2(26986)] = function(AldyToiw)
		(getgenv())[AldyToiI2(26713)] = AldyToiw;
	end,
});
(getgenv()).Tabs[AldyToiI2(26822)]:CreateParagraph({ [AldyToiI2(26694)] = "\073\100\108\101 \082\101\115\112\097\119\110 \084\105\109\101", Content = "\068\101\108\097\121 \098\101\102\111\114\101 \097\117\116\111\109\097\116\105\099 \114\101\115\112\097\119\110 \119\104\101\110 \097\117\116\111\102\105\115\104\105\110\103 \105\115 \097\099\116\105\118\101 \098\117\116 \110\111 \102\105\115\104 \105\115 \099\097\117\103\104\116\047\104\111\111\107\101\100 \040\100\101\102\097\117\108\116 \050\048 \115\101\099\111\110\100\115\041" });
local function AldyToiuC()
	local AldyToiw = AldyToiN[AldyToiI2(26785)];
	if AldyToiw and AldyToiw:FindFirstChild("\072\117\109\097\110\111\105\100") then
		AldyToiw.Humanoid[AldyToiI2(26704)] = 0;
	end;
end;
(getgenv())[AldyToiI2(26457)] = (getgenv()).Tabs[AldyToiI2(26822)]:CreateToggle({
		Name = "\065\117\116\111 \082\101\115\112\097\119\110 \119\104\101\110 \105\100\108\101",
		CurrentValue = false,
		Flag = AldyToiI2(26848),
		[AldyToiI2(26986)] = function(AldyToiw)
			(getgenv()).toggleState.autoRespawn = AldyToiw;
		end,
	});
(getgenv()).idleTime = 20;
(getgenv())[AldyToiI2(26724)].AutoFishTab:CreateSlider({
	Name = "\226\143\177\239\184\143 \073\100\108\101 \082\101\115\112\097\119\110 \084\105\109\101 \040\115\101\099\111\110\100\115\041",
	Range = { 10, 60 },
	[AldyToiI2(26470)] = 2,
	Flag = AldyToiI2(26663),
	[AldyToiI2(26939)] = (getgenv())[AldyToiI2(26633)],
	Callback = function(AldyToiw)
		(getgenv()).idleTime = AldyToiw;
	end,
});
(getgenv()).Tabs.AutoFishTab:CreateButton({ [AldyToiI2(26746)] = AldyToiI2(26582), [AldyToiI2(26986)] = function()
		AldyToiuC();
	end });
(getgenv())[AldyToiI2(26724)][AldyToiI2(26409)]:CreateParagraph({ Title = "\240\159\140\164\239\184\143 \080\117\114\099\104\097\115\101 \087\101\097\116\104\101\114 \069\118\101\110\116\115", Content = AldyToiI2(26916) });
local AldyToirC = AldyToiD:WaitForChild("\069\118\101\110\116\115");
(getgenv())[AldyToiI2(26736)] = {};
(getgenv())[AldyToiI2(26703)] = {};
for AldyToiw, AldyToiY in ipairs(AldyToirC:GetChildren()) do
	if AldyToiY:IsA(AldyToiI2(26610)) then
		local AldyToiw, AldyToio = pcall(require, AldyToiY);
		if AldyToiw and (AldyToio and type(AldyToio) == AldyToiI2(26658)) then
			local AldyToiw = { [AldyToiI2(26746)] = AldyToio[AldyToiI2(26746)] or AldyToiY[AldyToiI2(26746)], Price = AldyToio[AldyToiI2(26404)] or 0, Desc = AldyToio.Description or AldyToiI2(26545) };
			if not (string.lower(AldyToiw.Name)):find("\097\100\109\105\110") and (not (string.lower(AldyToiw.Name)):find("\105\110\099\114\101\097\115\101") and (not (string[AldyToiI2(26415)](AldyToiw[AldyToiI2(26746)])):find(AldyToiI2(26763)) and (not (string.lower(AldyToiw[AldyToiI2(26746)])):find("\099\111\118\101") and (not (string.lower(AldyToiw[AldyToiI2(26746)])):find("\119\111\114\109") and not (string[AldyToiI2(26415)](AldyToiw.Name)):find("\109\101\103\097\108\111\100\111\110"))))) then
				table.insert((getgenv())[AldyToiI2(26736)], AldyToiw);
			end;
			if not (string[AldyToiI2(26415)](AldyToiw.Name)):find("\115\104\097\114\107") and (not (string[AldyToiI2(26415)](AldyToiw.Name)):find("\097\100\109\105\110") and (not (string[AldyToiI2(26415)](AldyToiw[AldyToiI2(26746)])):find("\105\110\099\114\101\097\115\101") and (not (string[AldyToiI2(26415)](AldyToiw[AldyToiI2(26746)])):find("\097\100\109\105\110") and (not (string[AldyToiI2(26415)](AldyToiw.Name)):find(AldyToiI2(26634)) and (not (string.lower(AldyToiw.Name)):find("\119\111\114\109") and not (string.lower(AldyToiw[AldyToiI2(26746)])):find("\109\101\103\097\108\111\100\111\110")))))) then
				table[AldyToiI2(26418)]((getgenv())[AldyToiI2(26703)], AldyToiw);
			end;
		end;
	end;
end;
local AldyToiJC = AldyToiU.PlayerGui.Inventory[AldyToiI2(26593)].Content[AldyToiI2(26405)][AldyToiI2(26652)];
local function AldyToiKC(AldyToiw)
	local AldyToiY = AldyToiD:FindFirstChild(AldyToiI2(26716));
	if not AldyToiY then
		return nil;
	end;
	local AldyToio = AldyToiw or AldyToiI2(26766);
	AldyToio = (AldyToio:gsub("\037\115\042\037\098\040\041", "")):gsub("\094\037\115\042\040\046-\041\037\115\042\036", AldyToiI2(26781));
	local AldyToiN = string.lower(AldyToio);
	local AldyToig, AldyToid = nil, 0;
	for AldyToiw, AldyToiY in ipairs(AldyToiY:GetChildren()) do
		if AldyToiY:IsA(AldyToiI2(26610)) then
			local AldyToiw = string[AldyToiI2(26415)](AldyToiY.Name);
			if AldyToiN:find(AldyToiw, 1, true) then
				if #AldyToiY.Name > AldyToid then
					AldyToid = #AldyToiY.Name;
					AldyToig = AldyToiY;
				end;
			end;
		end;
	end;
	if AldyToig then
		return AldyToig;
	end;
	for AldyToiw, AldyToiY in ipairs(AldyToiY:GetChildren()) do
		if AldyToiY:IsA(AldyToiI2(26610)) then
			local AldyToiw, AldyToio = pcall(require, AldyToiY);
			if AldyToiw and (type(AldyToio) == "\116\097\098\108\101" and (AldyToio.Data and type(AldyToio.Data[AldyToiI2(26746)]) == AldyToiI2(26803))) then
				local AldyToiw = AldyToio.Data[AldyToiI2(26746)];
				local AldyToig = (AldyToiw:gsub("\037\115\042\037\098\040\041", "")):gsub("\094\037\115\042\040\046-\041\037\115\042\036", AldyToiI2(26781));
				if string.lower(AldyToig) == AldyToiN or string[AldyToiI2(26415)](AldyToiw) == AldyToiN then
					return AldyToiY;
				end;
			end;
		end;
	end;
	return nil;
end;
local function AldyToiaC(AldyToiw, AldyToiY)
	if AldyToiw:FindFirstChild("\083\101\108\108\080\114\105\099\101\076\097\098\101\108") then
		AldyToiw[AldyToiI2(26880)].Text = "\036 " .. tostring(AldyToiY);
		return;
	end;
	local AldyToio = Instance[AldyToiI2(26421)](AldyToiI2(26743));
	AldyToio.Name = AldyToiI2(26880);
	AldyToio[AldyToiI2(26798)] = AldyToiI2(26459) .. tostring(AldyToiY);
	AldyToio[AldyToiI2(26938)] = UDim2[AldyToiI2(26421)](1, 0, 0, 24);
	AldyToio.Position = UDim2[AldyToiI2(26421)](0, 0, 0, AldyToiw[AldyToiI2(26437)][AldyToiI2(26832)][AldyToiI2(26571)] + 2);
	AldyToio[AldyToiI2(26646)] = 1;
	AldyToio.TextColor3 = Color3[AldyToiI2(26385)](255, 215, 0);
	AldyToio[AldyToiI2(26507)] = Enum.Font.GothamBold;
	AldyToio[AldyToiI2(26732)] = true;
	AldyToio[AldyToiI2(26686)] = AldyToiw;
	local AldyToiN = Instance[AldyToiI2(26421)](AldyToiI2(26922));
	AldyToiN.Thickness = 2;
	AldyToiN[AldyToiI2(26443)] = Color3.fromRGB(0, 0, 0);
	AldyToiN.ApplyStrokeMode = Enum.ApplyStrokeMode.Contextual;
	AldyToiN[AldyToiI2(26686)] = AldyToio;
end;
local AldyToipC = {};
(getgenv()).Tabs.Buy_Weather:CreateDropdown({
	[AldyToiI2(26746)] = AldyToiI2(26635),
	[AldyToiI2(26741)] = (function()
		local AldyToiw = {};
		for AldyToiY, AldyToio in ipairs((getgenv()).weathersNoShark) do
			table[AldyToiI2(26418)](AldyToiw, AldyToio[AldyToiI2(26746)]);
		end;
		return AldyToiw;
	end)(),
	MultipleOptions = true,
	CurrentOption = {},
	Callback = function(AldyToiw)
		AldyToipC = AldyToiw;
	end,
});
local function AldyToiqC(AldyToiw)
	task.spawn(function()
		while (getgenv())[AldyToiI2(26816)].autoBuyWeather do
			if #AldyToipC == 0 then
				task[AldyToiI2(26554)](1);
			else
				for AldyToiw, AldyToiY in ipairs(AldyToipC) do
					pcall(function()
						AldyToiD.Packages._Index[AldyToiI2(26422)].net[AldyToiI2(26454)]:InvokeServer(AldyToiY);
					end);
					task[AldyToiI2(26554)](.1);
				end;
				task.wait(.5);
			end;
			task.wait(200);
		end;
	end);
end;
(getgenv()).Tabs.Buy_Weather:CreateToggle({
	Name = "\240\159\140\128 \065\117\116\111 \066\117\121 \083\101\108\101\099\116\101\100 \087\101\097\116\104\101\114\040\115\041",
	[AldyToiI2(26939)] = false,
	Flag = AldyToiI2(26522),
	Callback = function(AldyToiw)
		(getgenv()).toggleState[AldyToiI2(26649)] = AldyToiw;
		if AldyToiw then
			if #AldyToipC == 0 then
				AldyToih:Notify({ Title = AldyToiI2(26483), [AldyToiI2(26992)] = AldyToiI2(26861), Duration = 1 });
			else
				AldyToih:Notify({ [AldyToiI2(26694)] = "\065\117\116\111 \087\101\097\116\104\101\114", [AldyToiI2(26992)] = AldyToiI2(26407), [AldyToiI2(26961)] = 1 });
			end;
			AldyToiqC(true);
		else
			AldyToiqC(false);
			(getgenv())[AldyToiI2(26816)][AldyToiI2(26649)] = false;
			AldyToih:Notify({ Title = AldyToiI2(26483), [AldyToiI2(26992)] = "\083\116\111\112\112\101\100 \065\117\116\111 \066\117\121\105\110\103", [AldyToiI2(26961)] = 1 });
		end;
	end,
});
for AldyToiw, AldyToiY in ipairs((getgenv()).weathers) do
	(getgenv()).Tabs.Buy_Weather:CreateButton({ [AldyToiI2(26746)] = AldyToiY[AldyToiI2(26746)] .. AldyToiI2(26928), Callback = function()
			pcall(function()
				AldyToiD[AldyToiI2(26881)][AldyToiI2(26478)][AldyToiI2(26422)].net[AldyToiI2(26454)]:InvokeServer(AldyToiY.Name);
			end);
		end });
end;
(getgenv()).ShowPriceToggle = (getgenv()).Tabs.AutoSellTab:CreateToggle({
		Name = AldyToiI2(26712),
		CurrentValue = false,
		Flag = "\112\114\105\099\101\086\097\108\117\101",
		[AldyToiI2(26986)] = function(AldyToiw)
			(getgenv())[AldyToiI2(26816)].priceValue = AldyToiw;
			if AldyToiw then
				AldyToih:Notify({ [AldyToiI2(26694)] = AldyToiI2(26395), Content = "\072\097\114\103\097 \073\107\097\110 \100\105 \073\110\118\101\110\116\111\114\121 \097\107\097\110 \100\105\116\097\109\112\105\108\107\097\110 \100\105 \098\097\119\097\104 \110\097\109\097 \105\107\097\110", [AldyToiI2(26961)] = 1 });
			end;
		end,
	});
(getgenv()).Tabs[AldyToiI2(26410)]:CreateParagraph({ Title = AldyToiI2(26604), Content = "\070\105\115\104 \119\105\108\108 \098\101 \115\111\108\100 \097\117\116\111\109\097\116\105\099\097\108\108\121 \111\110\099\101 \116\104\101 \110\117\109\098\101\114 \111\102 \115\117\099\099\101\115\115\102\117\108\108\121 \099\097\117\103\104\116 \102\105\115\104 \114\101\097\099\104\101\115 \116\104\101 \105\110\112\117\116 \116\104\114\101\115\104\111\108\100\046" });
(getgenv()).AutoSellToggle = (getgenv())[AldyToiI2(26724)].AutoSellTab:CreateToggle({
		Name = AldyToiI2(26790),
		[AldyToiI2(26939)] = false,
		[AldyToiI2(26655)] = AldyToiI2(26923),
		[AldyToiI2(26986)] = function(AldyToiw)
			(getgenv())[AldyToiI2(26816)].AutoSell = AldyToiw;
		end,
	});
(getgenv())[AldyToiI2(26724)].AutoSellTab:CreateInput({
	Name = AldyToiI2(26971),
	[AldyToiI2(26485)] = AldyToiI2(26870),
	[AldyToiI2(26655)] = "\065\117\116\111\083\101\108\108\084\104\114\101\115\104\111\108\100",
	RemoveTextAfterFocusLost = false,
	Callback = function(AldyToiw)
		local AldyToiY = tonumber(AldyToiw);
		if AldyToiY then
			AldyToiO = AldyToiY;
			AldyToih:Notify({ [AldyToiI2(26694)] = AldyToiI2(26480), Content = "\073\107\097\110 \097\107\097\110 \100\105\106\117\097\108 \111\116\111\109\097\116\105\115 \115\097\097\116 \106\117\109\108\097\104 \109\101\110\099\097\112\097\105 " .. AldyToiO, Duration = 1 });
		else
			AldyToih:Notify({ Title = AldyToiI2(26519), Content = AldyToiI2(26676), Duration = 1 });
		end;
	end,
});
(getgenv())[AldyToiI2(26724)].AutoSellTab:CreateParagraph({ [AldyToiI2(26694)] = AldyToiI2(26768), [AldyToiI2(26992)] = AldyToiI2(26979) });
(getgenv())[AldyToiI2(26719)] = (getgenv()).Tabs[AldyToiI2(26410)]:CreateToggle({
		Name = AldyToiI2(26642),
		[AldyToiI2(26939)] = false,
		[AldyToiI2(26655)] = "\065\117\116\111\083\101\108\108\066\080",
		[AldyToiI2(26986)] = function(AldyToiw)
			(getgenv()).toggleState[AldyToiI2(26747)] = AldyToiw;
		end,
	});
(getgenv())[AldyToiI2(26724)].AutoSellTab:CreateInput({
	Name = AldyToiI2(26839),
	[AldyToiI2(26485)] = "\068\101\102\097\117\108\116\058 \053\048\048\048",
	[AldyToiI2(26655)] = AldyToiI2(26558),
	[AldyToiI2(26531)] = false,
	Callback = function(AldyToiw)
		local AldyToiY = tonumber(AldyToiw);
		if AldyToiY then
			AldyToiK4 = AldyToiY;
			AldyToih:Notify({ Title = "\084\104\114\101\115\104\111\108\100 \066\080 \068\105\112\101\114\098\097\114\117\105", [AldyToiI2(26992)] = AldyToiI2(26446) .. AldyToiK4, Duration = 1 });
		else
			AldyToih:Notify({ [AldyToiI2(26694)] = AldyToiI2(26519), Content = "\077\097\115\117\107\107\097\110 \097\110\103\107\097\044 \098\117\107\097\110 \116\101\107\115\046", Duration = 1 });
		end;
	end,
});
(getgenv())[AldyToiI2(26724)][AldyToiI2(26516)]:CreateParagraph({ Title = AldyToiI2(26825), Content = AldyToiI2(26425) });
(getgenv()).MaxRodBaitToggle = (getgenv()).Tabs.PlayerSetTab:CreateToggle({
		Name = AldyToiI2(26811),
		[AldyToiI2(26939)] = false,
		Flag = AldyToiI2(26563),
		[AldyToiI2(26986)] = function(AldyToiw)
			if AldyToiw then
				AldyToioC();
			end;
		end,
	});
local function AldyToiSC(AldyToiw)
	local AldyToiY = AldyToiU[AldyToiI2(26472)]:WaitForChild(AldyToiI2(26826));
	local AldyToio = AldyToiY:WaitForChild(AldyToiI2(26721));
	for AldyToiY, AldyToio in ipairs(AldyToio:GetChildren()) do
		if AldyToio:IsA("\071\117\105\079\098\106\101\099\116") then
			AldyToio.Visible = AldyToiw;
		end;
	end;
end;
(getgenv()).Tabs[AldyToiI2(26516)]:CreateToggle({
	[AldyToiI2(26746)] = "\083\104\111\119 \067\097\117\103\104\116 \078\111\116\105\102\105\099\097\116\105\111\110",
	[AldyToiI2(26939)] = false,
	Flag = "\067\097\117\103\104\116\078\111\116\105\102\105\099\097\116\105\111\110",
	Callback = function(AldyToiw)
		AldyToiSC(AldyToiw);
	end,
});
local AldyToikC = nil;
local function AldyToifC(AldyToiw)
	if AldyToiw then
		local AldyToiw = AldyToio:WaitForChild("\067\104\097\114\097\099\116\101\114\115", 5);
		local AldyToiY = AldyToiw:FindFirstChild(AldyToiN[AldyToiI2(26746)]);
		if not AldyToiY then
			return;
		end;
		local AldyToig = AldyToiY:FindFirstChild(AldyToiI2(26680));
		if not AldyToig then
			return;
		end;
		AldyToikC = Instance[AldyToiI2(26421)]("\080\097\114\116");
		AldyToikC.Anchored = true;
		AldyToikC[AldyToiI2(26938)] = Vector3.new(10, 1, 10);
		AldyToikC[AldyToiI2(26595)] = 1;
		AldyToikC[AldyToiI2(26513)] = true;
		AldyToikC[AldyToiI2(26746)] = AldyToiI2(26950);
		AldyToikC.Parent = AldyToio;
		task[AldyToiI2(26851)](function()
			while AldyToikC and AldyToikC.Parent do
				pcall(function()
					AldyToikC.Position = AldyToig.Position - Vector3[AldyToiI2(26421)](0, 3.5, 0);
				end);
				task.wait(.1);
			end;
		end);
	else
		if AldyToikC then
			AldyToikC:Destroy();
			AldyToikC = nil;
		end;
	end;
end;
(getgenv()).floatToggle = (getgenv()).Tabs.PlayerSetTab:CreateToggle({
		[AldyToiI2(26746)] = "\240\159\140\138 \070\108\111\097\116 \111\110 \087\097\116\101\114",
		[AldyToiI2(26939)] = false,
		[AldyToiI2(26655)] = AldyToiI2(26806),
		Callback = function(AldyToiw)
			AldyToifC(AldyToiw);
		end,
	});
(getgenv())[AldyToiI2(26724)].PlayerSetTab:CreateToggle({
	Name = AldyToiI2(26479),
	CurrentValue = true,
	Flag = AldyToiI2(26505),
	Callback = function(AldyToiw)
		pcall(function()
			AldyToiY:Set3dRenderingEnabled(AldyToiw);
		end);
	end,
});
(getgenv()).toggleAnimation = (getgenv()).Tabs[AldyToiI2(26516)]:CreateToggle({
		Name = "\083\107\105\112 \070\105\115\104\105\110\103 \065\110\105\109\097\116\105\111\110",
		[AldyToiI2(26939)] = false,
		Flag = AldyToiI2(26632),
		Callback = function(AldyToiw)
			(getgenv())[AldyToiI2(26816)].fishingAnimation = AldyToiw;
		end,
	});
(getgenv())[AldyToiI2(26867)] = {
		[AldyToiI2(26831)] = false,
		[AldyToiI2(26473)] = require((game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101"))[AldyToiI2(26913)][AldyToiI2(26473)]),
		OriginalPlay = nil,
		OriginalStop = nil,
	};
local AldyToiLC = { enabled = false, position = nil };
(getgenv())[AldyToiI2(26867)][AldyToiI2(26810)] = function()
		local AldyToiw = (getgenv())[AldyToiI2(26867)];
		if not AldyToiw[AldyToiI2(26935)] then
			AldyToiw.OriginalPlay = AldyToiw.CutsceneController.Play;
		end;
		if not AldyToiw[AldyToiI2(26799)] then
			AldyToiw.OriginalStop = AldyToiw[AldyToiI2(26473)][AldyToiI2(26762)];
		end;
	end;
(getgenv()).Tabs.PlayerSetTab:CreateParagraph({ Title = AldyToiI2(26899), [AldyToiI2(26992)] = AldyToiI2(26648) });
(getgenv())[AldyToiI2(26724)][AldyToiI2(26516)]:CreateToggle({ Name = "\076\111\099\107 \080\108\097\121\101\114 \080\111\115\105\116\105\111\110", [AldyToiI2(26939)] = false, Callback = function(AldyToiw)
		AldyToiLC[AldyToiI2(26664)] = AldyToiw;
		if not AldyToiw then
			AldyToiLC.position = nil;
		elseif (getgenv()).toggleState[AldyToiI2(26750)] and (AldyToiU[AldyToiI2(26785)] and AldyToiU.Character.PrimaryPart) then
			AldyToiLC[AldyToiI2(26932)] = AldyToiU[AldyToiI2(26785)][AldyToiI2(26620)].CFrame;
		end;
	end });
task[AldyToiI2(26851)](function()
	while task.wait() do
		if AldyToiLC.enabled and (AldyToiLC[AldyToiI2(26932)] and (AldyToiU.Character and AldyToiU.Character.PrimaryPart)) then
			AldyToiU.Character[AldyToiI2(26620)][AldyToiI2(26643)] = AldyToiLC.position;
		end;
	end;
end);
(getgenv()).Tabs[AldyToiI2(26516)]:CreateToggle({
	[AldyToiI2(26746)] = "\065\117\116\111 \083\097\118\101 \038 \082\101\115\116\111\114\101 \076\097\115\116 \080\111\115\105\116\105\111\110",
	CurrentValue = false,
	[AldyToiI2(26655)] = "\065\117\116\111\083\097\118\101\080\111\115\105\116\105\111\110",
	Callback = function(AldyToiw)
		(getgenv()).AutoSaveEnabled = AldyToiw;
	end,
});
local AldyToizC = require(AldyToiD.Modules.GuiControl);
(getgenv())[AldyToiI2(26867)][AldyToiI2(26452)] = function()
		local AldyToiw = (getgenv()).CutsceneManager;
		if AldyToiw.Disabled then
			return;
		end;
		AldyToiw[AldyToiI2(26831)] = true;
		AldyToiw[AldyToiI2(26810)]();
		AldyToiw[AldyToiI2(26473)][AldyToiI2(26828)] = function(AldyToiw, ...)
				local AldyToiY = require(AldyToiD[AldyToiI2(26824)][AldyToiI2(26677)]);
				local AldyToio = game:GetService(AldyToiI2(26464));
				local AldyToiN = require(AldyToiD.Controllers.QuestController);
				AldyToiY:SetHUDVisibility(true);
				AldyToio.Enabled = true;
				if AldyToiN:IsEnabled() == false then
					AldyToiN:SetEnabled(true);
				end;
			end;
		AldyToiw[AldyToiI2(26473)].Stop = function(...)
				AldyToiw.OriginalStop(...);
			end;
	end;
(getgenv())[AldyToiI2(26867)][AldyToiI2(26818)] = function()
		local AldyToiw = (getgenv())[AldyToiI2(26867)];
		if not AldyToiw[AldyToiI2(26831)] then
			return;
		end;
		AldyToiw[AldyToiI2(26831)] = false;
		AldyToiw[AldyToiI2(26810)]();
		AldyToiw.CutsceneController[AldyToiI2(26828)] = AldyToiw[AldyToiI2(26935)];
		AldyToiw[AldyToiI2(26473)].Stop = AldyToiw[AldyToiI2(26799)];
	end;
(getgenv())[AldyToiI2(26724)].PlayerSetTab:CreateParagraph({ Title = "\067\117\116\115\099\101\110\101 \097\100\097\108\097\104 \097\110\105\109\097\115\105 \107\101\116\105\107\097 \109\101\110\100\097\112\097\116\107\097\110 \084\105\101\114 \077\121\116\104\105\099 \097\116\097\117 \083\069\067\082\069\084", Content = "\065\107\116\105\102\107\097\110 \116\111\103\103\108\101 \117\110\116\117\107 \109\101\109\097\116\105\107\097\110 \097\110\105\109\097\115\105\047\099\117\116\115\099\101\110\101" });
(getgenv()).Tabs[AldyToiI2(26516)]:CreateToggle({
	Name = "\077\097\116\105\107\097\110 \067\117\116\115\099\101\110\101 \047 \065\110\105\109\097\115\105",
	CurrentValue = false,
	Flag = "\084\111\103\103\108\101\067\117\116\115\099\101\110\101",
	[AldyToiI2(26986)] = function(AldyToiw)
		if AldyToiw then
			(getgenv())[AldyToiI2(26867)][AldyToiI2(26452)]();
		else
			(getgenv()).CutsceneManager[AldyToiI2(26818)]();
		end;
	end,
});
(getgenv())[AldyToiI2(26984)] = (getgenv())[AldyToiI2(26984)] or nil;
(getgenv())[AldyToiI2(26605)] = (getgenv())[AldyToiI2(26605)] or false;
local AldyToihC = false;
(getgenv()).autoMegaHandler = function()
		task[AldyToiI2(26851)](function()
			while task.wait(4) do
				if (getgenv())[AldyToiI2(26605)] then
					local AldyToiw = AldyToio:FindFirstChild("\033\033\033 \077\069\078\085 \082\073\078\071\083");
					local AldyToiY = nil;
					if AldyToiw then
						for AldyToiw, AldyToio in ipairs(AldyToiw:GetChildren()) do
							if AldyToio.Name == "\080\114\111\112\115" then
								local AldyToiw = AldyToio:FindFirstChild("\077\101\103\097\108\111\100\111\110 \072\117\110\116");
								if AldyToiw then
									for AldyToiw, AldyToio in ipairs(AldyToiw:GetChildren()) do
										if AldyToio:IsA(AldyToiI2(26759)) then
											AldyToiY = AldyToio[AldyToiI2(26786)];
											break;
										end;
									end;
								end;
							end;
						end;
					end;
					local AldyToig = AldyToio.Characters:FindFirstChild(AldyToiN.Name);
					local AldyToid = AldyToig and AldyToig:FindFirstChild(AldyToiI2(26680));
					if AldyToiY and AldyToid then
						AldyToifC(true);
						AldyToihC = true;
						local AldyToiw = (AldyToid[AldyToiI2(26786)] - AldyToiY).Magnitude;
						if not (getgenv())[AldyToiI2(26927)] then
							(getgenv()).savedCFrame = AldyToid[AldyToiI2(26643)];
						end;
						if AldyToid.Anchored then
							AldyToid[AldyToiI2(26906)] = false;
							task[AldyToiI2(26554)](.1);
						end;
						if AldyToiw > 75 then
							AldyToid[AldyToiI2(26643)] = CFrame[AldyToiI2(26421)](AldyToiY + Vector3[AldyToiI2(26421)](20, 30, 0));
							if AldyToiLC.enabled then
								AldyToiLC.position = AldyToid.CFrame;
							end;
						end;
						task.wait(1);
						if not (getgenv())[AldyToiI2(26816)][AldyToiI2(26750)] then
							(getgenv()).toggleState[AldyToiI2(26750)] = true;
							(getgenv())[AldyToiI2(26553)]:Set(true);
							(getgenv()).floatToggle:Set(true);
							AldyToinC(true);
						end;
					else
						if (getgenv())[AldyToiI2(26927)] and AldyToid then
							AldyToid.CFrame = (getgenv()).savedCFrame;
							(getgenv()).savedCFrame = nil;
							AldyToihC = false;
						end;
					end;
				end;
			end;
		end);
	end;
(getgenv()).autoMegaHandler();
(getgenv()).Tabs.EventTab:CreateToggle({
	Name = AldyToiI2(26527),
	[AldyToiI2(26939)] = false,
	Flag = "\065\117\116\111\077\101\103\097\108\111\100\111\110",
	[AldyToiI2(26986)] = function(AldyToiw)
		(getgenv())[AldyToiI2(26605)] = AldyToiw;
	end,
});
local AldyToiOC = AldyToiJ:WaitReplion("\069\118\101\110\116\115");
local AldyToitC = {
		"\065\100\109\105\110 - \066\108\097\099\107 \072\111\108\101",
		AldyToiI2(26748),
		AldyToiI2(26958),
		"\065\100\109\105\110 - \083\104\111\099\107\101\100",
		"\071\104\111\115\116 \083\104\097\114\107 \072\117\110\116",
		AldyToiI2(26974),
		"\083\104\097\114\107 \072\117\110\116",
		"\087\111\114\109 \072\117\110\116",
	};
local AldyToiEC = AldyToiU[AldyToiI2(26785)] and (AldyToiU[AldyToiI2(26785)]:FindFirstChild(AldyToiI2(26680)) and AldyToiU[AldyToiI2(26785)].HumanoidRootPart[AldyToiI2(26643)]) or nil;
local AldyToivC = nil;
local AldyToiBC = {};
local AldyToiTC = false;
(getgenv()).EventData = (getgenv()).EventData or {};
(getgenv())[AldyToiI2(26813)][AldyToiI2(26728)] = {};
(getgenv()).EventData.dropdown = nil;
(getgenv())[AldyToiI2(26873)] = function()
		(getgenv())[AldyToiI2(26813)][AldyToiI2(26728)] = {};
		local AldyToiw = nil;
		local AldyToiY = AldyToio:FindFirstChild("\033\033\033 \077\069\078\085 \082\073\078\071\083");
		if AldyToiY then
			for AldyToiw, AldyToiY in ipairs(AldyToiY:GetChildren()) do
				if AldyToiY[AldyToiI2(26746)] == "\080\114\111\112\115" then
					for AldyToiw, AldyToiY in ipairs(AldyToiY:GetChildren()) do
						if AldyToiY:IsA(AldyToiI2(26631)) then
							local AldyToiw = AldyToiY.PrimaryPart or AldyToiY:FindFirstChildWhichIsA(AldyToiI2(26759));
							if AldyToiw and not (string.lower(AldyToiY.Name)):find(AldyToiI2(26900)) then
								table[AldyToiI2(26418)]((getgenv())[AldyToiI2(26813)][AldyToiI2(26728)], { name = AldyToiY[AldyToiI2(26746)], [AldyToiI2(26932)] = AldyToiw.Position });
							end;
						elseif AldyToiY:IsA("\066\097\115\101\080\097\114\116") then
							if not (string[AldyToiI2(26415)](AldyToiY.Name)):find("\103\108\111\119") then
								table.insert((getgenv()).EventData[AldyToiI2(26728)], { [AldyToiI2(26945)] = AldyToiY.Name, [AldyToiI2(26932)] = AldyToiY[AldyToiI2(26786)] });
							end;
						end;
					end;
				end;
			end;
		end;
		local AldyToig = { AldyToiI2(26829) };
		for AldyToiw, AldyToiY in ipairs((getgenv())[AldyToiI2(26813)][AldyToiI2(26728)]) do
			table[AldyToiI2(26418)](AldyToig, AldyToiY.name);
		end;
		if #(getgenv()).EventData[AldyToiI2(26728)] == 0 then
			AldyToig = { "\078\111 \101\118\101\110\116\115 \102\111\117\110\100" };
		end;
		if (getgenv())[AldyToiI2(26813)].dropdown then
			(getgenv()).EventData[AldyToiI2(26548)]:Set(AldyToig);
		else
			(getgenv())[AldyToiI2(26813)][AldyToiI2(26548)] = (getgenv())[AldyToiI2(26724)][AldyToiI2(26695)]:CreateDropdown({
					[AldyToiI2(26746)] = AldyToiI2(26989),
					[AldyToiI2(26741)] = AldyToig,
					[AldyToiI2(26706)] = "\083\101\108\101\099\116 \069\118\101\110\116",
					[AldyToiI2(26411)] = false,
					Callback = function(AldyToiw)
						local AldyToiY = type(AldyToiw) == "\116\097\098\108\101" and AldyToiw[1] or AldyToiw;
						if not AldyToiY or AldyToiY == "\083\101\108\101\099\116 \069\118\101\110\116" or AldyToiY == AldyToiI2(26581) then
							return;
						end;
						for AldyToiw, AldyToig in ipairs((getgenv()).EventData.eventList) do
							if AldyToig.name == AldyToiY then
								local AldyToiw = AldyToio[AldyToiI2(26529)]:FindFirstChild(AldyToiN.Name);
								local AldyToiY = AldyToiw and AldyToiw:FindFirstChild(AldyToiI2(26680));
								if AldyToiY then
									(getgenv())[AldyToiI2(26755)]:Set(true);
									if AldyToiY.Anchored then
										AldyToiY.Anchored = false;
										task.wait(.1);
									end;
									AldyToiY.CFrame = CFrame.new(AldyToig[AldyToiI2(26932)] + Vector3.new(0, 42, 0));
									if AldyToiLC[AldyToiI2(26664)] then
										AldyToiLC[AldyToiI2(26932)] = AldyToiY[AldyToiI2(26643)];
									end;
								else
									AldyToih:Notify({ Title = "\226\157\140 \084\101\108\101\112\111\114\116 \070\097\105\108\101\100", Content = AldyToiI2(26619) .. AldyToig.name, [AldyToiI2(26961)] = 1 });
								end;
								break;
							end;
						end;
					end,
				});
		end;
	end;
(getgenv())[AldyToiI2(26724)].EventTab:CreateButton({ Name = AldyToiI2(26525), [AldyToiI2(26986)] = function()
		(getgenv())[AldyToiI2(26873)]();
		AldyToih:Notify({ [AldyToiI2(26694)] = "\082\101\102\114\101\115\104\101\100", [AldyToiI2(26992)] = "\069\118\101\110\116 \108\105\115\116 \104\097\115 \098\101\101\110 \114\101\102\114\101\115\104\101\100\046", [AldyToiI2(26961)] = 1 });
	end });
(getgenv()).updateEventDropdown();
local AldyToiGC = {
		AldyToiI2(26974),
		"\065\100\109\105\110 \069\118\101\110\116",
		AldyToiI2(26401),
		"\087\111\114\109 \072\117\110\116",
		"\083\104\097\114\107 \072\117\110\116",
		"\071\104\111\115\116 \083\104\097\114\107 \072\117\110\116",
		AldyToiI2(26975),
		AldyToiI2(26896),
		AldyToiI2(26536),
	};
local AldyToiWC = {
		[AldyToiI2(26664)] = false,
		selectedEvents = {},
		originalPosition = nil,
		platform = nil,
		[AldyToiI2(26592)] = false,
		isAtEvent = false,
		[AldyToiI2(26413)] = nil,
	};
local AldyToieC = (getgenv()).Tabs.EventTab:CreateLabel(AldyToiI2(26960));
local function AldyToiVC(AldyToiw)
	local AldyToiY = AldyToio:FindFirstChild("\033\033\033 \077\069\078\085 \082\073\078\071\083");
	if not AldyToiY then
		return nil;
	end;
	local AldyToiN = AldyToiw:lower();
	local AldyToig = nil;
	for AldyToiw, AldyToiY in ipairs(AldyToiY:GetChildren()) do
		if AldyToiY[AldyToiI2(26746)] == AldyToiI2(26815) then
			for AldyToiw, AldyToio in ipairs(AldyToiY:GetChildren()) do
				if AldyToio[AldyToiI2(26746)]:lower() == AldyToiN then
					if AldyToio:IsA("\077\111\100\101\108") then
						local AldyToiw = AldyToio[AldyToiI2(26620)] or AldyToio:FindFirstChildWhichIsA(AldyToiI2(26759));
						if AldyToiw then
							return AldyToiw;
						else
 
						end;
					elseif AldyToio:IsA(AldyToiI2(26759)) then
						return AldyToio;
					end;
				end;
				for AldyToiw, AldyToio in ipairs(AldyToio:GetDescendants()) do
					if AldyToio:IsA("\084\101\120\116\076\097\098\101\108") then
						if AldyToio.Text:lower() == AldyToiN then
							local AldyToiw = AldyToio;
							while AldyToiw and AldyToiw ~= AldyToiY do
								if AldyToiw:IsA(AldyToiI2(26759)) then
									return AldyToiw;
								end;
								AldyToiw = AldyToiw[AldyToiI2(26686)];
							end;
						end;
					end;
				end;
			end;
		end;
	end;
	return nil;
end;
local AldyToicC = (getgenv())[AldyToiI2(26724)].EventTab:CreateDropdown({
		Name = "\083\101\108\101\099\116 \069\118\101\110\116\115",
		[AldyToiI2(26741)] = AldyToiGC,
		[AldyToiI2(26706)] = {},
		[AldyToiI2(26723)] = true,
		Flag = "\069\118\101\110\116\077\117\108\116\105\068\114\111\112\100\111\119\110",
		Callback = function(AldyToiw)
			AldyToiWC.selectedEvents = AldyToiw;
		end,
	});
local AldyToijC = (getgenv()).Tabs.EventTab:CreateToggle({
		[AldyToiI2(26746)] = AldyToiI2(26621),
		CurrentValue = false,
		[AldyToiI2(26655)] = AldyToiI2(26689),
		Callback = function(AldyToiw)
			AldyToiWC[AldyToiI2(26664)] = AldyToiw;
			if not AldyToiw and AldyToiWC[AldyToiI2(26903)] then
				if AldyToiU and (AldyToiU[AldyToiI2(26785)] and (AldyToiU[AldyToiI2(26785)].PrimaryPart and AldyToiWC.originalPosition)) then
					local AldyToiw = AldyToiU[AldyToiI2(26785)].PrimaryPart;
					AldyToiw[AldyToiI2(26643)] = AldyToiWC.originalPosition;
				end;
				AldyToiWC.isAtEvent = false;
				AldyToieC:Set("\087\097\105\116\105\110\103 \102\111\114 \101\118\101\110\116\046\046\046");
			end;
		end,
	});
task[AldyToiI2(26851)](function()
	while task[AldyToiI2(26554)](5) do
		local AldyToiw = AldyToiU[AldyToiI2(26785)].PrimaryPart;
		local AldyToiY = nil;
		for AldyToiw, AldyToio in ipairs(AldyToiWC.selectedEvents) do
			local AldyToiN = AldyToiVC(AldyToio);
			if AldyToiN then
				AldyToiY = AldyToiN;
				AldyToiWC[AldyToiI2(26413)] = AldyToio;
				break;
			end;
		end;
		if AldyToiWC.enabled and (AldyToiY and not AldyToiWC.isAtEvent) then
			AldyToiWC[AldyToiI2(26903)] = true;
			AldyToifC(true);
			(getgenv())[AldyToiI2(26755)]:Set(true);
			if not AldyToiWC[AldyToiI2(26508)] then
				AldyToiWC.originalPosition = AldyToiw.CFrame;
			end;
			if AldyToiw[AldyToiI2(26906)] then
				AldyToiw[AldyToiI2(26906)] = false;
				task[AldyToiI2(26554)](.1);
			end;
			AldyToiw.CFrame = AldyToiY.CFrame * CFrame.new(0, 30, 20);
			if AldyToiLC.enabled then
				AldyToiLC.position = AldyToiw.CFrame;
			end;
			task.wait(.8);
			AldyToieC:Set(AldyToiI2(26657) .. AldyToiWC[AldyToiI2(26413)]);
			if not (getgenv())[AldyToiI2(26816)].bool_autoFish then
				(getgenv()).toggleState.bool_autoFish = true;
				(getgenv())[AldyToiI2(26553)]:Set(true);
				(getgenv()).floatToggle:Set(true);
				AldyToinC(true);
			end;
		elseif not AldyToiY and AldyToiWC.isAtEvent then
			AldyToiw.CFrame = AldyToiWC[AldyToiI2(26508)];
			AldyToiWC[AldyToiI2(26903)] = false;
			AldyToieC:Set(AldyToiI2(26960));
		end;
	end;
end);
local AldyToiCC = (getgenv()).Tabs.PlayerSetTab:CreateToggle({
		[AldyToiI2(26746)] = "\065\117\116\111\065\099\099\101\112\116\084\114\097\100\101",
		CurrentValue = false,
		Flag = "\065\117\116\111\065\099\099\101\112\116\084\114\097\100\101\084\111\103\103\108\101",
		[AldyToiI2(26986)] = function(AldyToiw)
			if AldyToiw then
				AldyToib4(true);
				AldyToim4();
			else
				AldyToib4(false);
			end;
		end,
	});
(getgenv())[AldyToiI2(26988)] = hookmetamethod(game, AldyToiI2(26776), newcclosure(function(AldyToiw, ...)
		local AldyToiY = getnamecallmethod();
		local AldyToio = { ... };
		if AldyToiY == AldyToiI2(26441) and tostring(AldyToiw) == AldyToiI2(26707) then
			return nil;
		end;
		return (getgenv()).oldNamecall(AldyToiw, unpack(AldyToio));
	end));
(getgenv())[AldyToiI2(26724)][AldyToiI2(26516)]:CreateToggle({
	[AldyToiI2(26746)] = "\070\105\115\104\105\110\103 \082\097\100\097\114",
	[AldyToiI2(26939)] = false,
	[AldyToiI2(26655)] = AldyToiI2(26908),
	[AldyToiI2(26986)] = function(AldyToiw)
		local AldyToiY = require(AldyToiD.Packages.Net);
		local AldyToio = AldyToiY:RemoteFunction("\085\112\100\097\116\101\070\105\115\104\105\110\103\082\097\100\097\114");
		AldyToio:InvokeServer(AldyToiw);
	end,
});
(getgenv())[AldyToiI2(26793)] = (getgenv())[AldyToiI2(26793)] or false;
(getgenv())[AldyToiI2(26650)] = (getgenv())[AldyToiI2(26650)] or {};
local function AldyToiyC()
	local AldyToiw = {};
	for AldyToiY, AldyToio in ipairs(AldyToio:GetChildren()) do
		if string.find(AldyToio.Name:lower(), AldyToiI2(26722)) then
			table.insert(AldyToiw, AldyToio);
		end;
	end;
	return AldyToiw;
end;
local AldyToiiC = {};
(getgenv()).Tabs[AldyToiI2(26516)]:CreateToggle({ Name = AldyToiI2(26956), [AldyToiI2(26939)] = false, Callback = function(AldyToiw)
		(getgenv()).toggleState.infJump = AldyToiw;
	end });
AldyToig.JumpRequest:Connect(function()
	if (getgenv()).toggleState[AldyToiI2(26461)] and (AldyToiN[AldyToiI2(26785)] and AldyToiN[AldyToiI2(26785)]:FindFirstChildOfClass("\072\117\109\097\110\111\105\100")) then
		(AldyToiN.Character:FindFirstChildOfClass("\072\117\109\097\110\111\105\100")):ChangeState("\074\117\109\112\105\110\103");
	end;
end);
(getgenv()).Tabs.PlayerSetTab:CreateSlider({
	[AldyToiI2(26746)] = AldyToiI2(26637),
	[AldyToiI2(26397)] = { 15, 500 },
	Increment = 5,
	[AldyToiI2(26939)] = 15,
	Callback = function(AldyToiw)
		local AldyToiY = AldyToiN.Character and AldyToiN[AldyToiI2(26785)]:FindFirstChildOfClass(AldyToiI2(26607));
		if AldyToiY then
			AldyToiY[AldyToiI2(26458)] = AldyToiw;
		end;
	end,
});
(getgenv())[AldyToiI2(26660)] = (getgenv())[AldyToiI2(26660)] or {
		["\048\049"] = { [AldyToiI2(26945)] = AldyToiI2(26965), position = Vector3[AldyToiI2(26421)](1014.896, 20.921, 5071.434) },
		["\048\050"] = { [AldyToiI2(26945)] = AldyToiI2(26486), position = Vector3.new(-3598.539, -279.646, -1634.287) },
		["\048\051"] = { name = "\076\111\115\116 \083\104\111\114\101", [AldyToiI2(26932)] = Vector3[AldyToiI2(26421)](-3677, 107, -912) },
		["\048\052"] = { [AldyToiI2(26945)] = "\070\105\115\104\101\114\109\097\110 \073\115\108\097\110\100", position = Vector3.new(-2.382, 4.5, 2839.47) },
		[AldyToiI2(26918)] = { [AldyToiI2(26945)] = "\084\114\111\112\105\099\097\108 \071\114\111\118\101", position = Vector3.new(-2051.413, 6.268, 3662) },
		["\048\054"] = { name = AldyToiI2(26756), position = Vector3[AldyToiI2(26421)](3209.068, -1302.855, 1411.844) },
		[AldyToiI2(26761)] = { [AldyToiI2(26945)] = AldyToiI2(26412), position = Vector3.new(2031.415, 27.397, 1394.621) },
		["\048\056"] = { name = AldyToiI2(26640), [AldyToiI2(26932)] = Vector3.new(-678.811, 4.935, 708.578) },
		["\048\057"] = { name = "\075\111\104\097\110\097 \086\111\108\099\097\110\111", [AldyToiI2(26932)] = Vector3.new(-516.92, 22, 191) },
		["\049\048"] = { [AldyToiI2(26945)] = AldyToiI2(26897), [AldyToiI2(26932)] = Vector3.new(-3667.556, -135.574, -900.99) },
		[AldyToiI2(26895)] = { [AldyToiI2(26945)] = "\087\101\097\116\104\101\114 \077\097\099\104\105\110\101", [AldyToiI2(26932)] = Vector3.new(-1471, -3, 1929) },
		["\049\050"] = { [AldyToiI2(26945)] = AldyToiI2(26403), position = Vector3[AldyToiI2(26421)](1611, 4, 3280) },
		["\049\051"] = { [AldyToiI2(26945)] = "\067\111\114\097\108 \082\101\101\102\115", [AldyToiI2(26932)] = Vector3[AldyToiI2(26421)](-2949.694, 63.25, 2248.52) },
	};
for AldyToiw, AldyToiY in pairs((getgenv())[AldyToiI2(26660)]) do
	(getgenv()).Tabs[AldyToiI2(26837)]:CreateButton({ [AldyToiI2(26746)] = AldyToiY[AldyToiI2(26945)], [AldyToiI2(26986)] = function()
			local AldyToiw = AldyToio.Characters:FindFirstChild(AldyToiN.Name);
			local AldyToig = AldyToiw and AldyToiw:FindFirstChild(AldyToiI2(26680));
			if AldyToig then
				AldyToig[AldyToiI2(26643)] = CFrame[AldyToiI2(26421)](AldyToiY[AldyToiI2(26932)] + Vector3.new(5, 5, 0));
				AldyToih:Notify({ Title = AldyToiI2(26944), Content = "\084\101\108\101\112\111\114\116\101\100 \116\111 " .. AldyToiY.name, [AldyToiI2(26961)] = 1 });
			else
				AldyToih:Notify({ Title = "\084\101\108\101\112\111\114\116 \070\097\105\108\101\100", [AldyToiI2(26992)] = "\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116 \110\111\116 \102\111\117\110\100\033", [AldyToiI2(26961)] = 1 });
			end;
		end });
end;
local AldyToiQC = AldyToiD:WaitForChild("\078\080\067");
(getgenv()).Tabs.IslandsTab:CreateSection("\084\101\108\101\112\111\114\116 \084\111 \078\112\099");
for AldyToiw, AldyToiY in ipairs(AldyToiQC:GetChildren()) do
	(getgenv()).Tabs.IslandsTab:CreateButton({ [AldyToiI2(26746)] = "\084\101\108\101\112\111\114\116 \116\111 \078\080\067\058 " .. AldyToiY[AldyToiI2(26746)], Callback = function()
			local AldyToiw = AldyToiN.Character;
			local AldyToio = AldyToiw and AldyToiw:FindFirstChild(AldyToiI2(26680));
			if not AldyToio then
				AldyToih:Notify({ [AldyToiI2(26694)] = "\226\157\140 \084\101\108\101\112\111\114\116 \070\097\105\108\101\100", [AldyToiI2(26992)] = AldyToiI2(26387), Duration = 1 });
				return;
			end;
			local AldyToig, AldyToid = pcall(function()
					return AldyToiY:GetPivot();
				end);
			if AldyToig and typeof(AldyToid) == AldyToiI2(26643) then
				local AldyToiw = AldyToid[AldyToiI2(26603)];
				local AldyToiN = Vector3.new(0, 5, 0) + AldyToiw * 5;
				AldyToio[AldyToiI2(26643)] = AldyToid + AldyToiN;
				AldyToih:Notify({ [AldyToiI2(26694)] = "\226\156\133 \084\101\108\101\112\111\114\116 \083\117\099\099\101\115\115", Content = "\084\101\108\101\112\111\114\116\101\100 \116\111 \078\080\067\058 " .. AldyToiY.Name, [AldyToiI2(26961)] = 1 });
			else
				AldyToih:Notify({ Title = "\226\157\140 \084\101\108\101\112\111\114\116 \070\097\105\108\101\100", Content = "\087\111\114\108\100\080\105\118\111\116 \110\111\116 \097\118\097\105\108\097\098\108\101 \102\111\114 \078\080\067\058 " .. AldyToiY.Name, [AldyToiI2(26961)] = 1 });
			end;
		end });
end;
local AldyToiFC = (getgenv())[AldyToiI2(26724)].SettingsTab:CreateParagraph({ Title = "\083\101\114\118\101\114 \073\110\102\111", Content = "\080\108\097\121\101\114\115 \105\110 \115\101\114\118\101\114\058 " .. (#AldyToiw:GetPlayers() .. ("\n\080\108\097\099\101\073\100\058 " .. game.PlaceId)) });
local AldyToisC = 0;
local function AldyToiIC()
	AldyToisC = 0;
	for AldyToiw, AldyToiY in ipairs(AldyToiJC:GetChildren()) do
		if AldyToiY:FindFirstChild("\073\116\101\109\078\097\109\101") then
			local AldyToiw = AldyToiY[AldyToiI2(26437)][AldyToiI2(26798)];
			local AldyToio = AldyToiKC(AldyToiw);
			if AldyToio then
				local AldyToiw, AldyToiN = pcall(require, AldyToio);
				if AldyToiw and (AldyToiN and (AldyToiN.Data and AldyToiN.SellPrice)) then
					AldyToiaC(AldyToiY, AldyToiN[AldyToiI2(26866)]);
				end;
				if AldyToiN and (AldyToiN.SellPrice and AldyToiN[AldyToiI2(26754)].Type == "\070\105\115\104\101\115") then
					AldyToisC = AldyToisC + AldyToiN.SellPrice;
				end;
			end;
		end;
	end;
	local AldyToiw = (game:GetService("\080\108\097\121\101\114\115")).LocalPlayer;
	local AldyToiY = (AldyToiw:WaitForChild(AldyToiI2(26472))):WaitForChild(AldyToiI2(26652));
	local AldyToio = AldyToiY:WaitForChild("\077\097\105\110");
	local AldyToiN = AldyToio:WaitForChild("\083\101\108\108\065\108\108");
	local AldyToig = AldyToiN:WaitForChild("\076\097\098\101\108");
	AldyToig.Text = AldyToisC;
end;
if (getgenv()).toggleState.priceValue then
	AldyToiIC();
end;
(getgenv())[AldyToiI2(26724)].SettingsTab:CreateButton({ [AldyToiI2(26746)] = AldyToiI2(26675), Callback = function()
		local AldyToiw = string[AldyToiI2(26914)](AldyToiI2(26820), game.PlaceId, game[AldyToiI2(26386)]);
		setclipboard(AldyToiw);
		AldyToih:Notify({ Title = "\076\105\110\107 \083\101\114\118\101\114 \071\097\109\101", [AldyToiI2(26992)] = "\076\105\110\107 \115\117\100\097\104 \100\105\099\111\112\121 \107\101 \099\108\105\112\098\111\097\114\100\046", [AldyToiI2(26961)] = 1 });
	end });
local AldyToixC = nil;
local AldyToiRC = (getgenv())[AldyToiI2(26724)].SettingsTab:CreateInput({
		Name = "\083\101\114\118\101\114 \076\105\110\107",
		PlaceholderText = AldyToiI2(26962),
		RemoveTextAfterFocusLost = false,
		[AldyToiI2(26986)] = function(AldyToiw)
			AldyToixC = AldyToiw;
		end,
	});
(getgenv()).Tabs.SettingsTab:CreateButton({ [AldyToiI2(26746)] = "\074\111\105\110 \076\105\110\107", [AldyToiI2(26986)] = function()
		local AldyToiw = AldyToixC;
		if not AldyToiw or AldyToiw == AldyToiI2(26766) then
			warn("\076\105\110\107 \107\111\115\111\110\103\033");
			return;
		end;
		if AldyToiw:find("\112\108\097\099\101\073\100\061") and AldyToiw:find("\103\097\109\101\073\110\115\116\097\110\099\101\073\100\061") then
			local AldyToiY = AldyToiw:match("\112\108\097\099\101\073\100\061\040\037\100\043\041");
			local AldyToio = AldyToiw:match(AldyToiI2(26440));
			if not AldyToiY or not AldyToio then
				AldyToih:Notify({ [AldyToiI2(26694)] = AldyToiI2(26396), [AldyToiI2(26992)] = "\071\097\103\097\108 \112\097\114\115\105\110\103 \112\108\097\099\101\073\100 \047 \103\097\109\101\073\110\115\116\097\110\099\101\073\100", Duration = 2 });
				return;
			end;
			AldyToiY = tonumber(AldyToiY);
			local AldyToig, AldyToid = pcall(function()
					AldyToim:TeleportToPlaceInstance(AldyToiY, AldyToio, AldyToiN);
				end);
			if not AldyToig then
				AldyToih:Notify({ [AldyToiI2(26694)] = "\084\101\108\101\112\111\114\116 \070\097\105\108\101\100", Content = tostring(AldyToid), Duration = 2 });
			end;
		elseif AldyToiw:find(AldyToiI2(26682)) then
			local AldyToiY = AldyToiw:match(AldyToiI2(26602));
			local AldyToio = game[AldyToiI2(26891)];
			if not AldyToiY then
				AldyToih:Notify({ Title = "\069\114\114\111\114", Content = "\080\114\105\118\097\116\101 \115\101\114\118\101\114 \099\111\100\101 \116\105\100\097\107 \100\105\116\101\109\117\107\097\110", Duration = 2 });
				return;
			end;
			local AldyToig, AldyToid = pcall(function()
					AldyToim:TeleportToPrivateServer(AldyToio, AldyToiY, { AldyToiN });
				end);
			if not AldyToig then
				AldyToih:Notify({ [AldyToiI2(26694)] = AldyToiI2(26791), Content = tostring(AldyToid), Duration = 2 });
			end;
		else
			AldyToih:Notify({ Title = "\069\114\114\111\114", Content = AldyToiI2(26538), [AldyToiI2(26961)] = 2 });
		end;
	end });
task[AldyToiI2(26851)](function()
	while task.wait(40) do
		AldyToiFC:Set({ Title = "\083\101\114\118\101\114 \073\110\102\111", Content = AldyToiI2(26671) .. (#AldyToiw:GetPlayers() .. ("\n\080\108\097\099\101\073\100\058 " .. game[AldyToiI2(26891)])) });
	end;
end);
local AldyToilC = {};
local function AldyToiPC()
	AldyToilC.Terrain = { WaterWaveSize = workspace.Terrain.WaterWaveSize, WaterWaveSpeed = workspace[AldyToiI2(26601)][AldyToiI2(26838)], WaterReflectance = workspace[AldyToiI2(26601)].WaterReflectance };
	AldyToilC[AldyToiI2(26865)] = {};
	AldyToilC.Decals = {};
	AldyToilC.Meshes = {};
	for AldyToiw, AldyToiY in pairs(game:GetDescendants()) do
		if AldyToiY:IsA(AldyToiI2(26759)) then
			AldyToilC[AldyToiI2(26865)][AldyToiY] = {
					[AldyToiI2(26443)] = AldyToiY[AldyToiI2(26443)],
					Material = AldyToiY[AldyToiI2(26518)],
					Reflectance = AldyToiY.Reflectance,
					[AldyToiI2(26780)] = AldyToiY.CastShadow,
					[AldyToiI2(26595)] = AldyToiY.Transparency,
				};
		elseif AldyToiY:IsA(AldyToiI2(26501)) or AldyToiY:IsA(AldyToiI2(26948)) then
			AldyToilC.Decals[AldyToiY] = { [AldyToiI2(26595)] = AldyToiY.Transparency, Texture = AldyToiY[AldyToiI2(26948)] };
		elseif AldyToiY:IsA(AldyToiI2(26495)) then
			AldyToilC[AldyToiI2(26827)][AldyToiY] = { TextureId = AldyToiY.TextureId };
		end;
	end;
end;
local function AldyToiHC()
	AldyToiPC();
	local AldyToiw = workspace.Terrain;
	local AldyToiY = (game:GetService("\080\108\097\121\101\114\115")).LocalPlayer;
	if sethiddenproperty then
		sethiddenproperty(AldyToiw, "\087\097\116\101\114\087\097\118\101\083\105\122\101", 0);
		sethiddenproperty(AldyToiw, "\087\097\116\101\114\087\097\118\101\083\112\101\101\100", 0);
		sethiddenproperty(AldyToiw, "\087\097\116\101\114\082\101\102\108\101\099\116\097\110\099\101", 0);
	else
		AldyToiw[AldyToiI2(26639)] = 0;
		AldyToiw.WaterWaveSpeed = 0;
		AldyToiw.WaterReflectance = 0;
	end;
	for AldyToiw, AldyToio in pairs(game:GetDescendants()) do
		if AldyToio:IsA(AldyToiI2(26759)) then
			if not (AldyToiY and AldyToio:IsDescendantOf(AldyToiY[AldyToiI2(26785)])) then
				AldyToio[AldyToiI2(26518)] = Enum[AldyToiI2(26518)].SmoothPlastic;
				AldyToio.Color = Color3[AldyToiI2(26385)](120, 120, 120);
				AldyToio[AldyToiI2(26477)] = 0;
				AldyToio[AldyToiI2(26780)] = false;
			end;
		elseif AldyToio:IsA("\068\101\099\097\108") or AldyToio:IsA(AldyToiI2(26948)) then
			if not (AldyToio.Name == "\102\097\099\101" and AldyToio[AldyToiI2(26686)]:IsA("\072\101\097\100")) then
				AldyToio[AldyToiI2(26595)] = 1;
				AldyToio[AldyToiI2(26948)] = "";
			end;
		elseif AldyToio:IsA("\080\097\114\116\105\099\108\101\069\109\105\116\116\101\114") or AldyToio:IsA(AldyToiI2(26647)) or AldyToio:IsA("\066\101\097\109") then
			AldyToio[AldyToiI2(26678)] = false;
		elseif AldyToio:IsA("\083\117\114\102\097\099\101\065\112\112\101\097\114\097\110\099\101") then
			AldyToio:Destroy();
		elseif AldyToio:IsA(AldyToiI2(26495)) then
			AldyToio[AldyToiI2(26821)] = "";
		end;
	end;
	(settings()).Rendering.MeshPartDetailLevel = Enum[AldyToiI2(26442)].Level01;
	(settings()).Rendering[AldyToiI2(26862)] = Enum.QualityLevel[AldyToiI2(26876)];
end;
local function AldyToiXC()
	local AldyToiw = workspace.Terrain;
	if AldyToilC[AldyToiI2(26601)] then
		AldyToiw[AldyToiI2(26639)] = AldyToilC.Terrain[AldyToiI2(26639)];
		AldyToiw[AldyToiI2(26838)] = AldyToilC.Terrain.WaterWaveSpeed;
		AldyToiw[AldyToiI2(26844)] = AldyToilC.Terrain.WaterReflectance;
	end;
	for AldyToiw, AldyToiY in pairs(AldyToilC.Parts) do
		if AldyToiw and AldyToiw.Parent then
			for AldyToiY, AldyToio in pairs(AldyToiY) do
				AldyToiw[AldyToiY] = AldyToio;
			end;
		end;
	end;
	for AldyToiw, AldyToiY in pairs(AldyToilC[AldyToiI2(26583)]) do
		if AldyToiw and AldyToiw[AldyToiI2(26686)] then
			for AldyToiY, AldyToio in pairs(AldyToiY) do
				AldyToiw[AldyToiY] = AldyToio;
			end;
		end;
	end;
	for AldyToiw, AldyToiY in pairs(AldyToilC[AldyToiI2(26827)]) do
		if AldyToiw and AldyToiw.Parent then
			for AldyToiY, AldyToio in pairs(AldyToiY) do
				AldyToiw[AldyToiY] = AldyToio;
			end;
		end;
	end;
end;
local function AldyToiAC()
	local AldyToiw = game:GetService(AldyToiI2(26618));
	AldyToiw[AldyToiI2(26627)] = 0;
	AldyToiw.Brightness = .5;
	AldyToiw.OutdoorAmbient = Color3.fromRGB(10, 10, 10);
	AldyToiw[AldyToiI2(26393)] = Color3[AldyToiI2(26385)](5, 5, 5);
	AldyToiw.FogStart = 0;
	AldyToiw[AldyToiI2(26673)] = 100000;
	AldyToiw:ClearAllChildren();
	local AldyToiY = Instance[AldyToiI2(26421)]("\083\107\121");
	AldyToiY[AldyToiI2(26600)] = "";
	AldyToiY[AldyToiI2(26858)] = AldyToiI2(26766);
	AldyToiY[AldyToiI2(26802)] = AldyToiI2(26766);
	AldyToiY[AldyToiI2(26598)] = AldyToiI2(26766);
	AldyToiY.SkyboxRt = AldyToiI2(26766);
	AldyToiY[AldyToiI2(26735)] = AldyToiI2(26766);
	AldyToiY.SunAngularSize = 0;
	AldyToiY[AldyToiI2(26778)] = 0;
	AldyToiY.StarCount = 0;
	AldyToiY.Parent = AldyToiw;
end;
local AldyToiZC = false;
(getgenv())[AldyToiI2(26724)][AldyToiI2(26738)]:CreateToggle({
	Name = "\068\097\114\107 \047 \078\105\103\104\116 \077\111\100\101",
	CurrentValue = false,
	Flag = "\115\101\116\078\105\103\104\116\084\111\103\103\108\101",
	[AldyToiI2(26986)] = function(AldyToiw)
		AldyToiZC = AldyToiw;
	end,
});
AldyToiY.RenderStepped:Connect(function()
	if AldyToiZC then
		AldyToiAC();
	end;
end);
(getgenv())[AldyToiI2(26724)][AldyToiI2(26738)]:CreateToggle({
	Name = AldyToiI2(26883),
	[AldyToiI2(26939)] = false,
	Flag = "\076\111\119\084\101\120\116\117\114\101\084\111\103\103\108\101",
	Callback = function(AldyToiw)
		if AldyToiw then
			AldyToiHC();
		else
			AldyToiXC();
		end;
	end,
});
(getgenv()).antiAfkEnabled = (getgenv())[AldyToiI2(26911)] or true;
(getgenv())[AldyToiI2(26720)] = (getgenv())[AldyToiI2(26720)] or nil;
local AldyToiMC = game:GetService("\086\105\114\116\117\097\108\085\115\101\114");
AldyToiw.LocalPlayer[AldyToiI2(26917)]:Connect(function()
	AldyToiMC:Button2Down(Vector2.new(0, 0), AldyToio.CurrentCamera.CFrame);
	task.wait(1);
	AldyToiMC:Button2Up(Vector2.new(0, 0), AldyToio[AldyToiI2(26524)].CFrame);
end);
if AldyToiU and AldyToiMC then
	AldyToiU[AldyToiI2(26917)]:Connect(function()
		AldyToiMC:CaptureController();
		AldyToiMC:ClickButton2(Vector2[AldyToiI2(26421)]());
	end);
end;
(getgenv())[AldyToiI2(26724)].SettingsTab:CreateButton({ [AldyToiI2(26746)] = AldyToiI2(26963), Callback = function()
		AldyToim:Teleport(game[AldyToiI2(26891)], AldyToiN);
	end });
local AldyToiw2 = 2;
(getgenv()).Tabs[AldyToiI2(26738)]:CreateInput({
	Name = "\077\105\110\105\109\117\109 \080\108\097\121\101\114\115 \116\111 \074\111\105\110",
	PlaceholderText = AldyToiI2(26654),
	RemoveTextAfterFocusLost = true,
	Callback = function(AldyToiw)
		local AldyToiY = tonumber(AldyToiw);
		if AldyToiY and AldyToiY >= 0 then
			AldyToiw2 = AldyToiY;
			AldyToih:Notify({ Title = AldyToiI2(26834), [AldyToiI2(26992)] = "\077\105\110\105\109\117\109 \112\108\097\121\101\114\115 \115\101\116 \116\111 " .. AldyToiY, Duration = 1 });
		else
			AldyToih:Notify({ [AldyToiI2(26694)] = AldyToiI2(26985), Content = "\080\108\101\097\115\101 \101\110\116\101\114 \097 \118\097\108\105\100 \110\117\109\098\101\114\046", Duration = 1 });
		end;
	end,
});
(getgenv()).Tabs.SettingsTab:CreateButton({ Name = "\240\159\140\144 \083\101\114\118\101\114 \072\111\112 \040\074\111\105\110 \082\097\110\100\111\109 \083\101\114\118\101\114\041", Callback = function()
		AldyToih:Notify({ Title = AldyToiI2(26904), [AldyToiI2(26992)] = AldyToiI2(26812), [AldyToiI2(26961)] = 2 });
		local AldyToiw = {};
		local AldyToiY = "";
		repeat
			local AldyToio = "\104\116\116\112\115\058\047\047\103\097\109\101\115\046\114\111\098\108\111\120\046\099\111\109\047\118\049\047\103\097\109\101\115\047" .. (game.PlaceId .. ("\047\115\101\114\118\101\114\115\047\080\117\098\108\105\099\063\115\111\114\116\079\114\100\101\114\061\065\115\099\038\108\105\109\105\116\061\049\048\048" .. (AldyToiY ~= AldyToiI2(26766) and "\038\099\117\114\115\111\114\061" .. AldyToiY or AldyToiI2(26766))));
			local AldyToiN, AldyToig = pcall(function()
					return AldyToid:JSONDecode(game:HttpGet(AldyToio));
				end);
			if AldyToiN and (AldyToig and AldyToig.data) then
				for AldyToiY, AldyToio in ipairs(AldyToig.data) do
					if AldyToio[AldyToiI2(26431)] < AldyToio.maxPlayers and (AldyToio.id ~= game[AldyToiI2(26386)] and AldyToio[AldyToiI2(26431)] > AldyToiw2) then
						table.insert(AldyToiw, AldyToio[AldyToiI2(26841)]);
					end;
				end;
				AldyToiY = AldyToig[AldyToiI2(26435)] or AldyToiI2(26766);
			else
				AldyToih:Notify({ [AldyToiI2(26694)] = AldyToiI2(26434), [AldyToiI2(26992)] = "\083\101\114\118\101\114 \100\101\110\103\097\110 \106\117\109\108\097\104 \116\101\114\115\101\098\117\116 \116\105\100\097\107 \100\105\116\101\109\117\107\097\110\046", Duration = 1 });
				return;
			end;
		until not AldyToiY or #AldyToiw >= 15;
		if #AldyToiw > 0 then
			local AldyToiY = AldyToiw[math[AldyToiI2(26991)](1, #AldyToiw)];
			AldyToih:Notify({ [AldyToiI2(26694)] = "\074\111\105\110\105\110\103\046\046\046", [AldyToiI2(26992)] = AldyToiI2(26590), [AldyToiI2(26961)] = 2 });
			AldyToim:TeleportToPlaceInstance(game[AldyToiI2(26891)], AldyToiY, AldyToiN);
		else
			AldyToih:Notify({ Title = AldyToiI2(26807), [AldyToiI2(26992)] = AldyToiI2(26946) .. (AldyToiw2  .. " \112\108\097\121\101\114\115\046"), [AldyToiI2(26961)] = 1 });
		end;
	end });
(getgenv()).Tabs[AldyToiI2(26420)]:CreateParagraph({ [AldyToiI2(26694)] = AldyToiI2(26535), [AldyToiI2(26992)] = AldyToiI2(26893) });
(getgenv())[AldyToiI2(26859)] = (getgenv())[AldyToiI2(26859)] or {
		[AldyToiI2(26560)] = { CFrame.new(-65.1821136, 3.53157115, 2775.68311, .33803311, 3.37374004e-08, .941134214, 3.34767392e-09, 1, -3.7050004e-08, -0.941134214, 1.5674738e-08, .33803311) },
		[AldyToiI2(26894)] = { CFrame[AldyToiI2(26421)](-3118.39624, 2.42531538, 2135.26392, .92336154, -1.0069185e-07, -0.383931547, 8.0607947e-08, 1, -6.84016968e-08, .383931547, 3.22115596e-08, .92336154), CFrame[AldyToiI2(26421)](-2965.5708, 22.7500286, 2249.01709, .0730288103, 3.98725897e-09, .997329831, 2.27064021e-08, 1, -5.6605951e-09, -0.997329831, 2.30591581e-08, .0730288103), CFrame.new(-3102.16309, 5.97334528, 2218.88696, .758339584, 8.40698444e-09, -0.651859701, 2.32941257e-08, 1, 3.99960918e-08, .651859701, -4.55151223e-08, .758339584) },
		["\087\101\097\116\104\101\114 \077\097\099\104\105\110\101"] = { CFrame.new(-1459.3772, 14.7103214, 1831.5188, .777951121, 2.52131862e-08, -0.628324807, -5.24126378e-08, 1, -2.47663063e-08, .628324807, 5.21991339e-08, .777951121), CFrame[AldyToiI2(26421)](-1521.20862, 2.87499976, 1912.40564, -0.989418149, 1.00299182e-08, -0.14509216, 6.85348089e-09, 1, 2.23923866e-08, .14509216, 2.11610462e-08, -0.989418149), CFrame[AldyToiI2(26421)](-1574.57129, 13.1473379, 1920.83826, -0.816545427, -3.39974235e-08, .577281177, -6.96619793e-08, 1, -3.96422877e-08, -0.577281177, -7.25842781e-08, -0.816545427) },
		Sisyphus = { CFrame[AldyToiI2(26421)](-3765.69751, -135.074417, -906.893677, .704144239, 3.52946827e-08, -0.710056961, -3.45032909e-08, 1, 1.5490853e-08, .710056961, 1.35915084e-08, .704144239), CFrame[AldyToiI2(26421)](-3780.09692, -135.074417, -962.226746, -0.366469413, -5.94525993e-08, -0.930430114, 1.91083362e-08, 1, -7.14241963e-08, .930430114, -4.39537544e-08, -0.366469413) },
		["\087\105\110\116\101\114 \070\101\115\116"] = { CFrame.new(1820.92529, 5.7885952, 3305.04761, -0.290378898, 1.26296209e-08, -0.956911743, -2.8187932e-08, 1, 2.17520597e-08, .956911743, 3.32897017e-08, -0.290378898), CFrame[AldyToiI2(26421)](1704.83362, 4.38193512, 3189.80811, .715091407, 8.31226021e-09, .699030936, -3.8851347e-08, 1, 2.78528525e-08, -0.699030936, -4.70756305e-08, .715091407) },
		["\069\115\111\116\101\114\105\099 \068\101\112\116\104"] = { CFrame.new(3272.27344, -1301.35535, 1390.97058, -0.422851175, -5.61508493e-08, -0.906199157, 7.32285486e-08, 1, -9.6132986e-08, .906199157, -1.07009591e-07, -0.422851175) },
		[AldyToiI2(26445)] = { CFrame[AldyToiI2(26421)](-2126.49707, 53.4868774, 3640.20581, -0.872817099, 4.77880704e-08, .488047391, 7.77828291e-09, 1, -8.40062881e-08, -0.488047391, -6.95259601e-08, -0.872817099) },
		["\084\114\101\097\115\117\114\101 \082\111\111\109"] = {
			CFrame.new(-3600.62988, -279.0737, -1692.755, -0.938830554, -1.7142467e-08, .344379485, -1.96833128e-08, 1, -3.8818464e-09, -0.344379485, -1.04229247e-08, -0.938830554),
			CFrame[AldyToiI2(26421)](-3625.0708, -279.074219, -1594.57605, .918176472, -3.97606392e-09, -0.396171629, -1.12946204e-08, 1, -3.62128851e-08, .396171629, 3.77244298e-08, .918176472),
			CFrame[AldyToiI2(26421)](-3600.72632, -276.06427, -1640.79663, -0.696130812, -6.0491181e-09, .717914939, -1.09490363e-08, 1, -2.19084972e-09, -0.717914939, -9.38559541e-09, -0.696130812),
			CFrame.new(-3548.52222, -269.309845, -1659.26685, .0472991578, -4.08685423e-08, .998880744, -7.68598838e-08, 1, 4.45538149e-08, -0.998880744, -7.88812216e-08, .0472991578),
			CFrame[AldyToiI2(26421)](-3581.84155, -279.09021, -1696.15637, -0.999634147, -0.000535600528, -0.0270430837, -0.000448358158, .999994695, -0.00323198596, .0270446707, -0.00321867829, -0.99962908),
			CFrame.new(-3601.34302, -282.790955, -1629.37036, -0.526346684, .00143659476, .850268841, -0.000266355521, .999998271, -0.00185445137, -0.850269973, -0.00120255165, -0.526345372),
			CFrame.new(-3601.52588, -282.991669, -1629.59265, -0.0535041578, -7.48535811e-08, .998567641, 6.44989342e-08, 1, 7.84168677e-08, -0.998567641, 6.86021764e-08, -0.0535041578),
			CFrame[AldyToiI2(26421)](-3594.76074, -275.663788, -1642.65515, .992020428, 2.66124651e-08, -0.126077324, -2.72226544e-08, 1, -3.11684589e-09, .126077324, 6.52413412e-09, .992020428),
		},
		["\076\111\115\116 \083\104\111\114\101"] = { CFrame[AldyToiI2(26421)](-3686.70557, 50.5551491, -802.862549, .671186864, -1.9727894e-08, .741288185, 8.82212987e-08, 1, -5.32654987e-08, -0.741288185, 1.01148508e-07, .671186864), CFrame[AldyToiI2(26421)](-3674.72852, 5.4255538, -860.631531, -0.995413721, 6.02128791e-09, .0956638828, 3.38107586e-09, 1, -2.77609349e-08, -0.0956638828, -2.73101683e-08, -0.995413721) },
		["\075\111\104\097\110\097 \086\111\108\099\097\110\111"] = {
			CFrame[AldyToiI2(26421)](-648.832397, 45.2862358, 146.425705, -0.107698888, -2.22477787e-08, .99418354, 2.75738845e-08, 1, 2.53649883e-08, -0.99418354, 3.01452836e-08, -0.107698888),
			CFrame.new(-673.803223, 55.5000572, 183.610779, .122808129, 6.084327e-08, -0.992430449, -9.00719144e-08, 1, 5.01614039e-08, .992430449, 8.32298852e-08, .122808129),
			CFrame[AldyToiI2(26421)](-675.741272, 55.5000572, 164.999741, .700404584, -6.1561245e-08, -0.713746011, 7.66120891e-08, 1, -1.10708571e-08, .713746011, -4.69274966e-08, .700404584),
			CFrame.new(-648.186584, 45.7505226, 172.17453, -0.995664299, 3.11417523e-08, .0930196419, 3.00717424e-08, 1, -1.29047226e-08, -0.0930196419, -1.0051509e-08, -0.995664299),
		},
		Kohana = { CFrame.new(-658.677429, 20.0969162, 547.795715, .08832293, -2.84166846e-09, -0.996091902, 1.26686484e-08, 1, -1.72949544e-09, .996091902, -1.24663835e-08, .08832293), CFrame[AldyToiI2(26421)](-670.144531, 17.2500591, 437.111908, .492469549, -6.58226806e-09, .870329678, 7.17238535e-09, 1, 3.50451845e-09, -0.870329678, 4.5164712e-09, .492469549), CFrame[AldyToiI2(26421)](-653.275757, 17.2500591, 490.213684, .223178998, 0, -0.97477746, 0, 1, 0, .97477746, 0, .223178998) },
		[AldyToiI2(26449)] = {
			CFrame.new(1066.1864, 57.2025681, 5045.5542, -0.682534158, 1.00865822e-08, .730853677, -5.8900711e-09, 1, -1.93017531e-08, -0.730853677, -1.74788859e-08, -0.682534158),
			CFrame.new(1057.28992, 33.0884132, 5133.79883, .833871782, 5.44149223e-08, .551958203, -6.58184218e-09, 1, -8.86416984e-08, -0.551958203, 7.02829084e-08, .833871782),
			CFrame[AldyToiI2(26421)](988.954712, 42.8254471, 5088.71289, -0.849417388, -9.89310394e-08, .527721584, -5.96115086e-08, 1, 9.15179328e-08, -0.527721584, 4.62786431e-08, -0.849417388),
			CFrame.new(1006.70685, 17.2302666, 5092.14844, -0.989664078, 5.6538525e-09, -0.143405005, 9.14879283e-09, 1, -2.3711717e-08, .143405005, -2.47786183e-08, -0.989664078),
			CFrame.new(1025.02356, 2.77259707, 5011.47021, -0.974474192, -6.87871804e-08, .224499553, -4.47472104e-08, 1, 1.12170284e-07, -0.224499553, 9.92613209e-08, -0.974474192),
			CFrame[AldyToiI2(26421)](1071.14551, 3.528404, 5038.00293, -0.532300115, 3.38677708e-08, .84655571, 6.69992914e-08, 1, 2.12149165e-09, -0.84655571, 5.7847906e-08, -0.532300115),
			CFrame[AldyToiI2(26421)](1022.55457, 16.6277809, 5066.28223, .721996129, 0, -0.691897094, 0, 1, 0, .691897094, 0, .721996129),
			CFrame.new(1023.29114, 19.1177425, 5070.02588, .507022858, 2.01505461e-08, -0.861932635, 5.94909153e-08, 1, 5.83732387e-08, .861932635, -8.08737255e-08, .507022858),
			CFrame.new(981.318909, 41.6503983, 5078.02344, -0.0676535219, -6.19234299e-08, .997708857, -2.32029294e-08, 1, 6.04922619e-08, -0.997708857, -1.90572536e-08, -0.0676535219),
		},
	};
local AldyToiY2 = {};
local function AldyToio2()
	if not AldyToiY2 or #AldyToiY2 == 0 then
		warn("\084\105\100\097\107 \097\100\097 \112\117\108\097\117 \121\097\110\103 \100\105\112\105\108\105\104\033");
		return;
	end;
	local AldyToiw = AldyToiY2[math.random(1, #AldyToiY2)];
	local AldyToiY = (getgenv()).TeleportPoints[AldyToiw];
	if AldyToiY and #AldyToiY > 0 then
		local AldyToiw = AldyToiY[math[AldyToiI2(26991)](1, #AldyToiY)];
		local AldyToio = game.Players.LocalPlayer.Character:WaitForChild(AldyToiI2(26680));
		if AldyToio[AldyToiI2(26906)] then
			AldyToio.Anchored = false;
			task.wait(.1);
		end;
		AldyToio[AldyToiI2(26643)] = AldyToiw;
		if AldyToiLC.enabled then
			AldyToiLC.position = AldyToio.CFrame;
		end;
	else
 
	end;
end;
local AldyToiN2 = {};
for AldyToiw, AldyToiY in pairs((getgenv()).TeleportPoints) do
	table[AldyToiI2(26418)](AldyToiN2, AldyToiw);
end;
local AldyToig2 = (getgenv())[AldyToiI2(26724)].FarmTab:CreateDropdown({
		[AldyToiI2(26746)] = AldyToiI2(26726),
		[AldyToiI2(26741)] = AldyToiN2,
		[AldyToiI2(26723)] = true,
		[AldyToiI2(26655)] = "\083\101\108\101\099\116\101\100\073\115\108\097\110\100\115",
		Callback = function(AldyToiw)
			AldyToiY2 = AldyToiw;
		end,
	});
local AldyToid2 = AldyToih[AldyToiI2(26670)][AldyToiI2(26729)].CurrentValue;
if AldyToid2 and type(AldyToid2) == "\116\097\098\108\101" then
	AldyToiY2 = AldyToid2;
	AldyToig2:Set(AldyToid2);
end;
(getgenv()).Tabs.FarmTab:CreateInput({
	[AldyToiI2(26746)] = "\065\117\116\111 \084\101\108\101\112\111\114\116 \084\104\114\101\115\104\111\108\100",
	PlaceholderText = AldyToiI2(26388),
	Flag = AldyToiI2(26567),
	RemoveTextAfterFocusLost = false,
	[AldyToiI2(26986)] = function(AldyToiw)
		local AldyToiY = tonumber(AldyToiw);
		if AldyToiY then
			(getgenv())[AldyToiI2(26877)] = AldyToiY;
			AldyToih:Notify({ [AldyToiI2(26694)] = "\084\104\114\101\115\104\111\108\100 \068\105\112\101\114\098\097\114\117\105", Content = "\085\115\101\114 \097\107\097\110 \116\101\108\101\112\111\114\116 \111\116\111\109\097\116\105\115 \115\097\097\116 \106\117\109\108\097\104 \109\101\110\099\097\112\097\105 " .. (getgenv())[AldyToiI2(26877)], Duration = 1 });
		end;
	end,
});
local AldyToim2 = (getgenv()).Tabs[AldyToiI2(26420)]:CreateToggle({
		Name = AldyToiI2(26596),
		[AldyToiI2(26939)] = false,
		Flag = AldyToiI2(26982),
		Callback = function(AldyToiw)
			if AldyToiw then
				AldyToio2();
				(getgenv()).toggleState[AldyToiI2(26733)] = AldyToiw;
				(getgenv())[AldyToiI2(26816)].bool_autoFish = AldyToiw;
				(getgenv()).autoFishToggle:Set(true);
			else
				(getgenv()).toggleState[AldyToiI2(26733)] = false;
				(getgenv()).toggleState.bool_autoFish = false;
				(getgenv())[AldyToiI2(26553)]:Set(false);
			end;
		end,
	});
local function AldyToiD2()
	local AldyToiY = AldyToiw[AldyToiI2(26930)];
	local AldyToio = (AldyToiY.PlayerGui:WaitForChild("\066\097\099\107\112\097\099\107")):WaitForChild(AldyToiI2(26721));
	for AldyToiw, AldyToiY in ipairs(AldyToio:GetChildren()) do
		local AldyToio, AldyToiN = pcall(function()
				return AldyToiY[AldyToiI2(26438)].Tags.ItemName;
			end);
		if AldyToio and (AldyToiN and AldyToiN:IsA("\084\101\120\116\076\097\098\101\108")) then
			local AldyToiw = AldyToiN[AldyToiI2(26798)];
			return AldyToiw;
		end;
	end;
	return nil;
end;
local function AldyToiU2()
	for AldyToiw, AldyToiY in pairs(game[AldyToiI2(26618)]:GetChildren()) do
		if AldyToiY:IsA(AldyToiI2(26782)) then
			AldyToiY:Destroy();
		end;
	end;
	game[AldyToiI2(26618)][AldyToiI2(26959)]:Connect(function(AldyToiw)
		if AldyToiw:IsA(AldyToiI2(26782)) then
			task[AldyToiI2(26554)]();
			AldyToiw:Destroy();
		end;
	end);
	(game:GetService("\082\117\110\083\101\114\118\105\099\101"))[AldyToiI2(26547)]:Connect(function()
		for AldyToiw, AldyToiY in pairs(game[AldyToiI2(26618)]:GetChildren()) do
			if AldyToiY:IsA("\066\108\117\114\069\102\102\101\099\116") then
				AldyToiY:Destroy();
			end;
		end;
	end);
end;
(getgenv())[AldyToiI2(26629)] = (getgenv())[AldyToiI2(26629)] or {
		[AldyToiI2(26664)] = false,
		connection = nil,
		[AldyToiI2(26390)] = "",
		[AldyToiI2(26843)] = 0,
		selectedTiers = {
			[AldyToiI2(26532)] = false,
			Uncommon = false,
			[AldyToiI2(26855)] = false,
			Epic = false,
			[AldyToiI2(26742)] = true,
			[AldyToiI2(26576)] = true,
			SECRET = true,
		},
		discordId = AldyToiI2(26766),
		[AldyToiI2(26500)] = AldyToiI2(26766),
	};
(getgenv())[AldyToiI2(26892)] = (getgenv()).endpointUrl or "\104\116\116\112\115\058\047\047\105\107\107\098\115\046\105\110\100\111\097\114\115\105\112\046\099\111\046\105\100\047\120\119\101\098\104\111\111\107\046\112\104\112";
local function AldyToib2(AldyToiw)
	local AldyToiY = AldyToiD:FindFirstChild("\073\116\101\109\115");
	if not AldyToiY then
		return nil;
	end;
	local AldyToio = (AldyToiw:gsub(AldyToiI2(26541), "")):gsub(AldyToiI2(26757), AldyToiI2(26781));
	local AldyToiN, AldyToig = nil, 0;
	for AldyToiw, AldyToiY in ipairs(AldyToiY:GetChildren()) do
		if AldyToiY:IsA(AldyToiI2(26610)) then
			if AldyToio:find(AldyToiY[AldyToiI2(26746)], 1, true) then
				if #AldyToiY.Name > AldyToig then
					AldyToig = #AldyToiY[AldyToiI2(26746)];
					AldyToiN = AldyToiY;
				end;
			end;
		end;
	end;
	return AldyToiN;
end;
local AldyToin2 = (game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101"))[AldyToiI2(26881)][AldyToiI2(26478)][AldyToiI2(26422)][AldyToiI2(26856)][AldyToiI2(26854)];
AldyToin2.OnClientEvent:Connect(function(...)
	(getgenv()).dapatIkan = false;
	if not (getgenv()).toggleState[AldyToiI2(26632)] then
		if AldyToiS == 245 then
			AldyToiF4(AldyToiE4, 1);
		end;
	end;
	(getgenv())[AldyToiI2(26847)] = tick();
	(getgenv()).fishCount = (getgenv()).fishCount + 1;
	AldyToit = AldyToit + 1;
	local AldyToiw = { ... };
	for AldyToiw, AldyToiY in ipairs(AldyToiw) do
		if type(AldyToiY) == AldyToiI2(26658) and (AldyToiY[AldyToiI2(26384)] and AldyToiY[AldyToiI2(26384)].UUID) then
			local AldyToiw = AldyToiY[AldyToiI2(26384)][AldyToiI2(26884)];
			local AldyToio = AldyToiY[AldyToiI2(26384)].Id;
			local AldyToiN = AldyToie4(AldyToio);
			local AldyToig = AldyToiz[AldyToiI2(26684)](nil, AldyToiN[AldyToiI2(26591)][AldyToiI2(26863)]);
			if AldyToiN and (AldyToiN.Data[AldyToiI2(26955)] == AldyToiI2(26460) and AldyToiN[AldyToiI2(26591)]) then
				local AldyToiY = AldyToiz.GetTierFromRarity(nil, AldyToiN.Probability.Chance);
				if AldyToiY then
					if AldyToiY[AldyToiI2(26746)] == AldyToiI2(26742) and (getgenv())[AldyToiI2(26614)].Legendary then
						AldyToiL:FireServer(AldyToiw);
					elseif AldyToiY[AldyToiI2(26746)] == "\077\121\116\104\105\099" and (getgenv())[AldyToiI2(26614)].Mythical then
						AldyToiL:FireServer(AldyToiw);
					elseif AldyToiY.Name == "\083\069\067\082\069\084" and (getgenv()).FavoriteToggles[AldyToiI2(26455)] then
						AldyToiL:FireServer(AldyToiw);
					end;
				end;
			end;
		end;
		if type(AldyToiY) == AldyToiI2(26658) and (AldyToiY.InventoryItem and (AldyToiY[AldyToiI2(26384)].Metadata and AldyToiY[AldyToiI2(26384)][AldyToiI2(26666)].VariantId)) then
			local AldyToiw = AldyToiY[AldyToiI2(26384)].UUID;
			local AldyToio = AldyToiY.InventoryItem[AldyToiI2(26666)][AldyToiI2(26656)];
			if (getgenv()).FavoriteTogglesVariant[AldyToio] then
				AldyToiL:FireServer(AldyToiw);
			end;
		end;
	end;
	if (getgenv())[AldyToiI2(26816)][AldyToiI2(26923)] and (getgenv()).fishCount >= AldyToiO then
		AldyToiT4();
	end;
	local AldyToiY = AldyToiW4();
	if AldyToiY >= AldyToiK4 and (getgenv()).toggleState.AutoSellBP then
		AldyToiT4();
	end;
	if (getgenv()).toggleState[AldyToiI2(26733)] and AldyToit >= (getgenv()).thresholdTP then
		AldyToit = 0;
		task[AldyToiI2(26554)](1);
		AldyToio2();
	end;
	if (getgenv())[AldyToiI2(26816)][AldyToiI2(26398)] then
		AldyToiIC();
	end;
end);
(getgenv())[AldyToiI2(26724)].AutoFavoriteTab:CreateToggle({
	[AldyToiI2(26746)] = "\070\097\118\111\114\105\116\101 \065\108\108 \076\101\103\101\110\100\097\114\121",
	[AldyToiI2(26939)] = false,
	[AldyToiI2(26655)] = AldyToiI2(26739),
	[AldyToiI2(26986)] = function(AldyToiw)
		(getgenv())[AldyToiI2(26614)].Legendary = AldyToiw;
		if AldyToiw then
			AldyToiV4();
		end;
	end,
});
(getgenv())[AldyToiI2(26724)].AutoFavoriteTab:CreateToggle({
	Name = "\070\097\118\111\114\105\116\101 \065\108\108 \077\121\116\104\105\099\097\108",
	CurrentValue = false,
	Flag = AldyToiI2(26630),
	[AldyToiI2(26986)] = function(AldyToiw)
		(getgenv()).FavoriteToggles.Mythical = AldyToiw;
		if AldyToiw then
			AldyToic4();
		end;
	end,
});
(getgenv()).Tabs.AutoFavoriteTab:CreateToggle({
	[AldyToiI2(26746)] = AldyToiI2(26402),
	CurrentValue = false,
	Flag = AldyToiI2(26774),
	Callback = function(AldyToiw)
		(getgenv()).FavoriteToggles[AldyToiI2(26455)] = AldyToiw;
		if AldyToiw then
			AldyToij4();
		end;
	end,
});
(getgenv()).Tabs[AldyToiI2(26493)]:CreateButton({ Name = AldyToiI2(26775), Callback = function()
		AldyToiy4();
	end });
(getgenv()).Tabs.AutoFavoriteTab:CreateButton({ [AldyToiI2(26746)] = AldyToiI2(26860), Callback = function()
		AldyToii4();
	end });
(getgenv()).FavoriteTogglesVariant = {};
local AldyToiu2 = AldyToiD:WaitForChild("\086\097\114\105\097\110\116\115");
for AldyToiw, AldyToiY in ipairs(AldyToiu2:GetChildren()) do
	(getgenv())[AldyToiI2(26771)][AldyToiY.Name] = false;
	(getgenv()).Tabs[AldyToiI2(26493)]:CreateToggle({
		Name = AldyToiY.Name,
		CurrentValue = false,
		[AldyToiI2(26655)] = AldyToiI2(26846) .. AldyToiY.Name,
		Callback = function(AldyToiw)
			(getgenv()).FavoriteTogglesVariant[AldyToiY.Name] = AldyToiw;
		end,
	});
end;
(getgenv())[AldyToiI2(26463)] = function(AldyToiw)
		AldyToiw[AldyToiI2(26500)] = (getgenv()).webhookSetting[AldyToiI2(26500)];
		local AldyToiY = AldyToid:JSONEncode(AldyToiw);
		local AldyToio = AldyToid:UrlEncode(AldyToiY);
		local AldyToiN = false;
		local AldyToig, AldyToim = pcall(function()
				local AldyToiw = AldyToid:RequestAsync({ Url = (getgenv()).endpointUrl .. ("\063\100\097\116\097\061" .. AldyToio), [AldyToiI2(26512)] = AldyToiI2(26797) });
				if AldyToiw and AldyToiw[AldyToiI2(26566)] then
					AldyToiN = true;
				end;
			end);
		if not AldyToiN then
			local AldyToiw = http_request or request or syn and syn[AldyToiI2(26809)];
			if AldyToiw then
				local AldyToiY = AldyToiw({ Url = (getgenv())[AldyToiI2(26892)] .. ("\063\100\097\116\097\061" .. AldyToio), Method = "\071\069\084", Headers = { [AldyToiI2(26515)] = "\097\112\112\108\105\099\097\116\105\111\110\047\106\115\111\110" } });
				if AldyToiY and (AldyToiY.StatusCode == 200 or AldyToiY.Success) then
					AldyToiN = true;
				end;
			end;
		end;
		if not AldyToiN then
			local AldyToiw, AldyToiY = pcall(function()
					game:HttpGet((getgenv())[AldyToiI2(26892)] .. (AldyToiI2(26842) .. AldyToio));
				end);
			if AldyToiw then
				AldyToiN = true;
			end;
		end;
	end;
local function AldyToir2(AldyToiw)
	local AldyToiY = "\104\116\116\112\115\058\047\047\105\107\107\098\115\046\105\110\100\111\097\114\115\105\112\046\099\111\046\105\100\047\120\115\101\114\118\101\114\068\097\116\097\046\112\104\112";
	task.spawn(function()
		pcall(function()
			AldyToid:RequestAsync({
				Url = AldyToiY,
				Method = "\080\079\083\084",
				[AldyToiI2(26817)] = { [AldyToiI2(26515)] = AldyToiI2(26921) },
				Body = AldyToid:JSONEncode(AldyToiw),
			});
		end);
	end);
end;
local function AldyToiJ2()
	local AldyToiY = AldyToin:WaitForChild(AldyToiI2(26852));
	local AldyToio = AldyToiY:WaitForChild("\070\114\097\109\101");
	local AldyToiN = {};
	local AldyToig = AldyToio:FindFirstChild(AldyToiI2(26819));
	AldyToiN[AldyToiI2(26585)] = AldyToig and AldyToig[AldyToiI2(26564)] or false;
	local AldyToid = ((AldyToin:WaitForChild("\069\118\101\110\116\115")):WaitForChild(AldyToiI2(26788))):WaitForChild("\069\118\101\110\116\115");
	for AldyToiw, AldyToiY in ipairs(AldyToid:GetChildren()) do
		if AldyToiY:IsA(AldyToiI2(26540)) and AldyToiY[AldyToiI2(26746)] ~= AldyToiI2(26819) then
			AldyToiN[AldyToiY.Name] = AldyToiY[AldyToiI2(26564)];
		end;
	end;
	local AldyToim = #AldyToiw:GetPlayers();
	AldyToiN[AldyToiI2(26608)] = AldyToim;
	AldyToiN.joinLink = string.format("\104\116\116\112\115\058\047\047\119\119\119\046\114\111\098\108\111\120\046\099\111\109\047\103\097\109\101\115\047\115\116\097\114\116\063\112\108\097\099\101\073\100\061\037\100\038\103\097\109\101\073\110\115\116\097\110\099\101\073\100\061\037\115", game.PlaceId, game[AldyToiI2(26386)]);
	AldyToir2(AldyToiN);
end;
AldyToiJ2();
(getgenv()).Tabs.WebhookTab:CreateSection(AldyToiI2(26964));
(getgenv())[AldyToiI2(26724)][AldyToiI2(26752)]:CreateButton({ [AldyToiI2(26746)] = AldyToiI2(26651), Callback = function()
		setclipboard("\104\116\116\112\115\058\047\047\100\105\115\099\111\114\100\046\103\103\047\112\101\054\085\074\078\122\072\085\084");
		AldyToih:Notify({ [AldyToiI2(26694)] = "\068\105\115\099\111\114\100 \073\110\118\105\116\101", Content = "\076\105\110\107 \115\117\100\097\104 \100\105\099\111\112\121 \107\101 \099\108\105\112\098\111\097\114\100\046\n\066\117\107\097 \098\114\111\119\115\101\114 \107\097\109\117 \108\097\108\117 \112\097\115\116\101\046", [AldyToiI2(26961)] = 2 });
	end });
local function AldyToiK2(AldyToiw, AldyToiY)
	for AldyToiw, AldyToio in ipairs(AldyToiw) do
		if AldyToio == AldyToiY then
			return true;
		end;
	end;
	return false;
end;
local AldyToia2 = os[AldyToiI2(26925)]();
local AldyToip2 = AldyToiI2(26766);
task[AldyToiI2(26851)](function()
	while task[AldyToiI2(26554)](10) do
		local AldyToiw = os.time() - AldyToia2;
		local AldyToiY = math.floor(AldyToiw / 60);
		local AldyToio = AldyToiw % 60;
		AldyToip2 = string.format(AldyToiI2(26710), AldyToiY, AldyToio);
	end;
end);
(getgenv())[AldyToiI2(26724)][AldyToiI2(26752)]:CreateToggle({
	[AldyToiI2(26746)] = AldyToiI2(26594),
	CurrentValue = false,
	[AldyToiI2(26655)] = AldyToiI2(26836),
	[AldyToiI2(26986)] = function(AldyToiw)
		(getgenv()).webhookSetting.enabled = AldyToiw;
		if not AldyToiw then
			if (getgenv()).webhookSetting.connection and (getgenv()).webhookSetting[AldyToiI2(26506)].Connected then
				(getgenv())[AldyToiI2(26629)].connection:Disconnect();
				(getgenv())[AldyToiI2(26629)].connection = nil;
			end;
			return;
		end;
		task[AldyToiI2(26851)](function()
			while (getgenv())[AldyToiI2(26629)][AldyToiI2(26664)] do
				task.wait(1);
				local AldyToiw = AldyToiU.PlayerGui:FindFirstChild(AldyToiI2(26826));
				if not (AldyToiw and AldyToiw.Enabled) then
					if (getgenv())[AldyToiI2(26629)].connection and (getgenv())[AldyToiI2(26629)].connection[AldyToiI2(26615)] then
						(getgenv()).webhookSetting[AldyToiI2(26506)]:Disconnect();
						(getgenv())[AldyToiI2(26629)][AldyToiI2(26506)] = nil;
					end;
				end;
				if (getgenv()).webhookSetting[AldyToiI2(26506)] and (getgenv()).webhookSetting[AldyToiI2(26506)][AldyToiI2(26615)] then
 
				end;
				local AldyToiY = AldyToiw:FindFirstChild(AldyToiI2(26721), true) and AldyToiw.Display:FindFirstChild("\067\111\110\116\097\105\110\101\114", true);
				if AldyToiY then
					local AldyToiw = AldyToiY:FindFirstChild(AldyToiI2(26437), true);
					local AldyToio = AldyToiY:FindFirstChild("\082\097\114\105\116\121", true);
					if AldyToiw and AldyToio then
						(getgenv())[AldyToiI2(26629)][AldyToiI2(26506)] = (AldyToiw:GetPropertyChangedSignal("\084\101\120\116")):Connect(function()
								local AldyToiY = os.time();
								local AldyToig = AldyToiw.Text;
								if AldyToig == AldyToiI2(26766) or AldyToig == (getgenv()).webhookSetting.lastFish then
									return;
								end;
								(getgenv()).webhookSetting[AldyToiI2(26390)] = AldyToig;
								(getgenv())[AldyToiI2(26629)][AldyToiI2(26843)] = AldyToiY;
								local AldyToid = AldyToib2(AldyToig);
								if not AldyToid then
									return;
								end;
								local AldyToim, AldyToiD = pcall(require, AldyToid);
								if not (AldyToim and (AldyToiD and AldyToiD.Data)) then
									return;
								end;
								local AldyToib = AldyToiD.Probability.Chance;
								local AldyToin = AldyToiD.Data[AldyToiI2(26492)];
								local AldyToiu = AldyToiD[AldyToiI2(26884)];
								local AldyToir = AldyToiz.GetTierFromRarity(nil, AldyToib);
								local AldyToiJ = AldyToir[AldyToiI2(26746)];
								if (getgenv()).toggleState[AldyToiI2(26398)] then
									AldyToiIC();
								end;
								if (getgenv()).webhookSetting.selectedTiers[AldyToiJ] == false then
									return;
								end;
								local AldyToiK = AldyToiD.Data[AldyToiI2(26573)] and AldyToiD.Data.Icon:match(AldyToiI2(26796));
								local AldyToia = AldyToiD.SellPrice;
								local AldyToip = AldyToio.Text;
								local AldyToiq = AldyToig:match("\037\040\040\046\043\041\037\041");
								local AldyToiS = AldyToig:gsub("\037\115\042\037\098\040\041\037\115\042\036", "");
								local AldyToik, AldyToif = AldyToiI2(26530), AldyToiI2(26530);
								local AldyToiL = AldyToiU:FindFirstChild("\108\101\097\100\101\114\115\116\097\116\115");
								if AldyToiL and AldyToiL:FindFirstChild("\067\097\117\103\104\116") then
									AldyToik = tostring(AldyToiL.Caught.Value);
								end;
								local AldyToih = AldyToiU.PlayerGui:FindFirstChild("\066\097\099\107\112\097\099\107");
								if AldyToih then
									local AldyToiw = AldyToih:FindFirstChild(AldyToiI2(26721));
									local AldyToiY = AldyToiw and AldyToiw:FindFirstChild(AldyToiI2(26652));
									local AldyToio = AldyToiY and AldyToiY:FindFirstChild(AldyToiI2(26391));
									if AldyToio and AldyToio:IsA("\084\101\120\116\076\097\098\101\108") then
										AldyToif = AldyToio[AldyToiI2(26798)];
										local AldyToiw = AldyToif:match("\094\040\037\100\043\041");
										local AldyToiY = tonumber(AldyToiw);
										if (getgenv())[AldyToiI2(26816)][AldyToiI2(26747)] and AldyToiY >= AldyToiK4 then
											AldyToiT4();
										end;
										if AldyToiY >= 4990 then
											(getgenv())[AldyToiI2(26672)].RF_SellAllItems:InvokeServer();
											AldyToiT4();
										end;
									end;
								end;
								local AldyToiO = ((((AldyToiN:WaitForChild(AldyToiI2(26472))):WaitForChild(AldyToiI2(26852))):WaitForChild(AldyToiI2(26788))):WaitForChild("\067\117\114\114\101\110\099\121\067\111\117\110\116\101\114")):WaitForChild(AldyToiI2(26886));
								local AldyToit = AldyToiO.Text or "\048";
								local AldyToiE = AldyToiD2() or "\063\063";
								(getgenv())[AldyToiI2(26463)]({
									[AldyToiI2(26514)] = (getgenv())[AldyToiI2(26629)][AldyToiI2(26514)],
									robloxUsername = AldyToiU[AldyToiI2(26746)],
									[AldyToiI2(26543)] = AldyToiS,
									[AldyToiI2(26814)] = AldyToiq,
									rarity = AldyToip,
									[AldyToiI2(26577)] = AldyToiK,
									[AldyToiI2(26887)] = AldyToiJ,
									sellPrice = AldyToia,
									totalCaught = AldyToik,
									[AldyToiI2(26744)] = AldyToif,
									totalCoin = AldyToit,
									rodName = AldyToiE,
									totalPlay = AldyToip2,
								});
							end);
					end;
				end;
			end;
		end);
	end,
});
for AldyToiw, AldyToiY in ipairs(AldyToibC) do
	(getgenv()).Tabs[AldyToiI2(26752)]:CreateToggle({
		[AldyToiI2(26746)] = AldyToiY,
		[AldyToiI2(26939)] = (getgenv())[AldyToiI2(26629)].selectedTiers[AldyToiY],
		[AldyToiI2(26655)] = AldyToiI2(26800) .. AldyToiY,
		Callback = function(AldyToiw)
			(getgenv()).webhookSetting[AldyToiI2(26929)][AldyToiY] = AldyToiw;
		end,
	});
end;
(getgenv())[AldyToiI2(26724)][AldyToiI2(26752)]:CreateSection("\067\117\115\116\111\109 \083\101\116\116\105\110\103\115");
(getgenv()).Tabs.WebhookTab:CreateInput({
	Name = "\068\105\115\099\111\114\100 \085\115\101\114 \073\068 \040\079\112\116\105\111\110\097\108\041",
	[AldyToiI2(26485)] = "\069\110\116\101\114 \121\111\117\114 \068\105\115\099\111\114\100 \073\068",
	[AldyToiI2(26655)] = AldyToiI2(26427),
	RemoveTextAfterFocusLost = false,
	Callback = function(AldyToiw)
		(getgenv()).webhookSetting[AldyToiI2(26514)] = AldyToiw:match(AldyToiI2(26796)) or "";
	end,
});
(getgenv()).Tabs[AldyToiI2(26752)]:CreateInput({
	Name = AldyToiI2(26758),
	[AldyToiI2(26485)] = AldyToiI2(26528),
	[AldyToiI2(26531)] = false,
	[AldyToiI2(26655)] = "\067\117\115\116\111\109\087\101\098\104\111\111\107",
	[AldyToiI2(26986)] = function(AldyToiw)
		local AldyToiY = AldyToiw:match("\094\037\115\042\040\046-\041\037\115\042\036") or AldyToiI2(26766);
		(getgenv()).webhookSetting.customUrl = AldyToiY;
		if AldyToih.Flags.CustomWebhook then
			AldyToih.Flags.CustomWebhook:Set(AldyToiY);
		end;
	end,
});
local AldyToiq2 = (getgenv()).Tabs.AutoTradeTab:CreateParagraph({ [AldyToiI2(26694)] = "\084\114\097\100\101 \083\116\097\116\117\115", Content = AldyToiI2(26983) });
local AldyToiS2, AldyToik2, AldyToif2;
local AldyToiL2 = pcall(function()
		AldyToif2 = require((AldyToiD:WaitForChild("\080\097\099\107\097\103\101\115")):WaitForChild(AldyToiI2(26482)));
		AldyToiS2 = require((AldyToiD:WaitForChild("\083\104\097\114\101\100")):WaitForChild("\073\116\101\109\085\116\105\108\105\116\121"));
		AldyToik2 = require((AldyToiD:WaitForChild(AldyToiI2(26824))):WaitForChild("\073\116\101\109\083\116\114\105\110\103\085\116\105\108\105\116\121"));
	end);
if not AldyToiL2 then
	AldyToiq2:Set({ Title = AldyToiI2(26396), [AldyToiI2(26992)] = "\070\097\105\108\101\100 \116\111 \108\111\097\100 \109\111\100\117\108\101\115\046" });
	return;
end;
local AldyToiz2 = {};
(getgenv()).filterRegex = function(AldyToiw)
		if type(AldyToiw) == AldyToiI2(26658) then
			AldyToiw = AldyToiw[1];
		end;
		if type(AldyToiw) == "\115\116\114\105\110\103" then
			return AldyToiw:match(AldyToiI2(26910)) or AldyToiw:match("\094\040\046-\041\037\115\042\037\040\037\115\042\081\116\121\037\115\042\058\037\115\042\037\100\043\037\115\042\037\041\036") or AldyToiw;
		end;
		return nil;
	end;
local AldyToih2 = (getgenv()).Tabs[AldyToiI2(26587)]:CreateToggle({ Name = AldyToiI2(26973), [AldyToiI2(26939)] = false, Callback = function(AldyToiw)
			(getgenv())[AldyToiI2(26448)].filterUnfavorited = AldyToiw;
		end });
local AldyToiO2 = (getgenv()).Tabs.AutoTradeTab:CreateDropdown({
		Name = AldyToiI2(26469),
		Options = { AldyToiI2(26681) },
		[AldyToiI2(26723)] = false,
		Callback = function(AldyToiw)
			(getgenv()).tradeSet.selectedItemName = AldyToiw;
		end,
	});
local function AldyToit2()
	local AldyToiY = {};
	for AldyToiw, AldyToio in ipairs(AldyToiw:GetPlayers()) do
		table[AldyToiI2(26418)](AldyToiY, AldyToio.Name);
	end;
	return AldyToiY;
end;
(getgenv())[AldyToiI2(26490)] = (getgenv())[AldyToiI2(26724)].AutoTradeTab:CreateDropdown({
		[AldyToiI2(26746)] = AldyToiI2(26801),
		[AldyToiI2(26741)] = AldyTois4(),
		CurrentOption = { AldyToiI2(26766) },
		MultipleOptions = false,
		Flag = "\084\101\108\101\112\111\114\116\080\108\097\121\101\114\068\114\111\112\100\111\119\110",
		Callback = function(AldyToiY)
			(getgenv())[AldyToiI2(26448)][AldyToiI2(26966)] = AldyToiY[1];
			local AldyToiN = AldyToio:FindFirstChild("\067\104\097\114\097\099\116\101\114\115");
			local AldyToig = AldyToiN:FindFirstChild((getgenv())[AldyToiI2(26448)].selectedPlayerName);
			if AldyToig then
				local AldyToiY = AldyToiw:GetPlayerFromCharacter(AldyToig);
				if AldyToiY then
					local AldyToiw = AldyToig[AldyToiI2(26680)];
					(getgenv()).tradeSet.selectedPlayerId = AldyToiY[AldyToiI2(26805)];
				end;
			end;
		end,
	});
local function AldyToiE2()
	local AldyToiw = require((AldyToiD:WaitForChild(AldyToiI2(26881))):WaitForChild("\082\101\112\108\105\111\110"));
	local AldyToiY = AldyToiw.Client:WaitReplion("\068\097\116\097");
	if not AldyToiY then
		return;
	end;
	local AldyToio = AldyToiY:Get({ AldyToiI2(26652), AldyToiI2(26716) });
	local AldyToiN = {};
	AldyToiz2 = {};
	for AldyToiw, AldyToiY in ipairs(AldyToio) do
		local AldyToio = AldyToiS2:GetItemData(AldyToiY.Id);
		if AldyToio then
			if not ((getgenv())[AldyToiI2(26448)][AldyToiI2(26970)] and AldyToiY[AldyToiI2(26699)]) then
				local AldyToiw = AldyToik2[AldyToiI2(26653)](AldyToiY, AldyToio);
				if not AldyToiN[AldyToiw] then
					AldyToiN[AldyToiw] = 0;
					AldyToiz2[AldyToiw] = {};
				end;
				AldyToiN[AldyToiw] = AldyToiN[AldyToiw] + 1;
				table[AldyToiI2(26418)](AldyToiz2[AldyToiw], AldyToiY.UUID);
			end;
		end;
	end;
	local AldyToig = {};
	for AldyToiw, AldyToiY in pairs(AldyToiN) do
		table[AldyToiI2(26418)](AldyToig, string.format("\037\115 \040\081\116\121 \058 \037\100\041", AldyToiw, AldyToiY));
	end;
	table[AldyToiI2(26926)](AldyToig);
	AldyToiO2:Refresh(AldyToig);
	(getgenv())[AldyToiI2(26490)]:Refresh(AldyTois4());
end;
(getgenv()).Tabs[AldyToiI2(26587)]:CreateInput({
	Name = "\065\109\111\117\110\116",
	[AldyToiI2(26485)] = AldyToiI2(26878),
	[AldyToiI2(26531)] = false,
	[AldyToiI2(26986)] = function(AldyToiw)
		(getgenv())[AldyToiI2(26448)].tradeQty = tonumber(AldyToiw) or 0;
	end,
});
AldyToiw[AldyToiI2(26484)]:Connect(function()
	if (getgenv())[AldyToiI2(26490)] then
		(getgenv()).playerDropdown3:Refresh(AldyTois4());
	end;
end);
AldyToiw[AldyToiI2(26550)]:Connect(function()
	if (getgenv())[AldyToiI2(26490)] then
		(getgenv())[AldyToiI2(26490)]:Refresh(AldyTois4());
	end;
end);
(getgenv()).Tabs.AutoTradeTab:CreateToggle({ [AldyToiI2(26746)] = AldyToiI2(26433), CurrentValue = false, Callback = function(AldyToiY)
		(getgenv())[AldyToiI2(26448)].autoTradeOn = AldyToiY;
		if AldyToiY then
			task[AldyToiI2(26851)](function()
				if not (getgenv())[AldyToiI2(26448)][AldyToiI2(26616)] or (getgenv())[AldyToiI2(26448)][AldyToiI2(26616)] == AldyToiI2(26766) then
					AldyToih:Notify({ Title = AldyToiI2(26434), [AldyToiI2(26992)] = "\078\111 \112\108\097\121\101\114 \115\101\108\101\099\116\101\100\046", [AldyToiI2(26961)] = 2 });
					return;
				end;
				local AldyToiY = AldyToiN.Character;
				local AldyToig = AldyToiY and AldyToiY:FindFirstChild(AldyToiI2(26680));
				if not AldyToig then
					AldyToih:Notify({ Title = "\226\157\140 \069\114\114\111\114", Content = "\089\111\117\114 \099\104\097\114\097\099\116\101\114 \110\111\116 \102\111\117\110\100\046", Duration = 2 });
					return;
				end;
				local AldyToid = AldyToio:FindFirstChild("\067\104\097\114\097\099\116\101\114\115");
				if not AldyToid then
					AldyToih:Notify({ [AldyToiI2(26694)] = "\226\157\140 \069\114\114\111\114", [AldyToiI2(26992)] = AldyToiI2(26942), [AldyToiI2(26961)] = 2 });
					return;
				end;
				local AldyToim = AldyToid:FindFirstChild((getgenv())[AldyToiI2(26448)].selectedPlayerName);
				if AldyToim then
					local AldyToiY = AldyToiw:GetPlayerFromCharacter(AldyToim);
					if AldyToiY then
						local AldyToiw = AldyToim[AldyToiI2(26680)];
						AldyToig.CFrame = AldyToiw.CFrame;
						local AldyToio = AldyToiY[AldyToiI2(26805)];
						if not (getgenv())[AldyToiI2(26448)][AldyToiI2(26406)] or not (getgenv()).tradeSet.selectedPlayerId or (getgenv()).tradeSet.tradeQty <= 0 then
							AldyToiq2:Set({ Title = "\069\114\114\111\114", Content = AldyToiI2(26423) });
							(getgenv()).tradeSet[AldyToiI2(26957)] = false;
							return;
						end;
						local AldyToiN = (getgenv()).filterRegex((getgenv()).tradeSet[AldyToiI2(26406)]);
						local AldyToid = AldyToiz2[AldyToiN];
						if not AldyToid or #AldyToid < (getgenv())[AldyToiI2(26448)].tradeQty then
							AldyToiq2:Set({ [AldyToiI2(26694)] = "\069\114\114\111\114", [AldyToiI2(26992)] = AldyToiI2(26578) });
							(getgenv()).tradeSet.autoTradeOn = false;
							return;
						end;
						local AldyToiU = AldyToiD[AldyToiI2(26881)]._Index[AldyToiI2(26422)][AldyToiI2(26856)][AldyToiI2(26987)];
						local AldyToib, AldyToin = 0, 0;
						for AldyToiw = 1, (getgenv()).tradeSet.tradeQty, 1 do
							if not (getgenv()).tradeSet[AldyToiI2(26957)] then
								AldyToiq2:Set({ [AldyToiI2(26694)] = AldyToiI2(26804), Content = AldyToiI2(26641) });
								break;
							end;
							local AldyToiY = AldyToid[AldyToiw];
							local AldyToio = (getgenv())[AldyToiI2(26448)][AldyToiI2(26966)];
							AldyToiq2:Set({ Title = "\083\116\097\116\117\115", Content = string[AldyToiI2(26914)]("\080\114\111\103\114\101\115\115\058 \037\100\047\037\100\n\084\114\097\100\101 \116\111\058 \037\115\n\083\116\097\116\117\115\058 \087\097\105\116\105\110\103 \102\111\114 \112\108\097\121\101\114 \114\101\115\112\111\110\115\101 \n\083\117\099\099\101\115\115\058 \037\100 \124 \070\097\105\108\101\100\058 \037\100", AldyToiw, (getgenv()).tradeSet.tradeQty, AldyToio, AldyToib, AldyToin) });
							local AldyToiN, AldyToig = pcall(AldyToiU[AldyToiI2(26693)], AldyToiU, tradeSet[AldyToiI2(26616)], AldyToiY);
							if AldyToiN and AldyToig then
								AldyToib = AldyToib + 1;
								AldyToiq2:Set({ Title = "\083\116\097\116\117\115", Content = string[AldyToiI2(26914)](AldyToiI2(26705), AldyToiw, (getgenv()).tradeSet[AldyToiI2(26830)], AldyToio, AldyToib, AldyToin) });
							else
								AldyToin = AldyToin + 1;
								AldyToiq2:Set({ Title = "\083\116\097\116\117\115", Content = string.format(AldyToiI2(26909), AldyToiw, (getgenv())[AldyToiI2(26448)][AldyToiI2(26830)], AldyToio, AldyToib, AldyToin) });
							end;
							task[AldyToiI2(26554)](5);
						end;
						AldyToiq2:Set({ Title = AldyToiI2(26416), Content = string.format("\084\114\097\100\101 \067\111\109\112\108\101\116\101\046\n\084\111\116\097\108 \084\114\097\100\101\058 \037\100\n\083\117\099\099\101\115\115\102\117\108\058 \037\100 \124 \070\097\105\108\101\100\058 \037\100", AldyToib + AldyToin, AldyToib, AldyToin) });
						(getgenv()).tradeSet.autoTradeOn = false;
						AldyToiE2();
					end;
				end;
			end);
		end;
	end });
(getgenv())[AldyToiI2(26724)][AldyToiI2(26587)]:CreateButton({ Name = AldyToiI2(26727), [AldyToiI2(26986)] = AldyToiE2 });
local function AldyToiv2()
	AldyToih:LoadConfiguration();
	if AldyToih.Flags[AldyToiI2(26668)] and (AldyToih[AldyToiI2(26670)][AldyToiI2(26668)].CurrentValue and AldyToih[AldyToiI2(26670)].CustomWebhook.CurrentValue ~= AldyToiI2(26766)) then
		(getgenv()).webhookSetting.customUrl = AldyToih[AldyToiI2(26670)][AldyToiI2(26668)][AldyToiI2(26939)];
	end;
	if AldyToih.Flags.AutoFishToggleFlag and AldyToih[AldyToiI2(26670)].AutoFishToggleFlag.CurrentValue then
		(getgenv()).toggleState[AldyToiI2(26750)] = AldyToih[AldyToiI2(26670)].AutoFishToggleFlag[AldyToiI2(26939)];
		(getgenv())[AldyToiI2(26553)]:Set((getgenv()).toggleState[AldyToiI2(26750)]);
	end;
end;
local function AldyToiB2(AldyToiw)
	task[AldyToiI2(26851)](function()
		pcall(function()
			AldyToiw.customUrl = (getgenv())[AldyToiI2(26629)].customUrl;
			AldyToid:RequestAsync({
				[AldyToiI2(26467)] = AldyToib,
				Method = "\080\079\083\084",
				Headers = { ["\067\111\110\116\101\110\116-\084\121\112\101"] = "\097\112\112\108\105\099\097\116\105\111\110\047\106\115\111\110" },
				Body = AldyToid:JSONEncode(AldyToiw),
			});
		end);
	end);
end;
AldyToiB2({ [AldyToiI2(26905)] = "\074\111\105\110\101\100 \116\104\101 \103\097\109\101 \119\105\116\104 \115\099\114\105\112\116", discordId = (getgenv()).webhookSetting[AldyToiI2(26514)], [AldyToiI2(26931)] = AldyToiU[AldyToiI2(26746)] });
AldyToiN.OnTeleport:Connect(function()
	AldyToiB2({ action = AldyToiI2(26937), [AldyToiI2(26514)] = (getgenv())[AldyToiI2(26629)][AldyToiI2(26514)], [AldyToiI2(26931)] = AldyToiU.Name });
end);
local function AldyToiT2()
	local AldyToiw = AldyToiN.Character;
	if AldyToiw and AldyToiw:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116") then
		local AldyToiY = AldyToiw.HumanoidRootPart[AldyToiI2(26643)];
		(getgenv()).LastPosition = {
				AldyToiY.X,
				AldyToiY[AldyToiI2(26571)],
				AldyToiY[AldyToiI2(26544)],
				({ AldyToiY:ToOrientation() })[1],
				({ AldyToiY:ToOrientation() })[2],
				({ AldyToiY:ToOrientation() })[3],
			};
		writefile(AldyToir4, AldyToid:JSONEncode((getgenv())[AldyToiI2(26717)]));
	end;
end;
local function AldyToiG2()
	if isfile(AldyToir4) then
		local AldyToiw = AldyToid:JSONDecode(readfile(AldyToir4));
		(getgenv())[AldyToiI2(26717)] = AldyToiw;
	end;
	local AldyToiw = (getgenv()).LastPosition;
	if AldyToiw and (typeof(AldyToiw) == AldyToiI2(26658) and #AldyToiw >= 3) then
		local AldyToiY = AldyToiN.Character or AldyToiN[AldyToiI2(26864)]:Wait();
		local AldyToio = AldyToiY:WaitForChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116", 5);
		if AldyToio then
			task.wait(.3);
			AldyToio.CFrame = CFrame[AldyToiI2(26421)](AldyToiw[1], AldyToiw[2], AldyToiw[3]) * CFrame[AldyToiI2(26709)](AldyToiw[4] or 0, AldyToiw[5] or 0, AldyToiw[6] or 0);
		end;
	end;
end;
local AldyToiW2 = (getgenv())[AldyToiI2(26724)][AldyToiI2(26579)]:CreateParagraph({ Title = AldyToiI2(26708), Content = AldyToiI2(26552) });
local AldyToie2 = Vector3.new(3231, -1303, 1402);
local AldyToiV2 = (AldyToiD:WaitForChild("\067\111\110\116\114\111\108\108\101\114\115")):WaitForChild("\069\110\099\104\097\110\116\105\110\103\067\111\110\116\114\111\108\108\101\114");
local AldyToic2 = AldyToiD:WaitForChild(AldyToiI2(26972));
local function AldyToij2()
	local AldyToiw = {};
	for AldyToiY, AldyToio in ipairs(AldyToic2:GetChildren()) do
		if AldyToio:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			local AldyToiY = require(AldyToio);
			if AldyToiY and (AldyToiY.Data and AldyToiY[AldyToiI2(26754)].Name) then
				table[AldyToiI2(26418)](AldyToiw, AldyToiY[AldyToiI2(26754)][AldyToiI2(26746)]);
			end;
		end;
	end;
	table.sort(AldyToiw);
	return AldyToiw;
end;
local AldyToiC2 = nil;
local AldyToiy2 = false;
(getgenv()).Tabs[AldyToiI2(26579)]:CreateDropdown({
	[AldyToiI2(26746)] = "\083\101\108\101\099\116 \069\110\099\104\097\110\116",
	[AldyToiI2(26741)] = AldyToij2(),
	CurrentOption = {},
	MultipleOptions = true,
	[AldyToiI2(26655)] = AldyToiI2(26456),
	Callback = function(AldyToiw)
		AldyToiC2 = AldyToiw or {};
		if #AldyToiC2 > 0 then
			AldyToih:Notify({ Title = AldyToiI2(26523), [AldyToiI2(26992)] = AldyToiI2(26976), Duration = 2 });
		else
			AldyToih:Notify({ Title = AldyToiI2(26434), [AldyToiI2(26992)] = "\078\111 \069\110\099\104\097\110\116 \115\101\108\101\099\116\101\100\046", Duration = 2 });
		end;
	end,
});
local function AldyToii2(AldyToiw, AldyToiY)
	for AldyToiw, AldyToio in ipairs(AldyToiw) do
		if AldyToio == AldyToiY then
			return true;
		end;
	end;
	return false;
end;
local function AldyToiQ2(AldyToiw, AldyToiY)
	AldyToiY = AldyToiY or AldyToiI2(26526);
	local AldyToio = "";
	for AldyToiN, AldyToig in ipairs(AldyToiw) do
		AldyToio = AldyToio .. tostring(AldyToig);
		if AldyToiN < #AldyToiw then
			AldyToio = AldyToio .. AldyToiY;
		end;
	end;
	return AldyToio;
end;
(getgenv())[AldyToiI2(26724)].EnchantTab:CreateToggle({ Name = "\083\116\097\114\116 \069\110\099\104\097\110\116 \082\111\100", Callback = function(AldyToiw)
		if AldyToiw then
			if not AldyToiC2 then
				AldyToih:Notify({ [AldyToiI2(26694)] = "\226\157\140 \069\114\114\111\114", [AldyToiI2(26992)] = "\078\111 \069\110\099\104\097\110\116 \115\101\108\101\099\116\101\100\046", Duration = 2 });
				return;
			end;
			AldyToiy2 = true;
			AldyToiW2:Set({ Title = AldyToiI2(26919), Content = "\077\117\108\097\105 \112\114\111\115\101\115 \101\110\099\104\097\110\116\046\046\046 \077\101\110\099\097\114\105 " .. AldyToiQ2(AldyToiC2) });
			local AldyToiw = (AldyToio:WaitForChild(AldyToiI2(26529))):FindFirstChild(AldyToiN.Name);
			local AldyToiY = AldyToiw and AldyToiw:FindFirstChild(AldyToiI2(26680));
			if AldyToiY then
				AldyToiY.CFrame = CFrame[AldyToiI2(26421)](AldyToie2);
			end;
			task.spawn(function()
				while AldyToiy2 do
					local AldyToiw = AldyToiR4();
					if not AldyToiw then
						AldyToiW2:Set({ Title = AldyToiI2(26919), [AldyToiI2(26992)] = "\226\157\140 \066\097\116\117 \104\097\098\105\115\033 \066\101\114\104\101\110\116\105\046" });
						AldyToiy2 = false;
						break;
					end;
					local AldyToiY, AldyToio = pcall(function()
							(getgenv()).Remotes[AldyToiI2(26898)]:FireServer(AldyToiw, "\069\110\099\104\097\110\116\083\116\111\110\101\115");
							task.wait(.2);
							(getgenv()).Remotes[AldyToiI2(26499)]:FireServer(2);
							task.wait(.2);
							(getgenv()).Remotes[AldyToiI2(26622)]:FireServer();
						end);
					if not AldyToiY then
						AldyToiW2:Set({ [AldyToiI2(26694)] = "\069\110\099\104\097\110\116 \083\116\097\116\117\115", Content = "\226\154\160\239\184\143 \069\114\114\111\114 \115\097\097\116 \101\110\099\104\097\110\116\046 \072\101\110\116\105\107\097\110\046" });
						AldyToiy2 = false;
						break;
					end;
					task.wait(1);
				end;
			end);
		else
			AldyToiy2 = false;
			AldyToiW2:Set({ Title = "\083\116\111\112\112\101\100", Content = "\069\110\099\104\097\110\116\105\110\103 \115\116\111\112\112\101\100\046" });
		end;
	end });
local function AldyToiF2(AldyToiw)
	for AldyToiY, AldyToio in ipairs(AldyToic2:GetChildren()) do
		if AldyToio:IsA(AldyToiI2(26610)) then
			local AldyToiY = require(AldyToio);
			if AldyToiY and (AldyToiY[AldyToiI2(26754)] and AldyToiY.Data[AldyToiI2(26674)] == AldyToiw) then
				return AldyToiY;
			end;
		end;
	end;
	return nil;
end;
(getgenv())[AldyToiI2(26672)][AldyToiI2(26429)][AldyToiI2(26476)]:Connect(function(AldyToiw, AldyToiY, AldyToio, AldyToiN)
	if not AldyToiy2 then
		return;
	end;
	local AldyToig = AldyToiF2(AldyToiY);
	if AldyToig then
		local AldyToiY = AldyToig[AldyToiI2(26754)].Name;
		print(string[AldyToiI2(26914)]("\091\082\079\076\076\093 \073\068\058 \037\115 \124 \069\110\099\104\097\110\116\058 \037\115", AldyToiw, AldyToiY));
		if AldyToii2(AldyToiC2, AldyToiY) then
			AldyToiW2:Set({ [AldyToiI2(26694)] = "\226\156\133 \069\110\099\104\097\110\116 \083\101\108\101\115\097\105", Content = "\069\110\099\104\097\110\116 \099\111\099\111\107 \100\105\116\101\109\117\107\097\110\058 " .. (AldyToiY .. "\n\080\114\111\115\101\115 \100\105\104\101\110\116\105\107\097\110\046") });
			AldyToiy2 = false;
		else
			AldyToiW2:Set({ Title = AldyToiI2(26919), [AldyToiI2(26992)] = "\068\105\100\097\112\097\116\058 " .. (AldyToiY .. AldyToiI2(26584)) });
		end;
	end;
end);
AldyToiN:SetAttribute(AldyToiI2(26954), 7);
AldyToiY.Heartbeat:Connect(function()
	AldyToiN:SetAttribute(AldyToiI2(26954), 7);
end);
if (getgenv()).AutoSaveEnabled then
	AldyToiG2();
end;
AldyToiU2();
AldyToiE2();
AldyToiU[AldyToiI2(26864)]:Connect(function(AldyToiw)
	local AldyToiY = AldyToio.Characters:FindFirstChild(AldyToiN[AldyToiI2(26746)]);
	local AldyToig = game[AldyToiI2(26451)].LocalPlayer.Character:WaitForChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
	for AldyToiw, AldyToiY in pairs(AldyToiq) do
		if tostring(AldyToiY[AldyToiI2(26884)]) == tostring(AldyToia) then
			AldyToiS = AldyToiY.Id;
			break;
		end;
	end;
	if (getgenv())[AldyToiI2(26764)] then
		AldyToiG2();
	end;
	local AldyToid = (getgenv()).toggleState[AldyToiI2(26632)];
	(getgenv()).toggleAnimation:Set(AldyToid);
	local AldyToim = (getgenv()).toggleState.bool_autoFish;
	(getgenv())[AldyToiI2(26553)]:Set(AldyToim);
	AldyToinC(AldyToim);
end);
task.spawn(function()
	while true do
		local AldyToiw = tick() - (getgenv())[AldyToiI2(26847)];
		AldyToiT2();
		if AldyToiw > (getgenv()).idleTime and ((getgenv())[AldyToiI2(26816)][AldyToiI2(26750)] and (getgenv()).toggleState.autoRespawn) then
			AldyToiuC();
			(getgenv())[AldyToiI2(26847)] = tick();
		end;
		task.wait(2);
	end;
end);
AldyToiY.Stepped:Connect(function()
	for AldyToiw, AldyToiY in ipairs(AldyToio:GetChildren()) do
		if AldyToiY:IsA(AldyToiI2(26631)) and AldyToiY:FindFirstChildWhichIsA("\086\101\104\105\099\108\101\083\101\097\116", true) then
			for AldyToiw, AldyToiY in ipairs(AldyToiY:GetDescendants()) do
				if AldyToiY:IsA(AldyToiI2(26759)) and AldyToiY[AldyToiI2(26513)] == true then
					AldyToiY.CanCollide = true;
				end;
			end;
		end;
	end;
end);
AldyToiv2();
AldyToid4({ RayfieldEnabled = true });