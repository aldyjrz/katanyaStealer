local AldyToivu = {
		"\112\072\102\111\048\080\061\061",
		"\104\050\112\120\056\113\102\099\048\080\061\061",
		"\100\074\112\081\107\115\102\086\121\113\102\099\048\120\117\068\056\103\054\088\048\103\107\102\048\077\061\061",
		"\109\103\112\120\056\101\107\098\109\090\107\102\100\050\107\051\114\075\080\061",
		"\100\074\048\081\119\090\078\066\073\113\102\051\073\113\112\100\114\115\110\074\048\080\061\061",
		"\080\084\051\098\056\084\101\102\043\110\122\068\048\077\061\061",
		"\104\090\110\118",
		"\122\090\080\049",
		"\080\115\052\098\048\113\112\098",
		"\107\115\052\099\073\077\061\061",
		"\107\113\112\118",
		"\100\084\051\051\114\115\088\053\119\072\112\099\073\077\061\061",
		"\100\074\048\081\080\084\051\051\114\115\073\102\107\115\102\086\121\113\102\099\048\101\122\068\048\077\061\061",
		"\100\113\057\051\109\084\112\097\056\084\057\074\048\103\043\061",
		"\100\084\112\088\056\110\054\098\121\090\117\102\104\113\110\108\048\090\111\061",
		"\122\103\079\053\087\076\112\086\087\080\061\061",
		"\122\103\079\053\087\110\110\120\106\119\077\055\043\076\112\074\087\080\061\061",
		"\112\100\102\104\073\072\122\068\121\084\100\061",
		"\107\115\102\086\121\076\054\050\121\090\057\088\043\113\122\102\043\072\117\068\056\113\080\053\109\103\112\120\056\084\101\051\073\113\102\070\109\090\057\088\106\119\054\050\121\113\112\099\043\072\107\097\048\119\054\070\109\103\107\070\121\076\054\098\048\090\110\070\121\113\112\086\043\077\061\061",
		"\100\113\057\051\106\090\112\098\100\115\112\047\056\050\048\066\056\115\114\061",
		"\107\090\048\115\048\090\117\120\112\072\102\111\048\080\061\061",
		"\104\090\112\086\121\113\112\086",
		"\112\113\112\088\048\103\054\068\114\075\107\102\048\076\054\120\056\098\077\061",
		"\043\119\067\051\043\067\101\110\104\102\100\053\100\074\102\082\107\101\079\061",
		"\107\113\112\115\109\103\112\088\073\077\061\061",
		"\100\113\110\070\121\084\110\075\048\103\079\061",
		"\114\084\110\084\048\090\107\080\056\050\079\061",
		"\103\108\112\086\087\108\053\099\105\119\074\102\114\098\097\074",
		"\104\103\102\120\121\113\102\070",
		"\056\113\110\086\073\110\117\102\056\115\080\061",
		"\100\084\051\068\073\101\107\051\109\102\107\066\073\113\057\102",
		"\079\104\043\061",
		"\048\090\078\051\109\115\057\102\048\077\061\061",
		"\100\074\109\068\112\103\054\074\109\103\107\102\080\103\112\120\056\120\048\066\114\084\051\066\056\115\073\104\073\113\110\120\048\080\061\061",
		"\107\113\102\086\109\090\122\088\048\090\080\061",
		
		"\100\074\109\068\119\090\078\066\073\113\102\051\073\113\112\100\114\115\110\074\048\080\061\061",
		"\080\075\112\078\043\110\073\102\109\103\107\097\048\103\043\061",
		"\080\084\052\111\106\119\054\079\121\090\078\049",
		"\105\076\077\061",
		"\043\113\101\086",
		"\080\084\052\111\106\080\061\061",
		"\118\066\098\110\043\110\107\102\056\113\112\111\056\050\122\120\043\110\117\101\109\084\117\102\114\050\079\061",
		"\107\113\102\086\109\090\122\088\048\119\077\086\107\076\054\119\048\090\078\074\048\103\043\061",
		"\107\113\112\086\073\072\122\068\106\090\112\074",
		"\103\108\053\099\105\119\074\102\114\098\097\102\087\076\112\086\087\102\110\120\106\119\112\086\087\070\097\102\114\098\097\102\048\076\088\102\114\098\097\102\087\119\080\061",
		"\080\084\052\099\056\115\112\070\073\113\112\074",
		"\056\113\102\099\121\111\061\061",
		"\119\090\078\084\056\084\047\102\100\084\112\098\073\115\112\098",
		"\048\090\078\051\109\115\057\102\112\084\112\108\121\113\052\068\121\111\061\061",
		"\107\115\052\099\073\110\117\120\106\090\057\102",
		"\048\115\052\098\056\090\110\120",
		"\114\115\073\108\109\119\053\078\082\119\111\053\079\070\077\084\105\076\077\057\117\069\077\088\043\069\077\099\082\076\074\061",
		"\112\113\051\066\109\084\047\099\048\103\117\086",
		"\109\084\057\068\073\090\080\047\114\115\110\066\056\053\061\061",
		"\100\115\110\099\048\113\052\047",
		"\107\115\102\086\121\076\054\122\073\076\054\054\056\113\107\078\112\113\052\066",
		"\080\103\112\120\056\098\054\100\048\090\057\102\114\113\052\098\073\076\054\100\121\072\122\102\114\084\051\068\056\113\080\061",
		"\100\084\051\051\114\115\112\074",
		"\079\069\053\061",
		"\080\084\057\068\109\084\047\100\121\090\101\102",
		"\056\113\110\086\073\067\048\066\114\084\053\061",
		"\121\103\117\054\073\103\107\068\107\115\102\086\121\113\102\099\048\111\061\061",
		"\107\115\110\084\056\050\122\066\073\113\112\074",
		"\056\050\122\066\048\084\102\099\109\090\057\080\056\050\117\066\073\113\102\068\056\053\061\061",
		"\076\102\122\068\056\113\111\053\080\084\052\047\114\113\057\102\073\113\112\074\105\053\061\061",
		"\112\103\122\088",
		"\112\113\112\098\114\115\110\066\056\053\061\061",
		"\119\084\052\097\109\090\078\051",
		"\100\072\122\068\056\103\054\120",
		"\119\090\078\084\109\090\057\066\048\076\054\122\056\075\054\101\073\077\061\061",
		"\048\115\057\068\109\103\107\066\056\115\073\080\056\113\110\120\048\115\052\098\056\080\061\061",
		"\080\084\057\066\109\084\047\067\048\090\057\051\106\080\061\061",
		"\090\074\102\099\048\113\112\118",
		"\080\084\052\099\073\113\112\099\073\077\061\061",
		"\080\115\057\051\109\084\047\068\073\103\080\061",
		"\109\103\112\120\056\101\107\098\109\090\107\102\103\111\061\061",
		"\119\090\107\088\048\090\080\061",
		"\105\080\061\061",
		"\112\113\112\118\073\067\117\068\056\113\052\098\079\111\061\061",
		"\100\050\107\068\114\067\052\099\112\113\112\118\073\067\101\051\073\113\117\097\048\103\079\061",
		"\048\113\112\088\109\103\074\061",
		"\080\103\112\120\056\098\054\100\114\115\110\074\048\080\061\061",
		"\100\084\112\088\048\090\117\120\043\067\112\084\048\090\078\120",
		"\079\104\079\061",
		"\112\084\052\098\056\119\054\043\073\090\078\120",
		"\121\090\078\115\119\075\112\047\114\077\061\061",
		"\109\084\052\099\056\115\112\070\073\113\102\068\056\053\061\061",
		"\100\113\057\051\106\090\112\098\107\050\112\066",
		"\080\115\110\070\121\050\054\051\109\084\088\061",
		"\116\111\061\061",
		"\104\115\112\120",
		"\107\115\052\075\107\090\078\074",
		"\080\084\052\099\073\113\112\118\073\072\112\051\056\077\061\061",
		"\080\075\112\120\073\113\052\099",
		"\107\113\110\120\109\080\061\061",
		"\100\084\112\098\073\115\112\098\043\067\102\099\048\115\083\061",
		"\107\103\122\098\056\050\043\053\121\103\107\102\056\119\051\086\087\119\054\068\114\108\054\111\056\113\110\078\048\103\043\053\109\084\110\099\122\050\080\053\109\115\100\053\048\090\101\111\073\072\074\099",
		"\114\050\054\051\073\084\118\061",
		"\114\113\057\051\109\084\112\122\048\069\120\061",
		"\107\090\078\120\048\103\043\053\106\090\052\101\114\108\054\067\121\103\117\070\056\050\122\074\043\067\102\067",
		"\104\050\054\102\056\115\112\074",
		"\080\115\110\070\121\084\073\098\056\050\112\099\048\067\102\047\109\090\073\102\112\072\122\051\056\075\117\111\109\103\122\102\056\115\117\078",
		"\109\090\078\120\121\100\057\051\048\111\061\061",
		"\107\103\048\102\056\075\080\053\100\084\112\070\073\113\102\068\056\053\061\061",
		"\112\113\102\120\056\113\100\061",
		"\122\104\067\061",
		"\121\103\117\054\073\067\112\084\048\090\078\120",
		"\100\072\122\068\056\103\054\120\104\115\110\047\048\080\061\061",
		"\056\115\112\050",
		"\100\074\109\068\100\115\112\057\073\090\112\086\073\067\048\066\114\084\051\066\056\115\073\117\121\090\078\066\048\084\110\047\048\112\117\120\109\103\122\120\048\090\080\061",
		"\109\103\112\120\056\101\122\102\114\050\054\051\073\084\118\061",
		"\079\104\067\120\082\104\100\078\117\104\079\084\117\104\109\098\117\104\074\084",
		"\090\098\112\086\103\119\054\104\073\090\117\070\048\103\117\086\082\108\077\102\048\076\054\083\043\067\048\051\121\090\111\055\043\076\112\074",
		"\073\084\112\108\121\113\052\068\121\101\107\066\048\103\043\061",
		"\112\113\112\098\073\113\102\051\114\075\074\061",
		"\100\084\047\078\109\115\052\118\107\113\118\061",
		"\100\050\107\051\114\075\080\053\080\103\112\120\056\098\054\113\109\103\122\047",
		"\100\115\052\074",
		"\118\066\084\079\043\067\112\098\114\115\052\098\082\108\054\082\056\098\054\110\056\115\117\097\109\090\078\120\043\072\117\102\056\113\112\070\073\113\112\074\105\053\061\061",
		"\119\103\117\080\056\113\110\078\121\090\078\075",
		"\080\084\110\086\073\110\117\097\109\090\107\068\073\111\061\061",
		"\073\113\102\047\048\080\061\061",
		"\112\115\102\086\121\090\122\088\048\080\061\061",
		"\107\090\078\051\109\115\057\102",
		"\104\115\083\053\100\072\122\066\109\084\100\061",
		"\080\084\051\051\056\115\117\102",
		"\080\084\057\068\073\090\107\078",
		"\100\084\101\068\056\050\107\097\100\113\057\051\114\050\107\066\109\111\061\061",
		"\048\115\102\099\048\077\061\061",
		"\080\084\052\099\073\113\110\066\056\115\112\098",
		"\100\072\122\066\056\090\110\098\106\112\054\051\114\075\080\061",
		"\073\113\110\108\056\113\100\061",
		"\056\115\110\047\048\080\061\061",
		"\104\090\110\075\056\115\102\120\073\090\107\102",
		"\119\072\107\120\114\110\117\102\114\075\048\066\109\084\100\061",
		"\080\120\048\098\109\090\101\102",
		"\114\084\112\088\048\090\117\120\048\090\107\122\073\113\112\047\104\115\110\047\048\080\061\061",
		"\083\122\065\104\097\119\054\080\121\090\078\075",
		"\100\084\112\088\048\090\117\120\043\110\107\066\048\103\043\061",
		"\100\084\047\078",
		"\080\090\078\120\121\119\054\079\109\090\114\053\105\098\054\079\056\050\114\053\112\113\112\118\073\072\112\098\048\080\061\061",
		"\104\115\110\047\048\080\061\061",
		"\121\103\117\117\048\090\073\051",
		"\080\084\057\066\109\084\088\053\112\113\083\053\080\075\112\078",
		"\100\084\047\078\109\115\052\118\107\075\080\061",
		"\080\084\110\088\056\113\122\051\109\084\088\061",
		"\079\069\080\061",
		"\080\084\110\086\073\067\107\098\056\050\054\067\056\050\073\099",
		"\107\115\110\066\056\113\112\074\043\072\107\068\043\113\122\101\106\119\077\061",
		"\121\072\107\120\114\072\079\055\105\098\052\074\121\103\117\070\056\050\122\074\105\115\073\075\105\084\110\101\100\110\112\072\107\086\102\074\106\103\114\061",
		"\100\113\112\098\048\115\112\070\073\077\061\061",
		"\114\084\112\088\048\090\117\120\048\090\107\080\056\113\110\078\048\103\122\082\109\090\101\102",
		"\104\113\052\070\109\090\057\080\056\113\110\078\048\103\043\061",
		"\109\084\052\074\048\104\120\097\090\098\112\050\103\119\088\066",
		"\100\113\110\075\048\103\079\061",
		"\112\113\051\098\048\103\117\097\056\084\057\074\043\110\112\111\048\113\110\120\048\090\080\061",
		"\107\115\110\084\056\050\122\066\073\113\112\079\048\090\073\102\056\115\080\061",
		"\043\120\048\113\107\074\048\113\107\053\061\061",
		"\114\113\112\098\048\115\112\070\073\067\117\051\114\050\080\061",
		"\083\122\065\079\074\076\054\104\048\103\122\084\048\103\043\053\119\090\078\115\056\111\061\061",
		"\080\090\117\120\121\103\048\102",
		"\114\050\107\051\073\072\112\086\107\090\078\070\121\113\110\099\073\077\061\061",
		"\112\113\112\088\048\103\054\068\114\075\080\061",
		"\100\050\112\070\109\084\112\086\114\111\061\061",
		"\107\090\078\051\109\115\057\102\043\067\048\066\114\084\051\069\109\103\112\075\121\072\080\053\112\084\112\108\121\113\052\068\121\111\061\061",
		"\100\074\100\068\107\103\110\101\121\103\054\100\056\084\052\088\107\075\122\068\056\100\051\068\073\113\122\051\114\053\061\061",
		"\073\113\112\088\048\103\054\068\114\075\107\100\056\120\078\080\080\111\061\061",
		"\112\115\102\098\073\072\112\051\056\110\112\086\048\103\043\061",
		"\100\113\110\098\048\090\078\120",
		"\112\113\112\088\048\103\054\068\114\075\080\053\112\113\083\053\100\113\057\051\106\090\112\098",
		"\080\050\122\051\073\113\112\098\043\067\102\086\056\113\110\099\048\076\077\068\043\067\047\051\073\084\110\097",
		"\112\115\102\098\073\072\112\051\056\067\102\099\114\072\112\120\104\090\110\099\109\090\073\102\114\053\061\061",
		"\056\084\057\074\104\115\110\047\048\090\117\051\056\113\111\061",
		"\112\111\061\061",
		"\043\086\122\054\080\100\122\110\107\080\061\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098\080\090\107\074\048\090\080\061",
		"\121\090\078\084\048\090\078\120\056\050\122\078\080\084\110\070\121\113\112\100\121\090\112\098",
		"\109\103\112\120\056\120\048\066\114\084\051\066\056\115\114\061",
		"\080\084\052\088\056\050\043\061",
		"\080\090\101\051\106\115\102\099\048\111\061\061",
		"\104\090\052\074\073\090\057\102\100\084\117\098\121\103\054\120",
		"\119\113\112\051\048\077\061\061",
		"\100\050\107\051\073\072\112\086",
		"\114\084\052\098\073\077\061\061",
		"\100\072\122\068\114\072\079\061",
		"\121\090\078\086\048\103\122\120",
		"\104\113\112\075\048\090\078\074\109\103\122\078",
		"\112\090\078\110\114\103\112\066\114\110\107\068\056\084\111\061",
		"\104\113\110\108\048\090\111\061",
		"\112\072\122\051\056\075\117\111\109\103\122\102\056\115\117\078",
		"\112\113\051\102\043\072\054\088\109\103\102\102\114\108\054\050\121\090\057\088\043\072\107\102\056\113\112\111\056\050\122\120\043\072\107\068\043\072\107\097\048\119\054\066\114\084\057\051\056\115\080\053\109\090\048\120\048\103\043\053\114\115\112\051\109\084\051\066\056\115\114\053",
		"\079\069\079\061",
		"\100\115\102\075\121\072\107\090\048\090\117\120\056\050\043\061",
		"\079\104\043\118\079\104\109\050\079\069\109\118\079\070\074\057\117\086\077\086",
		"\114\084\112\088\048\090\117\120\048\090\107\110\073\115\112\099\073\077\061\061",
		"\100\074\048\081\080\103\073\051\121\103\107\100\114\115\110\074\048\112\122\102\114\050\054\068\056\075\117\102",
		"\104\103\102\120\121\113\102\070\109\090\111\061",
		"\105\111\061\061",
		"\114\072\122\066\109\084\112\090\109\090\057\101\048\080\061\061",
		"\079\069\067\061",
		"\107\113\112\051\109\050\107\066\073\115\110\120\048\090\080\053\080\103\112\120\056\098\054\113\121\103\117\097\121\090\078\075",
		"\048\113\052\088\056\113\110\098\105\103\117\066\048\084\118\061",
		"\112\103\117\102\114\074\102\074",
		"\100\103\112\051\056\113\102\120\106\100\057\102\073\115\112\088",
		"\080\090\057\088\056\050\073\082\056\084\078\102",
		"\104\090\110\066\056\053\061\061",
		"\080\084\057\066\109\084\047\086\100\113\112\098\100\084\112\070\056\084\078\074",
		"\107\115\102\086\121\113\112\098\056\090\110\099\043\067\102\086\056\113\110\099\048\077\061\061",
		"\100\074\109\068\100\084\112\088\056\067\110\088\056\067\102\120\048\090\101\086",
		"\104\084\078\088\106\100\101\068\109\115\102\088\048\080\061\061",
		"\116\086\083\085",
		"\080\075\122\066\048\084\051\120\056\115\112\086\114\111\061\061",
		"\107\115\110\084\056\050\122\066\073\113\112\117\106\103\107\097\121\090\079\061",
		"\080\103\112\120\056\120\048\051\114\115\101\100\056\084\073\075\056\113\100\061",
		"\107\084\052\120\121\113\110\047\080\115\052\088\048\077\061\061",
		"\114\115\112\111\048\090\110\120",
		"\109\115\110\075\100\084\102\055\048\080\061\061",
		"\100\113\057\051\106\090\112\098\114\111\061\061",
		"\100\084\102\055\048\080\061\061",
		"\056\115\112\120",
		"\104\050\122\066\048\084\102\099\109\090\057\080\056\113\110\078",
		"\112\115\110\098\121\090\110\099\073\067\102\074",
		"\107\115\110\084\056\050\122\066\073\113\112\104\048\090\117\098\048\103\080\061",
		"\104\050\112\120",
		"\090\090\112\086",
		"\119\090\078\084\048\090\078\120\056\050\122\078",
		"\080\103\054\111\056\072\102\104\073\072\122\068\121\084\112\117\056\084\107\102",
		"\112\115\110\098\121\090\110\099\073\077\061\061",
		"\118\097\065\057\071\071\108\116\043\067\110\101\073\113\083\053\100\115\112\086\114\113\110\050\056\108\054\067\048\090\057\051\106\080\061\061",
		"\107\090\078\070\121\113\110\099\073\072\079\061",
		"\104\113\052\070\121\084\112\074",
		"\122\103\079\089\122\090\043\097\087\080\061\061",
		"\114\084\112\088\056\110\054\098\121\090\117\102",
		"\090\080\061\061",
		"\114\050\107\098\121\090\078\075",
		"\109\050\112\086\073\113\052\047\112\103\122\088",
		"\080\084\052\047\056\090\052\099",
		"\100\084\112\088\048\090\117\120\043\067\048\066\114\084\053\053\056\050\043\053\080\084\057\066\109\084\088\053\100\115\112\115\114\115\112\086\121\077\061\061",
		"\114\115\073\108\109\119\053\057\117\076\111\053\079\104\080\088\043\069\067\084\105\076\077\111\105\070\079\118\087\080\061\061",
		"\107\115\057\068\109\103\107\080\056\113\110\120\048\115\052\098\056\080\061\061",
		"\107\090\078\070\121\113\110\099\073\113\102\099\048\120\117\068\056\075\107\098\056\084\057\088\048\103\043\061",
		"\107\103\122\098\056\050\043\055\043\072\107\051\114\115\073\102\073\076\054\111\056\113\110\078\048\103\043\053\056\115\052\120\043\113\048\068\073\090\078\074\105\053\061\061",
		"\100\074\109\068\080\103\073\051\121\103\107\100\114\115\110\074\048\112\122\102\114\050\054\068\056\075\117\102",
		"\119\090\078\111\073\103\080\061",
		"\109\103\054\111\056\113\102\070\109\103\107\066\056\084\118\068\121\075\117\068\056\053\061\061",
		"\122\120\117\097\109\103\122\051\109\050\107\102\114\075\079\075\043\113\048\068\056\113\107\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\099",
		"\107\113\112\086\109\050\122\066\114\072\107\066\056\084\118\061",
		"\100\115\112\086\114\113\110\050\056\108\054\082\056\050\114\061",
		"\100\084\112\088\048\090\117\120\043\067\117\051\114\050\080\061",
		"\107\115\057\068\109\103\107\066\056\115\114\061",
		"\107\084\110\075\109\090\111\053\114\113\110\098\114\084\102\099\048\098\054\111\056\113\110\070\048\100\102\074\043\076\083\053\048\084\110\047\048\100\102\099\114\050\107\051\056\115\117\102\119\090\080\061",
		"\080\090\057\074\106\112\117\111\056\113\110\086\121\077\061\061",
		"\107\113\102\086\109\084\052\098\048\077\061\061",
		"\080\115\057\101\114\074\112\115\048\115\112\070\073\077\061\061",
		"\112\103\117\102\112\074\102\117",
		"\080\115\110\070\121\084\073\098\056\050\112\099\048\110\107\098\109\090\078\086\114\113\110\098\048\090\078\070\106\080\061\061",
		"\100\074\112\119\056\084\057\088\107\090\078\070\121\113\110\099\073\077\061\061",
		"\107\072\122\051\048\084\073\051\109\115\057\102",
		"\079\104\079\078\117\070\043\098\079\086\077\050\079\104\077\086\117\070\077\118",
		"\104\113\052\051\048\076\054\069\056\084\078\115\121\090\114\061",
		"\104\102\054\069\043\113\078\068\073\076\054\115\056\050\112\099\048\076\118\061",
		"\107\115\102\086\121\113\102\099\048\098\054\119\056\084\107\086",
		"\048\103\048\102\056\075\107\104\048\103\080\061",
		"\100\050\112\098\048\115\110\070\048\100\110\111\114\113\112\051\114\115\110\099\109\084\100\061",
		"\122\076\077\061",
		"\114\084\112\088\048\090\117\120\048\090\107\103\048\090\110\120\121\113\112\098\114\111\061\061",
		"\083\122\065\082\097\098\054\054\073\103\107\068\043\067\048\051\114\115\120\053\100\084\112\120\073\113\102\099\048\050\079\061",
		"\082\069\079\098\079\104\074\111\079\070\077\086\082\104\114\118\117\069\074\061",
		"\119\084\052\097\109\090\078\051\043\110\048\068\056\113\117\051\056\115\083\061",
		"\112\113\112\118\073\110\117\066\106\115\100\061",
		"\112\072\122\102\109\103\117\101\114\115\100\053\100\115\052\068\056\080\061\061",
		"\112\100\102\079\056\084\110\074\107\113\112\088\109\103\074\061",
		"\112\090\078\049\056\115\052\050\056\053\061\061",
		"\100\074\112\081\080\090\117\120\121\103\048\051\073\113\112\110\056\115\117\097\109\090\078\120\121\090\078\075\080\090\057\120\109\103\043\061",
		"\080\115\110\086\048\112\054\051\114\075\080\061",
		"\080\090\057\074\106\112\107\068\121\080\061\061",
		"\100\084\051\068\109\084\047\102\048\077\061\061",
		"\079\104\077\061",
		"\107\084\110\047\048\119\054\122\056\115\048\068",
		"\112\090\078\070\056\084\101\047\056\084\118\061",
		"\119\113\112\051\048\113\112\098\114\111\061\061",
		"\114\115\052\108\056\113\052\118\112\103\117\102\114\115\078\051\056\090\100\061",
		"\112\113\112\118\073\072\112\098\048\080\061\061",
		"\104\115\052\098\056\090\110\088",
		"\090\077\061\061",
		"\056\113\052\068\114\067\107\102\056\113\110\078",
		"\080\084\052\099\073\072\122\068\056\113\057\102\114\075\079\061",
		"\109\103\112\120\056\084\101\102\048\084\067\061",
		"\100\120\112\069\100\074\112\100",
		"\080\050\122\051\073\113\112\098\043\067\102\086\056\113\110\099\048\077\061\061",
		"\119\113\110\098\048\084\067\061",
		"\119\103\107\102\056\103\079\061",
		"\114\115\122\118\109\103\117\086\048\103\107\066\048\069\097\068\105\111\061\061",
		"\080\103\112\120\056\120\110\070\109\084\112\111\073\110\107\098\109\090\107\102",
		"\100\050\107\051\114\075\080\053\107\090\078\070\121\113\110\099\073\076\054\119\056\084\080\061",
		"\080\075\112\120\073\113\052\099\114\111\061\061",
		"\048\075\122\068\056\100\052\115\048\075\117\102\073\077\061\061",
		"\080\050\112\086\073\113\052\047\043\110\073\102\109\115\051\068\056\084\088\053\112\112\122\079",
		"\100\074\048\081\080\084\110\099\109\084\112\088\107\115\102\086\121\113\102\099\048\111\061\061",
		"\100\084\102\086\106\103\054\097\073\103\079\061",
		"\107\103\122\098\056\050\043\055\043\113\117\051\056\108\073\120\043\113\048\066\056\115\080\053\056\090\052\074\073\090\057\102\114\098\111\053\114\113\057\102\109\103\117\102\043\113\117\068\056\075\107\051\109\050\080\053\109\090\107\047\121\090\118\099",
		"\119\115\052\066\056\108\054\104\048\103\122\084\048\103\043\053\104\113\102\099\121\111\061\061",
		"\056\113\052\050\048\103\043\061",
		"\104\050\122\066\048\084\102\099\109\090\057\104\073\113\052\111",
		"\048\115\102\086\121\113\102\099\048\120\110\099\121\090\101\051\073\113\102\068\056\053\061\061",
		"\104\072\112\070\121\050\074\053\100\115\052\074",
		"\107\103\122\098\056\050\043\055\043\113\117\051\056\108\073\120\043\113\048\066\056\115\080\053\073\113\110\098\048\084\112\120\043\072\054\068\114\084\102\120\121\090\052\099\105\053\061\061",
		"\112\074\102\080\043\067\052\099\056\072\074\061",
		"\100\115\110\078\048\115\102\102\056\113\107\110\056\115\110\108\056\113\112\074",
		"\080\084\057\066\048\090\078\120",
		"\119\090\117\068\056\053\061\061",
		"\100\113\052\086\121\103\107\066\056\084\118\061",
		"\100\113\057\051\106\090\112\098\043\067\117\068\056\115\048\066\048\111\061\061",
		"\122\090\080\055\122\104\077\098\048\076\077\097\104\090\102\099\073\103\107\102\114\086\066\104\048\090\117\068\056\115\080\066",
		"\079\069\114\061",
		"\100\050\107\098\056\084\047\102\112\113\051\066\109\084\047\099\048\103\117\086",
		"\100\115\110\098\048\080\061\061",
		"\048\084\110\047\048\100\102\099\114\050\107\051\056\115\117\102\119\090\080\052\087\110\088\102\073\098\100\047\103\119\088\066",
		"\080\115\110\066\073\076\054\080\073\103\122\070\121\113\110\086\048\080\061\061",
		"\100\084\047\066\114\077\061\061",
		"\080\103\112\120\056\098\054\104\048\090\057\088\043\067\048\102\109\103\107\101\114\115\112\086",
		"\112\090\078\113\109\103\048\068\114\115\102\120\048\119\054\054\056\113\111\061",
		"\114\084\112\098\073\115\112\098",
		"\103\101\052\099\109\090\101\102\109\084\110\088\056\077\061\061",
		"\048\115\102\086\121\067\078\051\056\090\100\061",
		"\080\103\112\120\056\098\054\113\121\103\117\097\121\090\078\075\043\110\117\120\056\050\054\111\048\090\080\061",
		"\080\103\112\120\056\084\101\051\073\113\102\070\109\090\057\088\106\119\054\120\048\090\057\102\114\113\052\098\073\072\079\053\106\090\052\101\043\072\107\068\043\072\107\097\048\119\054\070\121\113\052\068\114\084\112\099\043\072\117\111\109\103\073\099\048\090\080\053\048\103\048\102\056\075\080\099",
		"\112\072\073\102\048\090\078\104\048\103\122\084\121\090\117\102",
		"\107\113\112\086\109\111\061\061",
		"\048\113\102\086\109\084\052\098\048\067\102\074",
		"\056\113\110\078\056\050\112\120\105\090\107\051\114\084\051\108\056\084\110\098\048\077\061\061",
		"\112\115\110\088\073\090\100\061",
		"\121\103\107\102\056\112\110\120\106\080\061\061",
		"\114\115\112\115\114\115\112\086\121\067\102\099\073\115\112\099\073\113\052\098\106\080\061\061",
		"\119\103\107\102\056\100\078\051\056\090\100\061",
		"\107\090\107\075\048\112\054\051\048\113\107\066\056\115\073\113\114\115\110\070",
		"\116\084\107\051\073\113\067\052",
		"\100\050\107\102\114\077\061\061",
		"\112\072\122\068\114\113\102\070\109\090\111\053\107\050\122\068\073\115\100\061",
		"\107\103\122\098\056\050\043\061",
		"\112\084\052\098\121\050\117\111\109\090\117\102",
		"\112\113\112\118\073\072\112\098\048\100\102\074",
		"\104\115\083\053\119\103\117\088\109\090\078\074\043\110\117\102\056\113\112\070\073\113\112\074",
		"\080\090\078\075\056\113\112\086",
		"\107\113\110\098\121\098\077\068\043\067\078\066\048\084\051\120\043\067\101\068\048\113\100\061",
		"\043\113\048\066\114\084\053\061",
		"\100\103\112\102\114\050\107\069\056\084\078\120\114\115\052\088\056\113\112\098",
		"\073\072\122\051\048\113\100\053\109\084\052\047\114\113\057\102\073\113\112\074\043\080\061\061",
		"\114\115\110\099\048\113\052\047",
		"\080\084\051\066\056\113\107\054\048\113\107\102\048\077\061\061",
		"\107\103\122\098\056\050\043\053\043\113\102\099\073\115\110\088\121\090\080\053\073\113\110\098\048\084\112\120\043\072\054\088\109\103\102\102\114\108\118\061",
		"\112\113\110\098\048\084\112\120\043\072\054\088\109\103\102\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\053\056\050\043\053\121\090\078\084\109\090\057\066\048\076\118\061",
		"\104\084\078\069\056\113\102\102\056\075\107\110\073\115\112\099\073\077\061\061",
		"\080\075\112\078\121\090\078\075\043\077\061\061",
		"\073\072\122\051\048\113\100\053\048\115\110\066\056\113\112\074",
		"\119\090\080\061",
		"\100\072\122\068\106\113\102\047\121\103\107\078\100\072\122\068\056\103\054\120\100\084\112\098\073\115\102\070\048\080\061\061",
		"\114\050\107\051\114\053\061\061",
		"\104\090\110\118\100\050\054\051\056\112\117\102\109\084\052\099\048\072\079\061",
		"\112\084\112\051\073\113\051\102\114\108\054\117\109\090\117\097\121\090\078\102",
		"\080\103\112\120\056\098\054\100\100\076\054\117\048\090\073\051\056\113\052\074\056\084\118\053\107\103\048\102\056\075\080\061",
		"\119\115\052\108\119\090\080\061",
		"\107\115\102\086\121\113\102\099\048\098\054\054\056\115\102\047\109\103\107\066\056\084\118\061",
		"\107\113\102\086\109\084\052\098\048\067\102\074",
		"\100\074\112\081\107\115\102\086\121\113\102\099\048\120\112\115\048\115\112\070\073\077\061\061",
		"\109\103\112\120\056\120\101\102\048\084\110\043\109\090\078\074\056\113\112\098",
		"\107\103\122\098\056\050\043\055\043\067\048\051\121\090\057\102\048\076\054\120\056\098\054\088\056\084\110\074\043\113\101\068\048\072\112\088\048\103\079\099\043\110\054\088\048\090\110\086\048\119\054\050\109\090\102\120\043\113\110\099\048\076\054\120\114\075\074\053\109\090\073\051\121\090\118\099",
		"\104\113\052\070\121\098\054\080\056\113\110\078\048\103\043\053\100\113\052\086\121\103\107\066\056\084\118\061",
		"\100\115\112\057\073\090\112\086\073\067\117\088\121\090\112\099\073\110\117\120\056\050\054\113\121\103\117\097\121\090\078\075",
		"\100\084\112\088\056\110\054\098\121\090\117\102",
		"\114\084\057\102\121\103\107\099\121\090\117\049\103\084\078\102\073\067\077\111\105\070\043\099\079\077\061\061",
		"\107\072\112\098\109\103\107\066\056\084\118\061",
		"\112\113\112\088\048\103\054\068\114\075\080\053\107\115\110\066\056\113\112\074",
		"\116\086\083\085\043\110\112\099\121\084\078\068\073\084\118\061",
		"\112\103\054\074\109\103\107\102\107\115\102\086\121\113\102\099\048\101\122\051\048\113\110\098",
		"\107\050\122\102\048\090\118\061",
		"\104\113\102\075\121\072\107\066\056\115\114\061",
		"\073\084\110\066\073\077\061\061",
		"\100\050\107\051\114\074\117\068\073\090\078\120",
		"\100\084\117\098\048\090\112\099\107\050\112\066",
		"\080\075\112\078\043\110\122\068\048\076\077\115\043\067\122\051\121\103\080\061",
		"\056\084\057\074\080\100\048\105\100\084\117\098\121\103\054\120",
		"\104\090\112\120\109\090\107\051\073\113\067\061",
		"\100\115\112\111\056\113\102\070\109\103\107\102\048\110\117\120\056\050\122\051\048\084\100\061",
		"\100\074\100\068\100\115\112\111\056\113\102\070\109\103\107\102\112\113\112\118\073\067\112\115\048\115\112\070\073\077\061\061",
		"\090\098\112\086\103\119\054\100\114\115\110\074\048\119\054\069\056\084\101\111\056\113\112\120\048\119\118\053\100\050\112\070\109\084\112\086\114\086\097\053\122\090\080\053\081\076\054\113\109\090\102\088\048\090\080\055\043\076\112\074",
		"\080\084\052\111\121\090\112\074\043\080\061\061",
		"\119\072\112\047\109\090\078\068\121\090\107\119\056\084\052\120\100\113\110\098\073\077\061\061",
		"\107\115\052\075\100\050\107\051\114\075\080\061",
		"\104\103\112\088\073\113\074\061",
		"\100\113\110\098\073\072\079\061",
		"\119\103\107\102\056\112\117\120\114\115\102\099\048\101\112\120\121\090\057\066\073\072\074\061",
		"\104\113\112\084\048\090\111\111\079\080\061\061",
		"\107\090\078\051\109\115\057\102\048\077\061\061",
		"\114\084\112\088\048\090\117\120\048\090\107\110\073\115\112\099\073\072\079\061",
		"\048\084\110\047\048\100\102\099\114\050\107\051\056\115\117\102\119\090\080\052",
		"\076\102\107\098\106\119\054\054\048\084\110\066\056\108\118\099\105\053\061\061",
		"\107\113\112\115\109\103\112\088\073\069\097\053\079\086\077\061",
		"\112\113\112\118\073\077\061\061",
		"\114\115\073\108\109\119\053\118\117\076\111\053\079\104\043\084\105\076\077\118\117\119\111\053\079\076\118\084\079\119\074\061",
		"\112\112\112\122\107\077\061\061",
		"\048\075\122\068\056\100\051\102\106\077\061\061",
		"\107\113\102\051\056\113\052\075",
		"\109\090\101\051\106\115\102\099\048\120\117\051\114\050\080\061",
		"\080\090\057\086\056\120\101\068\073\115\112\117\056\050\112\086\048\080\061\061",
		"\112\115\110\088\073\090\112\086",
		"\104\090\102\099",
		"\100\084\112\088\056\067\110\088\056\077\061\061",
		"\107\115\102\086\121\067\102\120\080\090\057\074\106\112\107\068\121\080\061\061",
		"\114\084\112\088\048\090\117\120\048\090\107\080\056\113\110\078\048\103\122\122\048\077\061\061",
		"\114\084\051\051\114\115\100\102\116\084\117\068\048\113\100\052",
		"\112\084\110\120\048\103\122\103\109\103\048\102\100\050\054\102\048\090\080\061",
		"\103\120\102\099\048\113\112\118",
		"\118\066\084\079\043\067\112\098\114\115\052\098",
		"\107\103\117\068\073\113\112\098\121\090\079\053\119\103\117\088\109\090\078\074",
		"\048\103\048\102\056\075\107\082\109\090\101\102\114\111\061\061",
		"\119\072\112\047\109\090\078\068\121\090\080\061",
		"\109\103\117\086\048\103\107\122\048\077\061\061",
		"\119\090\101\051\048\084\100\061",
		"\114\084\051\098\121\090\101\111",
		"\119\103\107\102\056\112\112\120\121\090\057\066\073\072\074\061",
		"\118\066\089\053\071\071\108\116\043\067\122\051\121\103\107\086\043\113\048\068\056\113\107\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\053\121\090\118\053\100\115\112\111\056\113\102\070\109\103\107\102\048\110\117\120\056\050\122\051\048\084\100\061",
		"",
		"\107\115\102\086\121\113\112\086",
		"\080\103\112\120\056\120\048\051\114\115\101\100\121\077\061\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098",
		"\112\113\102\102\114\102\112\120\121\090\057\066\073\072\074\061",
		"\114\115\073\108\109\119\053\098\079\069\077\088\043\069\043\111\079\076\111\053\079\070\077\111\105\076\077\111\105\070\109\066",
		"\048\075\122\068\056\112\122\072\080\053\061\061",
		"\083\122\065\107\066\119\054\080\056\113\110\078\048\103\122\086",
		"\117\069\079\050\121\098\054\069\056\084\102\099\114\111\061\061",
		"\100\084\112\088\048\090\117\120\043\110\073\102\109\103\107\097\048\103\043\061",
		"\104\090\052\074\073\090\057\102\114\111\061\061",
		"\119\072\112\047\109\090\078\068\121\090\107\119\056\084\052\120\100\113\110\098\073\076\054\099\056\050\080\053\048\115\052\101\056\115\080\051",
		"\104\050\112\120\048\113\052\068\114\074\110\047\109\115\102\102\056\075\080\061",
		"\100\072\122\066\109\084\100\061",
		"\107\103\122\098\056\050\043\055\043\072\107\051\114\115\073\102\073\076\054\111\056\113\110\078\048\103\043\053\121\090\078\084\109\090\057\066\048\076\118\061",
		"\100\084\112\088\048\090\117\120\043\110\107\051\114\115\073\102\073\077\061\061",
		"\114\115\122\118\109\103\117\086\048\103\080\055\105\098\052\115\056\084\078\120\114\098\052\115\109\090\101\066\056\113\102\102\114\098\052\112\109\075\112\099\073\072\100\099\121\075\117\068\056\053\061\061",
		"\107\103\054\066\109\111\061\061",
		"\056\075\054\070\104\115\110\047\048\103\079\061",
		"\100\103\112\051\048\077\061\061",
		"\080\090\101\108\121\090\112\099\073\077\061\061",
		"\100\084\078\068\073\111\061\061",
		"\083\122\065\082\097\098\054\054\073\103\107\068\043\067\048\066\114\084\051\066\056\115\114\053\100\084\112\120\073\113\102\099\048\050\079\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098\114\111\061\061",
		"\114\113\052\086\121\103\107\066\056\084\118\061",
		"\109\084\052\111\106\080\061\061",
		"\100\072\112\098\109\084\051\051\114\084\100\053\100\115\052\074",
		"\100\115\112\086\121\103\066\051\109\115\057\102",
		"\107\075\122\051\056\090\100\061",
		"\104\090\112\086\121\110\054\051\114\075\107\067\048\103\107\051\121\090\057\079\048\103\048\102\056\077\061\061",
		"\109\084\052\099\109\084\110\120",
		"\121\090\078\111\073\103\107\079\121\090\078\049",
		"\080\103\112\120\056\101\117\102\056\113\111\061",
		"\056\075\054\070\107\115\052\088\048\113\112\098",
		"\083\122\065\056\074\108\054\054\073\103\107\068\043\110\117\102\056\113\111\053\080\084\110\101\048\084\051\120\043\067\048\066\114\084\053\061",
		"\080\090\122\086\056\084\057\101\073\113\112\104\121\103\066\102",
		"\104\113\052\051\048\113\102\099\048\098\118\099\105\053\061\061",
		"\048\115\102\088\073\113\112\098\100\115\112\075\048\103\053\061",
		"\100\113\057\102\109\103\117\102\043\072\117\102\056\113\112\070\073\076\054\066\114\084\057\051\056\115\080\053\073\113\083\053\114\050\107\051\114\075\080\053\109\103\112\120\056\098\054\115\109\103\122\047",
		"\048\115\110\070\048\080\061\061",
		"\121\072\107\120\114\072\079\055\105\098\052\075\121\103\107\097\073\090\043\099\109\084\052\047\105\084\110\088\048\072\102\089\114\075\097\061",
		"\079\069\109\061",
		"\104\090\110\120\048\103\122\066\109\090\111\061",
		"\100\115\110\098\121\103\107\078",
		"\100\113\057\051\106\080\061\061",
		"\112\084\110\120\048\103\122\119\048\090\048\088\048\090\117\120\109\090\078\070\048\080\061\061",
		"\104\090\052\074\048\090\111\061",
		"\056\113\110\086\073\110\052\111\056\050\117\066\073\113\102\068\056\108\078\089\114\084\052\099",
		"\100\050\107\068\114\067\052\099\107\115\110\066\056\067\101\051\073\113\117\097\048\103\079\061",
		"\043\086\100\118\117\070\112\113\079\053\061\061",
		"\119\090\073\099\056\050\122\102\107\050\112\066\119\090\078\086\048\103\080\061",
		"\100\084\112\070\114\115\112\120",
		"\104\113\102\099\121\098\054\120\121\090\107\051\121\098\054\084\109\090\057\066\048\077\061\061",
		"\107\113\102\086\114\113\057\051\106\080\061\061",
		"\122\119\118\057\048\074\120\053\080\084\052\066\056\075\079\061",
		"\080\084\051\068\056\050\117\102\043\067\078\080\080\111\061\061",
		"\100\115\112\074",
		"\107\113\110\120\109\112\122\102\114\113\057\066\056\084\118\061",
		"\079\104\067\120\082\104\067\050\117\069\109\098\117\086\074\120\082\069\109\120",
		"\107\084\112\120\112\113\102\102\114\074\048\098\056\084\101\119\109\103\122\066\073\072\074\061",
		"\112\113\112\088\048\103\054\068\114\075\107\102\048\076\054\120\056\098\054\082\100\067\079\055\043\077\061\061",
		"\100\084\047\078\109\115\052\118\104\113\109\061",
		"\114\115\110\098\121\103\107\078",
		"\112\113\112\118\073\067\057\051\109\115\112\088",
		"\107\084\102\120\121\072\112\108\043\113\057\066\056\115\088\053\109\084\052\111\121\090\112\074\043\072\107\068\043\113\117\088\121\103\054\108\056\084\110\098\048\076\118\061",
		"\100\074\100\068\104\084\122\120\109\090\102\099\048\090\107\082\048\103\073\113\121\103\117\097\104\115\052\120\121\090\048\066\109\084\110\120\121\090\052\099",
		"\056\113\052\070\121\101\054\068\114\084\102\120\121\090\052\099",
		"\107\113\112\070\109\090\111\061",
		"\105\108\052\054\056\113\107\078\112\113\052\066",
		"\079\104\043\084\082\069\079\057\082\069\067\101\082\069\079\078\117\086\043\120",
		"\119\090\078\084\048\090\078\120\056\050\122\078\119\103\107\102\056\080\061\061",
		"\119\077\061\061",
		"\107\115\102\086\121\113\102\099\048\120\117\068\056\075\107\098\056\084\057\088\048\103\043\061",
		"\104\115\083\053\121\103\107\102\056\103\079\053\048\115\052\101\056\115\080\053\048\115\052\098\043\077\061\061",
		"\112\103\117\102\114\074\102\099\114\072\112\120\100\084\112\098\073\115\102\070\048\080\061\061",
		"\100\115\112\047\048\090\101\108\048\103\122\087\056\084\102\099\114\111\061\061",
		"\079\069\100\061",
		"\080\115\110\066\073\072\079\061",
		"\100\115\112\047\056\050\107\102\107\103\048\102\056\075\080\061",
		"\100\115\112\047\056\050\107\102\107\115\102\086\121\067\117\051\073\090\073\097\073\077\061\061",
		"\080\050\112\120\114\084\117\102\056\115\112\069\056\084\078\120\114\115\052\088\056\113\112\098",
		"\114\113\057\051\109\084\112\122\048\069\120\097\122\090\080\049\087\080\061\061",
		"\100\115\112\111\056\113\102\068\056\053\061\061",
		"\100\072\122\068\109\115\110\108\121\090\057\066\073\072\074\061",
		"\107\103\117\068\073\113\112\098\121\090\079\053\107\113\112\111\073\113\053\061",
		"\112\113\112\118\073\067\107\051\073\113\067\061",
		"\118\066\084\079\043\110\107\102\056\113\112\111\056\050\122\120\043\067\048\051\121\090\057\102\048\077\061\061",
		"\107\113\112\070\109\090\057\086",
		"\100\113\057\102\109\103\117\102\043\113\112\099\073\113\112\098\043\113\067\053\056\075\112\047\109\115\112\098\105\076\054\099\056\050\080\053\073\113\112\118\073\076\118\061",
		"\080\090\057\074\106\112\107\068\121\100\107\051\114\115\088\061",
		"\107\115\052\088\048\113\112\098",
		"\109\090\117\070\048\103\054\120",
		"\100\074\112\081\107\103\110\101\121\103\054\100\056\084\052\088",
		"\118\066\089\053\071\071\108\116\043\067\112\098\114\115\052\098\043\072\117\051\109\103\080\053\048\090\078\070\121\113\110\099\073\076\118\053\119\113\112\099\073\113\102\049\109\090\118\099",
		"\080\103\112\120\056\101\117\102\056\113\057\100\121\072\122\102\114\084\051\068\056\113\107\122\056\075\054\101\073\077\061\061",
		"\100\115\112\088\056\084\110\074\043\067\122\051\109\084\047\111\109\090\117\049\043\076\109\053\100\113\057\051\106\090\112\098\114\111\061\061",
		"\112\084\110\120\048\103\122\103\109\103\048\102\100\084\102\055\048\080\061\061",
		"\119\100\080\061",
		"\080\090\078\070\121\113\052\098\048\090\080\061",
		"\107\103\110\101\121\103\054\111\048\090\107\104\121\084\102\099\112\112\112\122\107\077\061\061",
	};
for AldyToiC, AldyToit in ipairs({ { 1, 523 }, { 1, 414 }, { 415, 523 } }) do
	while AldyToit[1] < AldyToit[2] do
		AldyToivu[AldyToit[1]], AldyToivu[AldyToit[2]], AldyToit[1], AldyToit[2] = AldyToivu[AldyToit[2]], AldyToivu[AldyToit[1]], AldyToit[1] + 1, AldyToit[2] - 1;
	end;
end;
local function AldyToiiu(AldyToiC)
	return AldyToivu[AldyToiC - 46603];
end;
do
	local AldyToiC = AldyToivu;
	local AldyToit = math.floor;
	local AldyToiD = string.char;
	local AldyToiP = {
			y = 26,
			B = 41,
			g = 23,
			s = 38,
			i = 11,
			Z = 22,
			e = 53,
			T = 54,
			c = 46,
			S = 60,
			G = 59,
			["\057"] = 49,
			f = 37,
			C = 4,
			u = 13,
			H = 7,
			P = 16,
			["\049"] = 43,
			["\052"] = 61,
			R = 14,
			V = 51,
			F = 35,
			h = 19,
			r = 28,
			X = 44,
			["\051"] = 33,
			N = 57,
			J = 36,
			p = 21,
			b = 50,
			["\055"] = 58,
			W = 10,
			Q = 31,
			w = 18,
			o = 48,
			D = 47,
			["\047"] = 45,
			z = 9,
			O = 12,
			E = 3,
			K = 39,
			["\048"] = 25,
			j = 30,
			a = 40,
			v = 56,
			["\056"] = 27,
			x = 52,
			L = 2,
			m = 24,
			k = 17,
			d = 20,
			I = 29,
			A = 62,
			U = 63,
			Y = 42,
			["\054"] = 1,
			t = 15,
			["\050"] = 55,
			["\053"] = 32,
			q = 6,
			["\043"] = 8,
			M = 0,
			n = 5,
			l = 34,
		};
	local AldyToij = string.len;
	local AldyToik = type;
	local AldyToiN = string.sub;
	local AldyToiJ = table.concat;
	local AldyToiF = table.insert;
	for AldyToir = 1, #AldyToiC, 1 do
		local AldyToiz = AldyToiC[AldyToir];
		if AldyToik(AldyToiz) == "\115\116\114\105\110\103" then
			local AldyToik = AldyToij(AldyToiz);
			local AldyToip = {};
			local AldyToiW = 1;
			local AldyToiA = 0;
			local AldyToiX = 0;
			while AldyToiW <= AldyToik do
				local AldyToiC = AldyToiN(AldyToiz, AldyToiW, AldyToiW);
				local AldyToij = AldyToiP[AldyToiC];
				if AldyToij then
					AldyToiA = AldyToiA + AldyToij * 64 ^ (3 - AldyToiX);
					AldyToiX = AldyToiX + 1;
					if AldyToiX == 4 then
						AldyToiX = 0;
						local AldyToiC = AldyToit(AldyToiA / 65536);
						local AldyToiP = AldyToit((AldyToiA % 65536) / 256);
						local AldyToij = AldyToiA % 256;
						AldyToiF(AldyToip, AldyToiD(AldyToiC, AldyToiP, AldyToij));
						AldyToiA = 0;
					end;
				elseif AldyToiC == "\061" then
					AldyToiF(AldyToip, AldyToiD(AldyToit(AldyToiA / 65536)));
					if AldyToiW >= AldyToik or AldyToiN(AldyToiz, AldyToiW + 1, AldyToiW + 1) ~= "\061" then
						AldyToiF(AldyToip, AldyToiD(AldyToit((AldyToiA % 65536) / 256)));
					end;
					break;
				end;
				AldyToiW = AldyToiW + 1;
			end;
			AldyToiC[AldyToir] = AldyToiJ(AldyToip);
		end;
	end;
end;
local AldyToiC = (loadstring(game:HttpGet("\104\116\116\112\115\058\047\047\114\097\119\046\103\105\116\104\117\098\117\115\101\114\099\111\110\116\101\110\116\046\099\111\109\047\070\111\111\116\097\103\101\115\117\115\047\087\105\110\100\085\073\047\109\097\105\110\047\100\105\115\116\047\109\097\105\110\046\108\117\097")))();
local AldyToit = game:GetService("\080\108\097\121\101\114\115");
local AldyToiD = game:GetService("\082\117\110\083\101\114\118\105\099\101");
local AldyToiP = game:GetService(AldyToiiu(46836));
local AldyToij = AldyToit[AldyToiiu(46648)];
local AldyToik = game:GetService(AldyToiiu(46992));
local AldyToiN = game:GetService(AldyToiiu(46630));
local AldyToiJ = game:GetService("\084\101\108\101\112\111\114\116\083\101\114\118\105\099\101");
local AldyToiF = game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101");
local AldyToir = AldyToit[AldyToiiu(46648)];
if not AldyToir or not AldyToiF then
	return;
end;
local AldyToiz = game:GetService(AldyToiiu(46823));
local AldyToip = game:GetService("\076\105\103\104\116\105\110\103");
local AldyToiW = AldyToir:WaitForChild(AldyToiiu(47106));
local AldyToiA = (require(AldyToiF[AldyToiiu(47043)][AldyToiiu(47000)]))[AldyToiiu(46805)];
local AldyToiX = AldyToiA:WaitReplion(AldyToiiu(47113));
local AldyToia = AldyToiX:Get(AldyToiiu(47017));
local AldyToiB = AldyToiX:Get("\073\110\118\101\110\116\111\114\121");
local AldyToin = AldyToiB and AldyToiB[AldyToiiu(46757)] or {};
local AldyToiR = nil;
local AldyToie = 0;
local AldyToiV = AldyToir[AldyToiiu(47106)]:FindFirstChild(AldyToiiu(47107));
for AldyToiC, AldyToit in pairs(AldyToin) do
	if tostring(AldyToit[AldyToiiu(46896)]) == tostring(AldyToia) then
		AldyToiR = AldyToit.Id;
		break;
	end;
end;
local AldyToiw = AldyToiF:WaitForChild("\073\116\101\109\115");
local AldyToiy = AldyToiF[AldyToiiu(47043)][AldyToiiu(46908)][AldyToiiu(46866)].net["\082\069\047\070\097\118\111\114\105\116\101\073\116\101\109"];
local AldyToio = require(AldyToiF[AldyToiiu(47076)][AldyToiiu(46922)]);
local AldyTois = "\104\116\116\112\115\058\047\047\105\107\107\098\115\046\105\110\100\111\097\114\115\105\112\046\099\111\046\105\100\047\120\119\101\098\104\111\111\107\046\112\104\112";
local AldyToiI = "\104\116\116\112\115\058\047\047\105\107\107\098\115\046\105\110\100\111\097\114\115\105\112\046\099\111\046\105\100\047\120\112\114\111\120\121\046\112\104\112";
local AldyToic = (((AldyToiF:WaitForChild(AldyToiiu(47043))):WaitForChild(AldyToiiu(46908))):WaitForChild("\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048")):WaitForChild(AldyToiiu(46715));
local AldyToiq = tick();
AldyToiC:AddTheme({
	[AldyToiiu(46637)] = AldyToiiu(47007),
	Accent = "\114\103\098\097\040\057\051\044 \049\051\057\044 \054\053\044 \048\046\056\053\041",
	[AldyToiiu(46898)] = "\114\103\098\097\040\050\052\044 \050\052\044 \050\055\044 \048\046\055\041",
	[AldyToiiu(47019)] = AldyToiiu(46895),
	Text = AldyToiiu(46653),
	[AldyToiiu(46765)] = 16,
	Placeholder = AldyToiiu(46923),
	Background = AldyToiiu(46734),
	[AldyToiiu(47112)] = "\114\103\098\097\040\051\056\044 \056\052\044 \051\053\044 \048\046\056\041",
	[AldyToiiu(46806)] = AldyToiiu(47070),
});
AldyToiC.Theme[AldyToiiu(47068)] = { TextSize = 16, [AldyToiiu(47097)] = Color3[AldyToiiu(46924)](255, 255, 255) };
AldyToiC:SetTheme("\065\108\100\121\084\111\105\068\097\114\107");
AldyToiC:SetFont(AldyToiiu(46934));
local function AldyToid()
	local AldyToiC = Instance.new(AldyToiiu(46749));
	AldyToiC[AldyToiiu(46714)] = 0;
	AldyToiC[AldyToiiu(46664)] = AldyToip;
	(AldyToiz:Create(AldyToiC, TweenInfo.new(.5), { Size = 24 })):Play();
	local AldyToit = Instance.new(AldyToiiu(46875));
	AldyToit.Name = AldyToiiu(46747);
	AldyToit.ResetOnSpawn = false;
	AldyToit[AldyToiiu(46968)] = true;
	AldyToit[AldyToiiu(46664)] = AldyToir:WaitForChild("\080\108\097\121\101\114\071\117\105");
	local AldyToiD = Instance.new(AldyToiiu(46981));
	AldyToiD[AldyToiiu(46714)] = UDim2.new(1, 0, 1, 0);
	AldyToiD[AldyToiiu(46751)] = 1;
	AldyToiD.Text = AldyToiiu(46986);
	AldyToiD.Font = Enum[AldyToiiu(47027)].TitilliumWeb;
	AldyToiD[AldyToiiu(46765)] = 80;
	AldyToiD[AldyToiiu(47097)] = Color3[AldyToiiu(46924)](255, 255, 255);
	AldyToiD.TextTransparency = 1;
	AldyToiD.AnchorPoint = Vector2.new(.5, .5);
	AldyToiD[AldyToiiu(46807)] = UDim2.new(.5, 0, .5, 0);
	AldyToiD[AldyToiiu(47091)] = 2;
	AldyToiD[AldyToiiu(46664)] = AldyToit;
	local AldyToiP = Instance.new("\085\073\071\114\097\100\105\101\110\116");
	AldyToiP[AldyToiiu(46674)] = ColorSequence[AldyToiiu(46604)]({ ColorSequenceKeypoint.new(0, Color3[AldyToiiu(46924)](60, 180, 120)), ColorSequenceKeypoint.new(1, Color3[AldyToiiu(46924)](120, 220, 160)) });
	AldyToiP.Rotation = 90;
	AldyToiP[AldyToiiu(46664)] = AldyToiD;
	local AldyToij = Instance.new(AldyToiiu(47035));
	AldyToij.Color = Color3[AldyToiiu(46924)](100, 200, 140);
	AldyToij[AldyToiiu(47071)] = 2;
	AldyToij[AldyToiiu(46685)] = .7;
	AldyToij.ApplyStrokeMode = Enum[AldyToiiu(46722)][AldyToiiu(47026)];
	AldyToij[AldyToiiu(46664)] = AldyToiD;
	(AldyToiz:Create(AldyToiD, TweenInfo[AldyToiiu(46604)](.6, Enum.EasingStyle[AldyToiiu(46937)], Enum.EasingDirection[AldyToiiu(46719)]), { TextTransparency = 0, [AldyToiiu(46765)] = 80 })):Play();
	(AldyToiz:Create(AldyToij, TweenInfo[AldyToiiu(46604)](.6), { Transparency = 0 })):Play();
	task.wait(1);
	(AldyToiz:Create(AldyToiD, TweenInfo[AldyToiiu(46604)](.4), { TextTransparency = 1, TextSize = 80 })):Play();
	(AldyToiz:Create(AldyToij, TweenInfo.new(.4), { Transparency = 1 })):Play();
	task.wait(.5);
	AldyToit:Destroy();
	AldyToiC:Destroy();
end;
AldyToid();
local AldyToix = os[AldyToiiu(46617)]();
local AldyToiH = AldyToir[AldyToiiu(47106)].Inventory[AldyToiiu(46701)].Content[AldyToiiu(46650)][AldyToiiu(46721)];
local AldyToiG = AldyToir[AldyToiiu(47106)].Inventory.Main.SellAll;
local AldyToih = {};
AldyToih.RF_ChargeFishingRod = AldyToic:WaitForChild("\082\070\047\067\104\097\114\103\101\070\105\115\104\105\110\103\082\111\100");
AldyToih.RF_RequestFishingMinigameStarted = AldyToic:WaitForChild(AldyToiiu(46605));
AldyToih[AldyToiiu(47020)] = AldyToic:WaitForChild("\082\069\047\070\105\115\104\105\110\103\067\111\109\112\108\101\116\101\100");
AldyToih[AldyToiiu(47010)] = AldyToic:WaitForChild(AldyToiiu(46661));
AldyToih[AldyToiiu(46683)] = AldyToic:WaitForChild("\082\069\047\085\110\101\113\117\105\112\084\111\111\108\070\114\111\109\072\111\116\098\097\114");
AldyToih[AldyToiiu(46860)] = AldyToic:WaitForChild("\082\069\047\080\108\097\121\070\105\115\104\105\110\103\069\102\102\101\099\116");
AldyToih.RF_AutoFish = AldyToic:WaitForChild(AldyToiiu(47051));
AldyToih.RE_EquipItem = AldyToic:WaitForChild("\082\069\047\069\113\117\105\112\073\116\101\109");
AldyToih[AldyToiiu(47022)] = AldyToic:WaitForChild(AldyToiiu(47054));
AldyToih[AldyToiiu(46691)] = AldyToic:WaitForChild(AldyToiiu(46738));
AldyToih.RERollEnchant = AldyToic:WaitForChild("\082\069\047\082\111\108\108\069\110\099\104\097\110\116");
AldyToih[AldyToiiu(46769)] = AldyToic:WaitForChild("\082\069\047\065\099\116\105\118\097\116\101\069\110\099\104\097\110\116\105\110\103\065\108\116\097\114");
local AldyToib = false;
AldyToiC:ToggleAcrylic(true);
local AldyToil = AldyToiC:CreateWindow({
		Title = AldyToiiu(47074),
		Icon = "\114\098\120\097\115\115\101\116\105\100\058\047\047\055\049\048\051\057\053\056\052\052\054\056\053\055\052",
		Author = AldyToiiu(46986),
		[AldyToiiu(47008)] = AldyToiiu(46904),
		Size = UDim2[AldyToiiu(46792)](520, 250),
		Transparent = true,
		[AldyToiiu(46945)] = true,
		SideBarWidth = 200,
		[AldyToiiu(47120)] = .32,
		HideSearchBar = true,
		ScrollBarEnabled = true,
		[AldyToiiu(46748)] = { [AldyToiiu(46889)] = true, Invite = "\112\101\054\085\074\078\122\072\085\084", [AldyToiiu(46993)] = true },
	});
if not AldyToil then
	return;
end;
AldyToil:SetBackgroundImageTransparency(.5);
AldyToil:IsResizable(true);
AldyToil:EditOpenButton({
	[AldyToiiu(47123)] = AldyToiiu(46771),
	Icon = "\102\105\115\104",
	CornerRadius = UDim.new(0, 16),
	[AldyToiiu(46811)] = 2,
	[AldyToiiu(46674)] = ColorSequence.new(Color3.fromRGB(100, 200, 140), Color3[AldyToiiu(46924)](60, 180, 120)),
	[AldyToiiu(46705)] = false,
	[AldyToiiu(46889)] = true,
	[AldyToiiu(46753)] = true,
});
local AldyToiu = { Legendary = false, Mythical = false, [AldyToiiu(46969)] = false };
local AldyToiE = {
		AutoSell = false,
		fishingAnimation = false,
		autoBuyWeather = false,
		[AldyToiiu(47104)] = false,
		[AldyToiiu(46781)] = .1,
		[AldyToiiu(46654)] = false,
		[AldyToiiu(46899)] = false,
		floatingPlatform = false,
		autoRespawn = false,
		autoFishing = false,
		priceValue = false,
		autoFarming = false,
		AutoSellbp = false,
		[AldyToiiu(46984)] = false,
	};
local AldyToig = AldyToil.ConfigManager;
AldyToig:Init(AldyToil);
local AldyToiT = AldyToig:CreateConfig("\065\108\100\121\084\111\105\095\087\105\110\100");
local AldyToim = AldyToil:Section({ [AldyToiiu(47123)] = "\077\097\105\110 \077\101\110\117", TextSize = 14, [AldyToiiu(47119)] = true });
local AldyToiO = AldyToil:Section({ Title = AldyToiiu(46774), TextSize = 14, Opened = true });
local AldyToiM = AldyToim:Tab({ Title = "\065\117\116\111 \070\105\115\104\105\110\103", [AldyToiiu(46806)] = "\102\105\115\104", [AldyToiiu(47048)] = true });
AldyToiM:Select();
local AldyToiL = AldyToim:Tab({ Title = "\065\117\116\111 \083\101\108\108", [AldyToiiu(46806)] = "\115\104\111\112\112\105\110\103-\099\097\114\116", ShowTabTitle = true });
local AldyToif = AldyToim:Tab({ Title = "\065\117\116\111 \070\097\114\109", Icon = "\122\097\112", ShowTabTitle = true });
local AldyToiK = AldyToim:Tab({ Title = "\069\118\101\110\116", [AldyToiiu(46806)] = "\099\097\108\101\110\100\097\114", [AldyToiiu(47048)] = true });
local AldyToiS = AldyToim:Tab({ Title = AldyToiiu(46808), [AldyToiiu(46806)] = "\099\111\103", ShowTabTitle = true });
local AldyToiY = AldyToim:Tab({ Title = "\065\117\116\111 \084\114\097\100\101", [AldyToiiu(46806)] = AldyToiiu(46697), ShowTabTitle = true });
local AldyToiU = AldyToim:Tab({ Title = "\065\117\116\111 \070\097\118\111\114\105\116\101", Icon = AldyToiiu(46853), [AldyToiiu(47048)] = true });
local AldyToiQ = AldyToim:Tab({ [AldyToiiu(47123)] = "\065\117\116\111 \082\111\108\108 \069\110\099\104\097\110\116", [AldyToiiu(46806)] = AldyToiiu(46711), ShowTabTitle = true });
local AldyToiv = AldyToim:Tab({ Title = AldyToiiu(47055), Icon = AldyToiiu(47072), ShowTabTitle = true });
local AldyToii = AldyToim:Tab({ [AldyToiiu(47123)] = AldyToiiu(46658), Icon = "\109\097\112-\112\105\110", [AldyToiiu(47048)] = true });
local AldyToiZ = AldyToim:Tab({ [AldyToiiu(47123)] = AldyToiiu(46876), Icon = AldyToiiu(46915), ShowTabTitle = true });
local AldyToiCT = AldyToiO:Tab({ Title = "\072\111\109\101", Icon = AldyToiiu(46826), ShowTabTitle = true });
local AldyToitT = AldyToiO:Tab({ Title = AldyToiiu(47114), Icon = AldyToiiu(46818), [AldyToiiu(47048)] = true });
local AldyToiDT = AldyToiO:Tab({ [AldyToiiu(47123)] = "\087\101\098\104\111\111\107", [AldyToiiu(46806)] = "\105\110\102\111", [AldyToiiu(47048)] = true });
local AldyToiPT = AldyToic:WaitForChild("\082\069\047\070\105\115\104\105\110\103\083\116\111\112\112\101\100");
local AldyToijT = true;
local AldyToikT = 0;
local AldyToiNT = 0;
local AldyToiJT = require((AldyToiF:WaitForChild("\067\111\110\116\114\111\108\108\101\114\115")):WaitForChild(AldyToiiu(46990)));
local AldyToiFT = AldyToir.Character or AldyToir.CharacterAdded:Wait();
local AldyToirT = AldyToiFT:WaitForChild("\072\117\109\097\110\111\105\100");
local AldyToizT = AldyToiiu(46754);
local AldyToipT = "\057\050\054\050\052\049\048\055\049\054\053\050\055\051";
local AldyToiWT = "\049\051\052\057\054\053\052\050\053\054\054\052\048\051\052";
local AldyToiAT = AldyToiiu(46607);
local AldyToiXT = AldyToiiu(46763);
local AldyToiaT = AldyToiiu(46976);
local AldyToiBT = AldyToiiu(46987);
local AldyToinT = AldyToiiu(46987);
local AldyToiRT = AldyToiiu(46689);
local AldyToieT = {
		[AldyToiiu(47050)] = false,
		[AldyToiiu(47105)] = nil,
		lastFish = "",
		lastSend = 0,
		selectedTiers = {
			[AldyToiiu(46732)] = false,
			[AldyToiiu(46775)] = false,
			[AldyToiiu(46812)] = false,
			[AldyToiiu(46935)] = false,
			Legendary = true,
			[AldyToiiu(47046)] = true,
			[AldyToiiu(46784)] = true,
		},
		[AldyToiiu(46825)] = "",
		customUrl = AldyToiiu(46918),
	};
local function AldyToiVT(AldyToiC)
	AldyToiC[AldyToiiu(46731)] = AldyToieT.customUrl;
	local AldyToit = AldyToiN:JSONEncode(AldyToiC);
	local AldyToiD = AldyToiN:UrlEncode(AldyToit);
	local AldyToiP = false;
	local AldyToij, AldyToik = pcall(function()
			local AldyToiC = AldyToiN:RequestAsync({ Url = AldyTois .. ("\063\100\097\116\097\061" .. AldyToiD), Method = "\071\069\084" });
			if AldyToiC and AldyToiC[AldyToiiu(46659)] then
				AldyToiP = true;
			end;
		end);
	if not AldyToiP then
		local AldyToiC = http_request or request or syn and syn.request;
		if AldyToiC then
			local AldyToit = AldyToiC({ [AldyToiiu(47084)] = AldyTois .. (AldyToiiu(46832) .. AldyToiD), Method = "\071\069\084", [AldyToiiu(46776)] = { ["\067\111\110\116\101\110\116-\084\121\112\101"] = AldyToiiu(46740) } });
			if AldyToit and (AldyToit.StatusCode == 200 or AldyToit.Success) then
				AldyToiP = true;
			end;
		end;
	end;
	if not AldyToiP then
		local AldyToiC, AldyToit = pcall(function()
				game:HttpGet(AldyTois .. ("\063\100\097\116\097\061" .. AldyToiD));
			end);
		if AldyToiC then
			AldyToiP = true;
		end;
	end;
end;
local function AldyToiwT(AldyToiC)
	for AldyToit, AldyToiD in pairs(AldyToiw:GetChildren()) do
		if AldyToiD:IsA(AldyToiiu(46676)) then
			local AldyToit, AldyToiP = pcall(require, AldyToiD);
			if AldyToit and (AldyToiP and (AldyToiP.Data and AldyToiP[AldyToiiu(47113)][AldyToiiu(46851)] == AldyToiC)) then
				return AldyToiP;
			end;
		end;
	end;
	return nil;
end;
local function AldyToiyT()
	local AldyToiC = AldyToiX:Get(AldyToiiu(46721));
	if not AldyToiC or not AldyToiC.Items then
		return;
	end;
	for AldyToiC, AldyToit in pairs(AldyToiC.Items) do
		local AldyToiD = AldyToiwT(AldyToit[AldyToiiu(46851)]);
		if AldyToiD and (AldyToiD.Data.Type == "\070\105\115\104\101\115" and AldyToiD.Probability) then
			local AldyToiC = AldyToio[AldyToiiu(46977)](nil, AldyToiD.Probability[AldyToiiu(46621)]);
			if AldyToiC and AldyToiC[AldyToiiu(46637)] == "\076\101\103\101\110\100\097\114\121" then
				if AldyToit[AldyToiiu(46896)] and not AldyToit.Favorited then
					AldyToiy:FireServer(AldyToit.UUID);
				end;
			end;
		end;
	end;
end;
local function AldyToioT()
	local AldyToiC = AldyToiX:Get(AldyToiiu(46721));
	if not AldyToiC or not AldyToiC[AldyToiiu(46787)] then
		return;
	end;
	for AldyToiC, AldyToit in pairs(AldyToiC[AldyToiiu(46787)]) do
		local AldyToiD = AldyToiwT(AldyToit.Id);
		if AldyToiD and (AldyToiD[AldyToiiu(47113)][AldyToiiu(47018)] == "\070\105\115\104\101\115" and AldyToiD.Probability) then
			local AldyToiC = AldyToio[AldyToiiu(46977)](nil, AldyToiD[AldyToiiu(47001)][AldyToiiu(46621)]);
			if AldyToiC and AldyToiC.Name == "\077\121\116\104\105\099" then
				if AldyToit.UUID and not AldyToit[AldyToiiu(47081)] then
					AldyToiy:FireServer(AldyToit[AldyToiiu(46896)]);
				end;
			end;
		end;
	end;
end;
local function AldyToisT()
	local AldyToiC = AldyToiX:Get(AldyToiiu(46721));
	if not AldyToiC or not AldyToiC[AldyToiiu(46787)] then
		return;
	end;
	for AldyToiC, AldyToit in pairs(AldyToiC.Items) do
		local AldyToiD = AldyToiwT(AldyToit[AldyToiiu(46851)]);
		if AldyToiD and (AldyToiD.Data[AldyToiiu(47018)] == AldyToiiu(46919) and AldyToiD.Probability) then
			local AldyToiC = AldyToio.GetTierFromRarity(nil, AldyToiD[AldyToiiu(47001)][AldyToiiu(46621)]);
			if AldyToiC and AldyToiC[AldyToiiu(46637)] == AldyToiiu(46784) then
				if AldyToit[AldyToiiu(46896)] and not AldyToit.Favorited then
					AldyToiy:FireServer(AldyToit.UUID);
				end;
			end;
		end;
	end;
end;
local AldyToiIT = { [5] = false, [6] = false, [7] = false };
local AldyToicT = {};
local function AldyToiqT(AldyToiC)
	local AldyToit = AldyToiF:FindFirstChild("\073\116\101\109\115");
	if not AldyToit then
		return nil;
	end;
	local AldyToiD = AldyToiC or AldyToiiu(46918);
	AldyToiD = (AldyToiD:gsub("\037\115\042\037\098\040\041", AldyToiiu(46918))):gsub("\094\037\115\042\040\046-\041\037\115\042\036", "\037\049");
	local AldyToiP = string.lower(AldyToiD);
	local AldyToij, AldyToik = nil, 0;
	for AldyToiC, AldyToit in ipairs(AldyToit:GetChildren()) do
		if AldyToit:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			local AldyToiC = string.lower(AldyToit[AldyToiiu(46637)]);
			if AldyToiP:find(AldyToiC, 1, true) then
				if #AldyToit[AldyToiiu(46637)] > AldyToik then
					AldyToik = #AldyToit[AldyToiiu(46637)];
					AldyToij = AldyToit;
				end;
			end;
		end;
	end;
	if AldyToij then
		return AldyToij;
	end;
	for AldyToiC, AldyToit in ipairs(AldyToit:GetChildren()) do
		if AldyToit:IsA(AldyToiiu(46676)) then
			local AldyToiC, AldyToiD = pcall(require, AldyToit);
			if AldyToiC and (type(AldyToiD) == AldyToiiu(46627) and (AldyToiD[AldyToiiu(47113)] and type(AldyToiD.Data.Name) == AldyToiiu(46730))) then
				local AldyToiC = AldyToiD.Data[AldyToiiu(46637)];
				local AldyToij = (AldyToiC:gsub(AldyToiiu(46727), "")):gsub(AldyToiiu(47045), AldyToiiu(47124));
				if string[AldyToiiu(46798)](AldyToij) == AldyToiP or string[AldyToiiu(46798)](AldyToiC) == AldyToiP then
					return AldyToit;
				end;
			end;
		end;
	end;
	return nil;
end;
local function AldyToidT(AldyToiC, AldyToit)
	if AldyToiC:FindFirstChild(AldyToiiu(47032)) then
		AldyToiC[AldyToiiu(47032)].Text = "\036 " .. tostring(AldyToit);
		return;
	end;
	local AldyToiD = Instance[AldyToiiu(46604)]("\084\101\120\116\076\097\098\101\108");
	AldyToiD[AldyToiiu(46637)] = "\083\101\108\108\080\114\105\099\101\076\097\098\101\108";
	AldyToiD.Text = AldyToiiu(46760) .. tostring(AldyToit);
	AldyToiD.Size = UDim2[AldyToiiu(46604)](1, 0, 0, 24);
	AldyToiD.Position = UDim2[AldyToiiu(46604)](0, 0, 0, AldyToiC[AldyToiiu(46830)][AldyToiiu(46953)].Y + 2);
	AldyToiD.BackgroundTransparency = 1;
	AldyToiD.TextColor3 = Color3.fromRGB(255, 215, 0);
	AldyToiD.Font = Enum.Font[AldyToiiu(46710)];
	AldyToiD.TextScaled = true;
	AldyToiD.Parent = AldyToiC;
	local AldyToiP = Instance[AldyToiiu(46604)]("\085\073\083\116\114\111\107\101");
	AldyToiP.Thickness = 2;
	AldyToiP.Color = Color3[AldyToiiu(46924)](0, 0, 0);
	AldyToiP[AldyToiiu(46722)] = Enum.ApplyStrokeMode[AldyToiiu(47111)];
	AldyToiP.Parent = AldyToiD;
end;
local AldyToixT = 0;
local function AldyToiHT()
	AldyToixT = 0;
	for AldyToiC, AldyToit in ipairs(AldyToiH:GetChildren()) do
		if AldyToit:FindFirstChild(AldyToiiu(46830)) then
			local AldyToiC = AldyToit.ItemName[AldyToiiu(46894)];
			local AldyToiD = AldyToiqT(AldyToiC);
			if AldyToiD then
				local AldyToiC, AldyToiP = pcall(require, AldyToiD);
				if AldyToiC and (AldyToiP and (AldyToiP.Data and AldyToiP[AldyToiiu(46865)])) then
					AldyToidT(AldyToit, AldyToiP[AldyToiiu(46865)]);
				end;
				if AldyToiP and (AldyToiP[AldyToiiu(46865)] and AldyToiP.Data.Type == AldyToiiu(46919)) then
					AldyToixT = AldyToixT + AldyToiP.SellPrice;
				end;
			end;
		end;
	end;
	local AldyToiC = (game:GetService(AldyToiiu(46713)))[AldyToiiu(46648)];
	local AldyToit = (AldyToiC:WaitForChild(AldyToiiu(47106))):WaitForChild("\073\110\118\101\110\116\111\114\121");
	local AldyToiD = AldyToit:WaitForChild(AldyToiiu(46701));
	local AldyToiP = AldyToiD:WaitForChild(AldyToiiu(46903));
	local AldyToij = AldyToiP:WaitForChild(AldyToiiu(46684));
	AldyToij.Text = AldyToixT;
end;
local function AldyToiGT()
	local AldyToiC = AldyToiX:Get("\073\110\118\101\110\116\111\114\121");
	if not AldyToiC or not AldyToiC.Items then
		return;
	end;
	for AldyToiC, AldyToit in pairs(AldyToiC[AldyToiiu(46787)]) do
		local AldyToiD = AldyToiwT(AldyToit.Id);
		if AldyToiD and AldyToiD[AldyToiiu(47113)].Type == "\070\105\115\104\101\115" then
			if AldyToit[AldyToiiu(46896)] and not AldyToit.Favorited then
				AldyToiy:FireServer(AldyToit.UUID);
			end;
		end;
	end;
end;
local function AldyToihT()
	local AldyToiC = AldyToiX:Get("\073\110\118\101\110\116\111\114\121");
	if not AldyToiC or not AldyToiC[AldyToiiu(46787)] then
		return;
	end;
	for AldyToiC, AldyToit in pairs(AldyToiC.Items) do
		local AldyToiD = AldyToiwT(AldyToit.Id);
		if AldyToiD and AldyToiD[AldyToiiu(47113)][AldyToiiu(47018)] == "\070\105\115\104\101\115" then
			if AldyToit[AldyToiiu(46896)] and AldyToit[AldyToiiu(47081)] then
				AldyToiy:FireServer(AldyToit[AldyToiiu(46896)]);
			end;
		end;
	end;
end;
local AldyToibT = {};
local function AldyToilT(AldyToiC, AldyToit)
	local AldyToiD = game[AldyToiiu(46713)].LocalPlayer;
	local AldyToiP = AldyToiD[AldyToiiu(46921)] or AldyToiD.CharacterAdded:Wait();
	local AldyToij = AldyToiP:WaitForChild(AldyToiiu(46912));
	for AldyToiC, AldyToit in ipairs(AldyToij:GetPlayingAnimationTracks()) do
		AldyToit:Stop();
	end;
	local AldyToik = Instance[AldyToiiu(46604)]("\065\110\105\109\097\116\105\111\110");
	AldyToik.AnimationId = AldyToiiu(46788) .. AldyToiC;
	local AldyToiN = AldyToij:LoadAnimation(AldyToik);
	AldyToiN:Play();
	task.delay(AldyToit, function()
		if AldyToiN[AldyToiiu(46615)] then
			AldyToiN:Stop();
		end;
	end);
	return AldyToiN;
end;
local function AldyToiuT()
	AldyToiC:Notify({ [AldyToiiu(47123)] = AldyToiiu(46821), Content = AldyToiiu(46696), Duration = 1 });
	for AldyToiC = 1, 25, 1 do
		AldyToih.RE_FishingCompleted:FireServer();
		task[AldyToiiu(46873)](.5);
	end;
	pcall(function()
		if AldyToiJT and AldyToiJT[AldyToiiu(46864)] then
			AldyToiJT:RequestClientStopFishing(true);
		end;
	end);
end;
local function AldyToiET(AldyToiC)
	if AldyToiC then
		pcall(function()
			local AldyToiC = { 1 };
			((((((game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101")):WaitForChild(AldyToiiu(47043))):WaitForChild(AldyToiiu(46908))):WaitForChild("\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048")):WaitForChild("\110\101\116")):WaitForChild("\082\069\047\069\113\117\105\112\084\111\111\108\070\114\111\109\072\111\116\098\097\114")):FireServer(unpack(AldyToiC));
		end);
		task[AldyToiiu(46873)](.8);
		task.spawn(function()
			while AldyToiE[AldyToiiu(46673)] do
				for AldyToiC, AldyToit in ipairs(AldyToirT:GetPlayingAnimationTracks()) do
					AldyToit:Stop();
				end;
				pcall(function()
					AldyToijT = true;
					if not AldyToiE.fishingAnimation then
						if tonumber(AldyToiR) == 245 then
							AldyToilT(AldyToiXT, 1);
						else
							AldyToilT(AldyToizT, 1);
						end;
					end;
					AldyToih[AldyToiiu(47030)]:InvokeServer(AldyToiP:GetServerTimeNow());
					task[AldyToiiu(46873)](.1);
					local AldyToiC, AldyToit;
					if AldyToiE[AldyToiiu(46654)] and not AldyToiE.amazingCast then
						AldyToiC, AldyToit = -0.74999964237213, 1;
					elseif not AldyToiE.perfectCast and AldyToiE.amazingCast then
						AldyToiC, AldyToit = -139.6379699707, .87694226394928;
					else
						AldyToiC = math.random(-1000, 1000) / 1000;
						AldyToit = math[AldyToiiu(46844)](0, 1000) / 1000;
					end;
					if not AldyToiE.fishingAnimation then
						if AldyToiR == 245 then
							AldyToilT(AldyToiaT, 2);
						else
							AldyToilT(AldyToipT, 2);
						end;
					end;
					if not AldyToiE[AldyToiiu(46800)] then
						if AldyToiR == 245 then
							AldyToilT(AldyToiBT, 15);
						else
							AldyToilT(AldyToiWT, 15);
						end;
					end;
					AldyToih.RF_RequestFishingMinigameStarted:InvokeServer(AldyToiC, AldyToit);
					task[AldyToiiu(46873)](.2);
					if not AldyToiE[AldyToiiu(46800)] then
						if AldyToiR == 245 then
							AldyToilT(AldyToinT, 2);
						else
							AldyToilT(AldyToiAT, 2);
						end;
					end;
					local AldyToiD = {};
					while AldyToijT do
						AldyToih[AldyToiiu(47020)]:FireServer(unpack(AldyToiD));
						task[AldyToiiu(46873)](.1);
					end;
				end);
				task.wait(AldyToiE[AldyToiiu(46781)]);
			end;
		end);
	else
		AldyToih[AldyToiiu(46794)]:InvokeServer();
		pcall(function()
			if AldyToiJT and AldyToiJT[AldyToiiu(46864)] then
				AldyToiJT:RequestClientStopFishing(true);
			end;
		end);
		for AldyToiC, AldyToit in ipairs(AldyToirT:GetPlayingAnimationTracks()) do
			AldyToit:Stop();
		end;
	end;
end;
local AldyToigT = { [AldyToiiu(47050)] = false, position = nil };
local AldyToiTT = true;
local AldyToimT = {};
local AldyToiOT = AldyToiiu(46965);
local function AldyToiMT()
	local AldyToiC = AldyToij.Character;
	if AldyToiC and AldyToiC:FindFirstChild(AldyToiiu(46883)) then
		local AldyToit = AldyToiC[AldyToiiu(46883)].CFrame;
		AldyToimT = {
				AldyToit[AldyToiiu(46780)],
				AldyToit[AldyToiiu(46729)],
				AldyToit.Z,
				({ AldyToit:ToOrientation() })[1],
				({ AldyToit:ToOrientation() })[2],
				({ AldyToit:ToOrientation() })[3],
			};
		writefile(AldyToiOT, AldyToiN:JSONEncode(AldyToimT));
	end;
end;
local function AldyToiLT()
	if not AldyToiTT then
		return;
	end;
	if isfile(AldyToiOT) then
		local AldyToiC = AldyToiN:JSONDecode(readfile(AldyToiOT));
		AldyToimT = AldyToiC;
	end;
	local AldyToiC = AldyToimT;
	if AldyToiC and (typeof(AldyToiC) == AldyToiiu(46627) and #AldyToiC >= 3) then
		local AldyToit = AldyToij.Character or AldyToij.CharacterAdded:Wait();
		local AldyToiD = AldyToit:WaitForChild(AldyToiiu(46883), 5);
		if AldyToiD then
			task[AldyToiiu(46873)](.3);
			AldyToiD[AldyToiiu(46631)] = CFrame.new(AldyToiC[1], AldyToiC[2], AldyToiC[3]) * CFrame[AldyToiiu(46839)](AldyToiC[4] or 0, AldyToiC[5] or 0, AldyToiC[6] or 0);
		end;
	end;
end;
local AldyToifT = nil;
local function AldyToiKT(AldyToiC)
	if AldyToiC then
		local AldyToiC = AldyToiP:WaitForChild(AldyToiiu(46941), 5);
		local AldyToit = AldyToiC:FindFirstChild(AldyToij.Name);
		if not AldyToit then
			return;
		end;
		local AldyToiD = AldyToit:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
		if not AldyToiD then
			return;
		end;
		AldyToifT = Instance.new("\080\097\114\116");
		AldyToifT.Anchored = true;
		AldyToifT[AldyToiiu(46714)] = Vector3[AldyToiiu(46604)](10, 1, 10);
		AldyToifT[AldyToiiu(46685)] = 1;
		AldyToifT.CanCollide = true;
		AldyToifT[AldyToiiu(46637)] = AldyToiiu(46735);
		AldyToifT.Parent = AldyToiP;
		task[AldyToiiu(47116)](function()
			while AldyToifT and AldyToifT.Parent do
				pcall(function()
					AldyToifT.Position = AldyToiD.Position - Vector3[AldyToiiu(46604)](0, 3.5, 0);
				end);
				task[AldyToiiu(46873)](.1);
			end;
		end);
	else
		if AldyToifT then
			AldyToifT:Destroy();
			AldyToifT = nil;
		end;
	end;
end;
local function AldyToiST()
	local AldyToiC = AldyToij[AldyToiiu(46921)];
	if AldyToiC and AldyToiC:FindFirstChild("\072\117\109\097\110\111\105\100") then
		AldyToiC.Humanoid.Health = 0;
	end;
	AldyToiKT(AldyToiE[AldyToiiu(47089)]);
	local AldyToit = AldyToiP.Characters:FindFirstChild(AldyToij[AldyToiiu(46637)]);
	local AldyToiD = game[AldyToiiu(46713)][AldyToiiu(46648)][AldyToiiu(46921)]:WaitForChild(AldyToiiu(46883));
end;
local function AldyToiYT()
	local AldyToiC = game:GetService(AldyToiiu(46663));
	AldyToit.LocalPlayer[AldyToiiu(47095)]:Connect(function()
		AldyToiC:Button2Down(Vector2.new(0, 0), AldyToiP.CurrentCamera[AldyToiiu(46631)]);
		task[AldyToiiu(46873)](1);
		AldyToiC:Button2Up(Vector2[AldyToiiu(46604)](0, 0), AldyToiP.CurrentCamera.CFrame);
		AldyToiC:CaptureController();
		AldyToiC:ClickButton2(Vector2[AldyToiiu(46604)]());
	end);
end;
AldyToiYT();
local function AldyToiUT()
	AldyToiF[AldyToiiu(47043)][AldyToiiu(46908)][AldyToiiu(46866)][AldyToiiu(46715)]["\082\070\047\083\101\108\108\065\108\108\073\116\101\109\115"]:InvokeServer();
end;
AldyToiM:Paragraph({
	Title = AldyToiiu(46940),
	[AldyToiiu(46824)] = AldyToiiu(47053),
	[AldyToiiu(46674)] = "\082\101\100",
	[AldyToiiu(46726)] = true,
});
local AldyToiQT = AldyToiM:Dropdown({
		Title = AldyToiiu(46744),
		Values = { AldyToiiu(47073), AldyToiiu(46646), AldyToiiu(46675) },
		[AldyToiiu(46885)] = false,
		[AldyToiiu(46827)] = "\082\097\110\100\111\109",
		[AldyToiiu(46700)] = false,
		Callback = function(AldyToiC)
			if AldyToiC == AldyToiiu(46646) then
				AldyToiE[AldyToiiu(46654)] = true;
				AldyToiE[AldyToiiu(46899)] = false;
			elseif AldyToiC == AldyToiiu(46675) then
				AldyToiE.amazingCast = true;
				AldyToiE[AldyToiiu(46654)] = false;
			elseif AldyToiC == "\082\097\110\100\111\109" then
				AldyToiE[AldyToiiu(46654)] = false;
				AldyToiE[AldyToiiu(46899)] = false;
			end;
		end,
	});
AldyToiT:Register(AldyToiiu(46643), AldyToiQT);
local AldyToivT = AldyToiM:Toggle({ Title = "\240\159\142\163 \065\117\116\111 \070\105\115\104\105\110\103", Default = false, Callback = function(AldyToiC)
			AldyToiE[AldyToiiu(46673)] = AldyToiC;
			AldyToiET(AldyToiC);
			AldyToiT:Save();
		end });
AldyToiT:Register("\065\117\116\111\070\105\115\104\105\110\103", AldyToivT);
local AldyToiiT = AldyToiM:Slider({
		[AldyToiiu(47123)] = "\226\143\177\239\184\143 \065\117\116\111 \070\105\115\104\105\110\103 \068\101\108\097\121",
		Value = { [AldyToiiu(46902)] = .1, [AldyToiiu(47024)] = 2, Default = .1 },
		[AldyToiiu(46833)] = .1,
		[AldyToiiu(46641)] = function(AldyToiC)
			AldyToiE[AldyToiiu(46781)] = AldyToiC;
			AldyToiT:Save();
		end,
	});
AldyToiT:Register("\102\105\115\104\105\110\103\068\101\108\097\121", AldyToiiT);
local AldyToiZT = AldyToiM:Dropdown({
		[AldyToiiu(47123)] = AldyToiiu(46858),
		[AldyToiiu(46901)] = { AldyToiiu(46815), AldyToiiu(46779) },
		[AldyToiiu(46827)] = AldyToiiu(46779),
		Multi = false,
		AllowNone = false,
		[AldyToiiu(46641)] = function(AldyToiC)
			if AldyToiC == AldyToiiu(46779) then
				AldyToiE.fishingAnimation = false;
			elseif AldyToiC == AldyToiiu(46815) then
				AldyToiE[AldyToiiu(46800)] = true;
			end;
		end,
	});
AldyToiT:Register("\073\110\115\116\097\110\116\067\097\116\099\104", AldyToiZT);
local AldyToiCu = AldyToiM:Toggle({ [AldyToiiu(47123)] = "\065\117\116\111 \082\101\115\112\097\119\110 \087\104\101\110 \083\116\117\099\107", Default = false, Callback = function(AldyToiC)
			AldyToiT:Save();
			AldyToiE[AldyToiiu(46606)] = AldyToiC;
		end });
AldyToiT:Register("\097\117\116\111\082\101\115\112\097\119\110", AldyToiCu);
local AldyToitu = 20;
AldyToiM:Slider({
	Title = AldyToiiu(46724),
	[AldyToiiu(46827)] = { [AldyToiiu(46902)] = 6, [AldyToiiu(47024)] = 20, Default = 10 },
	[AldyToiiu(46833)] = 1,
	Default = 10,
	Callback = function(AldyToiC)
		AldyToitu = tonumber(AldyToiC);
		AldyToiT:Save();
	end,
});
AldyToiM:Button({ Title = AldyToiiu(46743), Desc = "\073\109\109\101\100\105\097\116\101\108\121 \114\101\115\112\097\119\110 \121\111\117\114 \099\104\097\114\097\099\116\101\114\046", Callback = function()
		AldyToiST();
	end });
AldyToiL:Section({ [AldyToiiu(47123)] = AldyToiiu(46816) });
AldyToiL:Button({ [AldyToiiu(47123)] = "\083\101\108\108 \065\108\108 \078\111\119", [AldyToiiu(46641)] = function()
		pcall(function()
			(((((AldyToiF:WaitForChild("\080\097\099\107\097\103\101\115")):WaitForChild("\095\073\110\100\101\120")):WaitForChild(AldyToiiu(46866))):WaitForChild("\110\101\116")):WaitForChild(AldyToiiu(46704))):InvokeServer();
			AldyToiC:Notify({ [AldyToiiu(47123)] = AldyToiiu(46659), [AldyToiiu(47092)] = "\065\108\108 \070\105\115\104 \104\097\118\101 \098\101\101\110 \115\111\108\100\046", [AldyToiiu(46867)] = 3 });
		end);
	end });
local AldyToiDu = AldyToiL:Toggle({
		[AldyToiiu(47123)] = AldyToiiu(46952),
		Description = "\065\117\116\111\109\097\116\105\099\097\108\108\121 \115\101\108\108 \102\105\115\104 \098\097\115\101\100 \111\110 \116\104\101 \099\097\116\099\104 \116\104\114\101\115\104\111\108\100",
		Default = false,
		[AldyToiiu(46641)] = function(AldyToiC)
			AldyToiE[AldyToiiu(46950)] = AldyToiC;
			AldyToiT:Save();
		end,
	});
AldyToiT:Register("\065\117\116\111\083\101\108\108\084\111\103\103\108\101", AldyToiDu);
local AldyToiPu = 10;
local AldyToiju = AldyToiL:Input({ [AldyToiiu(47123)] = "\240\159\142\175 \065\117\116\111 \083\101\108\108 \084\104\114\101\115\104\111\108\100", [AldyToiiu(47031)] = AldyToiiu(46893), Callback = function(AldyToit)
			local AldyToiD = tonumber(AldyToit);
			if AldyToiD then
				AldyToiPu = AldyToiD;
				AldyToiC:Notify({ [AldyToiiu(47123)] = AldyToiiu(46651), Description = AldyToiiu(47036) .. AldyToiPu, [AldyToiiu(46867)] = 1 });
			else
				AldyToiC:Notify({ [AldyToiiu(47123)] = "\073\110\118\097\108\105\100 \073\110\112\117\116", [AldyToiiu(46742)] = AldyToiiu(47006), Duration = 1 });
			end;
			AldyToiT:Save();
		end });
AldyToiT:Register(AldyToiiu(47012), AldyToiPu);
local AldyToiku = 4990;
local AldyToiNu = {
		[AldyToiiu(46703)] = { CFrame[AldyToiiu(46604)](-65.1821136, 3.53157115, 2775.68311, .33803311, 3.37374004e-08, .941134214, 3.34767392e-09, 1, -3.7050004e-08, -0.941134214, 1.5674738e-08, .33803311) },
		["\067\111\114\097\108 \082\101\101\102\115"] = { CFrame[AldyToiiu(46604)](-3118.39624, 2.42531538, 2135.26392, .92336154, -1.0069185e-07, -0.383931547, 8.0607947e-08, 1, -6.84016968e-08, .383931547, 3.22115596e-08, .92336154), CFrame.new(-2965.5708, 22.7500286, 2249.01709, .0730288103, 3.98725897e-09, .997329831, 2.27064021e-08, 1, -5.6605951e-09, -0.997329831, 2.30591581e-08, .0730288103), CFrame.new(-3102.16309, 5.97334528, 2218.88696, .758339584, 8.40698444e-09, -0.651859701, 2.32941257e-08, 1, 3.99960918e-08, .651859701, -4.55151223e-08, .758339584) },
		[AldyToiiu(46855)] = { CFrame[AldyToiiu(46604)](-1459.3772, 14.7103214, 1831.5188, .777951121, 2.52131862e-08, -0.628324807, -5.24126378e-08, 1, -2.47663063e-08, .628324807, 5.21991339e-08, .777951121), CFrame.new(-1521.20862, 2.87499976, 1912.40564, -0.989418149, 1.00299182e-08, -0.14509216, 6.85348089e-09, 1, 2.23923866e-08, .14509216, 2.11610462e-08, -0.989418149), CFrame[AldyToiiu(46604)](-1574.57129, 13.1473379, 1920.83826, -0.816545427, -3.39974235e-08, .577281177, -6.96619793e-08, 1, -3.96422877e-08, -0.577281177, -7.25842781e-08, -0.816545427) },
		[AldyToiiu(46795)] = { CFrame.new(-3765.69751, -135.074417, -906.893677, .704144239, 3.52946827e-08, -0.710056961, -3.45032909e-08, 1, 1.5490853e-08, .710056961, 1.35915084e-08, .704144239), CFrame.new(-3780.09692, -135.074417, -962.226746, -0.366469413, -5.94525993e-08, -0.930430114, 1.91083362e-08, 1, -7.14241963e-08, .930430114, -4.39537544e-08, -0.366469413) },
		["\087\105\110\116\101\114 \070\101\115\116"] = { CFrame[AldyToiiu(46604)](1820.92529, 5.7885952, 3305.04761, -0.290378898, 1.26296209e-08, -0.956911743, -2.8187932e-08, 1, 2.17520597e-08, .956911743, 3.32897017e-08, -0.290378898), CFrame[AldyToiiu(46604)](1704.83362, 4.38193512, 3189.80811, .715091407, 8.31226021e-09, .699030936, -3.8851347e-08, 1, 2.78528525e-08, -0.699030936, -4.70756305e-08, .715091407) },
		[AldyToiiu(47002)] = { CFrame[AldyToiiu(46604)](3272.27344, -1301.35535, 1390.97058, -0.422851175, -5.61508493e-08, -0.906199157, 7.32285486e-08, 1, -9.6132986e-08, .906199157, -1.07009591e-07, -0.422851175) },
		[AldyToiiu(46834)] = { CFrame[AldyToiiu(46604)](-2126.49707, 53.4868774, 3640.20581, -0.872817099, 4.77880704e-08, .488047391, 7.77828291e-09, 1, -8.40062881e-08, -0.488047391, -6.95259601e-08, -0.872817099) },
		[AldyToiiu(46766)] = {
			CFrame.new(-3600.62988, -279.0737, -1692.755, -0.938830554, -1.7142467e-08, .344379485, -1.96833128e-08, 1, -3.8818464e-09, -0.344379485, -1.04229247e-08, -0.938830554),
			CFrame[AldyToiiu(46604)](-3625.0708, -279.074219, -1594.57605, .918176472, -3.97606392e-09, -0.396171629, -1.12946204e-08, 1, -3.62128851e-08, .396171629, 3.77244298e-08, .918176472),
			CFrame.new(-3600.72632, -276.06427, -1640.79663, -0.696130812, -6.0491181e-09, .717914939, -1.09490363e-08, 1, -2.19084972e-09, -0.717914939, -9.38559541e-09, -0.696130812),
			CFrame[AldyToiiu(46604)](-3548.52222, -269.309845, -1659.26685, .0472991578, -4.08685423e-08, .998880744, -7.68598838e-08, 1, 4.45538149e-08, -0.998880744, -7.88812216e-08, .0472991578),
			CFrame[AldyToiiu(46604)](-3581.84155, -279.09021, -1696.15637, -0.999634147, -0.000535600528, -0.0270430837, -0.000448358158, .999994695, -0.00323198596, .0270446707, -0.00321867829, -0.99962908),
			CFrame[AldyToiiu(46604)](-3601.34302, -282.790955, -1629.37036, -0.526346684, .00143659476, .850268841, -0.000266355521, .999998271, -0.00185445137, -0.850269973, -0.00120255165, -0.526345372),
			CFrame.new(-3601.52588, -282.991669, -1629.59265, -0.0535041578, -7.48535811e-08, .998567641, 6.44989342e-08, 1, 7.84168677e-08, -0.998567641, 6.86021764e-08, -0.0535041578),
			CFrame[AldyToiiu(46604)](-3594.76074, -275.663788, -1642.65515, .992020428, 2.66124651e-08, -0.126077324, -2.72226544e-08, 1, -3.11684589e-09, .126077324, 6.52413412e-09, .992020428),
		},
		["\076\111\115\116 \083\104\111\114\101"] = { CFrame[AldyToiiu(46604)](-3686.70557, 50.5551491, -802.862549, .671186864, -1.9727894e-08, .741288185, 8.82212987e-08, 1, -5.32654987e-08, -0.741288185, 1.01148508e-07, .671186864), CFrame[AldyToiiu(46604)](-3674.72852, 5.4255538, -860.631531, -0.995413721, 6.02128791e-09, .0956638828, 3.38107586e-09, 1, -2.77609349e-08, -0.0956638828, -2.73101683e-08, -0.995413721) },
		[AldyToiiu(46764)] = {
			CFrame[AldyToiiu(46604)](-648.832397, 45.2862358, 146.425705, -0.107698888, -2.22477787e-08, .99418354, 2.75738845e-08, 1, 2.53649883e-08, -0.99418354, 3.01452836e-08, -0.107698888),
			CFrame.new(-673.803223, 55.5000572, 183.610779, .122808129, 6.084327e-08, -0.992430449, -9.00719144e-08, 1, 5.01614039e-08, .992430449, 8.32298852e-08, .122808129),
			CFrame[AldyToiiu(46604)](-675.741272, 55.5000572, 164.999741, .700404584, -6.1561245e-08, -0.713746011, 7.66120891e-08, 1, -1.10708571e-08, .713746011, -4.69274966e-08, .700404584),
			CFrame.new(-648.186584, 45.7505226, 172.17453, -0.995664299, 3.11417523e-08, .0930196419, 3.00717424e-08, 1, -1.29047226e-08, -0.0930196419, -1.0051509e-08, -0.995664299),
		},
		Kohana = { CFrame.new(-658.677429, 20.0969162, 547.795715, .08832293, -2.84166846e-09, -0.996091902, 1.26686484e-08, 1, -1.72949544e-09, .996091902, -1.24663835e-08, .08832293), CFrame[AldyToiiu(46604)](-653.275757, 17.2500591, 490.213684, .223178998, 0, -0.97477746, 0, 1, 0, .97477746, 0, .223178998) },
		[AldyToiiu(46666)] = {
			CFrame.new(1066.1864, 57.2025681, 5045.5542, -0.682534158, 1.00865822e-08, .730853677, -5.8900711e-09, 1, -1.93017531e-08, -0.730853677, -1.74788859e-08, -0.682534158),
			CFrame[AldyToiiu(46604)](1057.28992, 33.0884132, 5133.79883, .833871782, 5.44149223e-08, .551958203, -6.58184218e-09, 1, -8.86416984e-08, -0.551958203, 7.02829084e-08, .833871782),
			CFrame.new(988.954712, 42.8254471, 5088.71289, -0.849417388, -9.89310394e-08, .527721584, -5.96115086e-08, 1, 9.15179328e-08, -0.527721584, 4.62786431e-08, -0.849417388),
			CFrame[AldyToiiu(46604)](1006.70685, 17.2302666, 5092.14844, -0.989664078, 5.6538525e-09, -0.143405005, 9.14879283e-09, 1, -2.3711717e-08, .143405005, -2.47786183e-08, -0.989664078),
			CFrame[AldyToiiu(46604)](1025.02356, 2.77259707, 5011.47021, -0.974474192, -6.87871804e-08, .224499553, -4.47472104e-08, 1, 1.12170284e-07, -0.224499553, 9.92613209e-08, -0.974474192),
			CFrame[AldyToiiu(46604)](1071.14551, 3.528404, 5038.00293, -0.532300115, 3.38677708e-08, .84655571, 6.69992914e-08, 1, 2.12149165e-09, -0.84655571, 5.7847906e-08, -0.532300115),
			CFrame.new(1022.55457, 16.6277809, 5066.28223, .721996129, 0, -0.691897094, 0, 1, 0, .691897094, 0, .721996129),
			CFrame.new(1023.29114, 19.1177425, 5070.02588, .507022858, 2.01505461e-08, -0.861932635, 5.94909153e-08, 1, 5.83732387e-08, .861932635, -8.08737255e-08, .507022858),
			CFrame.new(981.318909, 41.6503983, 5078.02344, -0.0676535219, -6.19234299e-08, .997708857, -2.32029294e-08, 1, 6.04922619e-08, -0.997708857, -1.90572536e-08, -0.0676535219),
		},
	};
local function AldyToiJu()
	if not AldyToicT or #AldyToicT == 0 then
		AldyToiC:Notify({ Title = AldyToiiu(46838), [AldyToiiu(46742)] = AldyToiiu(46956), Duration = 1 });
		return;
	end;
	local AldyToit = AldyToicT[math.random(1, #AldyToicT)];
	local AldyToiD = AldyToiNu[AldyToit];
	if AldyToiD and #AldyToiD > 0 then
		local AldyToiC = AldyToiD[math.random(1, #AldyToiD)];
		local AldyToit = game[AldyToiiu(46713)].LocalPlayer[AldyToiiu(46921)]:WaitForChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
		if AldyToit.Anchored then
			AldyToit.Anchored = false;
			task.wait(.1);
		end;
		AldyToit[AldyToiiu(46631)] = AldyToiC;
		if AldyToigT.enabled then
			AldyToigT.position = AldyToit[AldyToiiu(46631)];
		end;
	end;
end;
AldyToif:Paragraph({
	[AldyToiiu(47123)] = AldyToiiu(46762),
	Desc = "\083\101\108\101\099\116 \111\110\101 \111\114 \109\111\114\101 \105\115\108\097\110\100\115 \121\111\117 \119\097\110\116 \116\111 \102\097\114\109\044 \115\101\116 \116\104\101 \116\101\108\101\112\111\114\116 \116\104\114\101\115\104\111\108\100\044 \097\110\100 \116\104\101\110 \116\111\103\103\108\101 \065\117\116\111\102\097\114\109 \116\111 \115\116\097\114\116\046",
	[AldyToiiu(46674)] = AldyToiiu(46871),
	[AldyToiiu(46726)] = true,
});
local AldyToiFu = {};
for AldyToiC, AldyToit in pairs(AldyToiNu) do
	table[AldyToiiu(46681)](AldyToiFu, AldyToiC);
end;
local AldyToiru = AldyToif:Dropdown({
		Title = "\083\101\108\101\099\116 \073\115\108\097\110\100\040\115\041",
		Values = AldyToiFu,
		[AldyToiiu(46885)] = true,
		[AldyToiiu(46700)] = false,
		[AldyToiiu(46641)] = function(AldyToiC)
			AldyToicT = AldyToiC;
		end,
	});
AldyToiT:Register("\073\115\108\097\110\100\068\114\111\112\100\111\119\110", AldyToiru);
local AldyToizu = 10;
local AldyToipu = AldyToif:Input({ [AldyToiiu(47123)] = AldyToiiu(47075), Placeholder = "\068\101\102\097\117\108\116\058 \049\048", [AldyToiiu(46641)] = function(AldyToit)
			local AldyToiD = tonumber(AldyToit);
			if AldyToiD then
				AldyToizu = AldyToiD;
				AldyToiC:Notify({ Title = "\065\117\116\111 \070\097\114\109 \084\104\114\101\115\104\111\108\100 \085\112\100\097\116\101\100", Description = AldyToiiu(46686) .. (AldyToiD .. AldyToiiu(46841)), [AldyToiiu(46867)] = 1 });
			else
				AldyToiC:Notify({ Title = AldyToiiu(47088), Description = AldyToiiu(47006), [AldyToiiu(46867)] = 1 });
			end;
		end });
AldyToiT:Register(AldyToiiu(46920), AldyToizu);
local AldyToiWu = AldyToif:Toggle({ Title = AldyToiiu(46612), [AldyToiiu(47042)] = false, [AldyToiiu(46641)] = function(AldyToiC)
			if AldyToiC then
				AldyToiJu();
				AldyToiE.autoFarming = AldyToiC;
				AldyToivT:Set(AldyToiC);
				AldyToiET(AldyToiC);
			end;
		end });
AldyToiT:Register(AldyToiiu(46709), AldyToiWu);
(getgenv())[AldyToiiu(46652)] = AldyToiU:Toggle({ Title = "\070\097\118\111\114\105\116\101 \065\108\108 \076\101\103\101\110\100\097\114\121", Default = false, Callback = function(AldyToiC)
			AldyToiu.Legendary = AldyToiC;
			if AldyToiC then
				AldyToiyT();
			end;
		end });
AldyToiT:Register("\070\097\118\111\114\105\116\101\076\101\103\101\110\100", (getgenv())[AldyToiiu(46652)]);
(getgenv()).FavoriteMythic = AldyToiU:Toggle({ Title = "\070\097\118\111\114\105\116\101 \065\108\108 \077\121\116\104\105\099\097\108", [AldyToiiu(47042)] = true, Callback = function(AldyToiC)
			AldyToiu[AldyToiiu(46692)] = AldyToiC;
			if AldyToiC then
				AldyToioT();
			end;
		end });
AldyToiT:Register(AldyToiiu(46708), (getgenv())[AldyToiiu(46708)]);
(getgenv())[AldyToiiu(46718)] = AldyToiU:Toggle({ Title = "\070\097\118\111\114\105\116\101 \065\108\108 \083\101\099\114\101\116", Default = false, Callback = function(AldyToiC)
			AldyToiu[AldyToiiu(46969)] = AldyToiC;
			if AldyToiC then
				AldyToisT();
			end;
		end });
AldyToiT:Register("\070\097\118\111\114\105\116\101\083\101\099\114\101\116", (getgenv())[AldyToiiu(46718)]);
local AldyToiAu = AldyToiF:WaitForChild("\086\097\114\105\097\110\116\115");
local AldyToiXu = {};
for AldyToiC, AldyToit in ipairs(AldyToiAu:GetChildren()) do
	table[AldyToiiu(46681)](AldyToiXu, AldyToit.Name);
end;
local AldyToiau = {};
local AldyToiBu = AldyToiU:Dropdown({
		Title = AldyToiiu(46634),
		Values = AldyToiXu,
		Multi = true,
		AllowNone = false,
		[AldyToiiu(46827)] = {},
		Callback = function(AldyToiC)
			AldyToiau = AldyToiC;
		end,
	});
AldyToiT:Register("\102\097\118\111\114\105\116\101\086\097\114\105\097\110\116", AldyToiBu);
AldyToiU:Button({ Title = "\070\097\118\111\114\105\116\101 \065\108\108", Callback = function()
		AldyToiGT();
	end });
AldyToiU:Button({ [AldyToiiu(47123)] = AldyToiiu(46817), [AldyToiiu(46641)] = function()
		AldyToihT();
	end });
AldyToiS:Button({ [AldyToiiu(47123)] = "\083\097\118\101 \067\111\110\102\105\103", [AldyToiiu(46641)] = function(AldyToiC)
		AldyToiT:Save();
	end });
AldyToiS:Button({ Title = AldyToiiu(46755), Callback = function(AldyToiC)
		AldyToiT:Load();
	end });
local AldyToinu = AldyToiS:Toggle({ [AldyToiiu(47123)] = AldyToiiu(46745), [AldyToiiu(47042)] = false, Callback = function(AldyToiC)
			AldyToiE[AldyToiiu(47089)] = AldyToiC;
			AldyToiKT(AldyToiC);
			AldyToiT:Save();
		end });
AldyToiT:Register("\070\108\111\097\116\080\108\097\121\101\114", AldyToinu);
do
	local AldyToiC = {
			[AldyToiiu(47126)] = AldyToiiu(47087),
			YesButtonName = "\089\101\115",
			[AldyToiiu(46702)] = 1,
			[AldyToiiu(46854)] = 4,
			[AldyToiiu(46831)] = .05,
			[AldyToiiu(46750)] = true,
			[AldyToiiu(46900)] = false,
			[AldyToiiu(46767)] = .3,
			[AldyToiiu(47090)] = .5,
			RetryDelay = .2,
			StopOnTextMatches = { AldyToiiu(46843), "\116\114\097\100\101 \115\117\099\099\101\115\115\102\117\108" },
			[AldyToiiu(46966)] = { "\116\114\097\100\101 \099\097\110\099\101\108\108\101\100", AldyToiiu(46850) },
			RayfieldEnabled = true,
		};
	local AldyToit = game:GetService(AldyToiiu(46667));
	local AldyToiD = game:GetService("\071\117\105\083\101\114\118\105\099\101");
	local AldyToiP = game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101");
	local AldyToik = AldyToij:WaitForChild(AldyToiiu(47106));
	local AldyToiN, AldyToiJ = false, false;
	local AldyToiF = false;
	local AldyToir = nil;
	local AldyToiz = nil;
	local AldyToip = nil;
	local AldyToiW = nil;
	local AldyToiA = nil;
	local AldyToiX = nil;
	local function AldyToia(AldyToiC)
		return AldyToiC and (AldyToiC[AldyToiiu(46664)] and (AldyToiC.Visible and (AldyToiC[AldyToiiu(46656)] and (AldyToiC.AbsoluteSize.Magnitude > 0 and AldyToiC:IsDescendantOf(AldyToik)))));
	end;
	local function AldyToiB()
		local AldyToit = AldyToik:FindFirstChild(AldyToiC.PromptName);
		return AldyToit and (AldyToit:IsA(AldyToiiu(46875)) and AldyToit) or nil;
	end;
	local function AldyToin()
		local AldyToiC = AldyToiB();
		if not AldyToiC then
			return nil;
		end;
		local AldyToit = AldyToiC:FindFirstChildWhichIsA("\084\101\120\116\076\097\098\101\108", true);
		return AldyToit and AldyToit.Text or nil;
	end;
	local function AldyToiR()
		local AldyToiC = AldyToin();
		if not AldyToiC then
			return false;
		end;
		AldyToiC = AldyToiC:lower();
		return AldyToiC:find(AldyToiiu(47009)) and AldyToiC:find("\102\114\111\109") or false;
	end;
	local function AldyToie(AldyToit)
		if not AldyToit then
			return nil;
		end;
		for AldyToit, AldyToiD in ipairs(AldyToit:GetDescendants()) do
			if AldyToiR() and (AldyToiD:IsA("\073\109\097\103\101\066\117\116\116\111\110") and AldyToiD.Name == AldyToiC.YesButtonName) then
				if AldyToia(AldyToiD) then
					return AldyToiD;
				end;
			end;
		end;
		return nil;
	end;
	local function AldyToiV(AldyToiC)
		local AldyToit, AldyToiP = AldyToiC.AbsolutePosition, AldyToiC.AbsoluteSize;
		local AldyToij = AldyToiD:GetGuiInset();
		return {
			[AldyToiiu(46780)] = AldyToit[AldyToiiu(46780)],
			[AldyToiiu(46729)] = AldyToit[AldyToiiu(46729)] + AldyToij[AldyToiiu(46729)],
			W = AldyToiP.X,
			H = AldyToiP.Y,
		};
	end;
	local function AldyToiw(AldyToit)
		local AldyToiD = math.clamp(AldyToiC[AldyToiiu(46831)], 0, .49);
		local AldyToiP, AldyToij = AldyToit[AldyToiiu(46780)] + AldyToit[AldyToiiu(46669)] * AldyToiD, AldyToit.X + AldyToit.W * (1 - AldyToiD);
		local AldyToik, AldyToiN = AldyToit.Y + AldyToit[AldyToiiu(46989)] * AldyToiD, AldyToit[AldyToiiu(46729)] + AldyToit.H * (1 - AldyToiD);
		local AldyToiJ = (AldyToiP + AldyToij) / 2;
		local AldyToiF = (AldyToik + AldyToiN) / 2;
		return AldyToiJ, AldyToiF;
	end;
	(AldyToij.PlayerGui:WaitForChild(AldyToiiu(47087)))[AldyToiiu(46845)]:Connect(function(AldyToiC)
		if AldyToiC.Name == AldyToiiu(47093) then
			local AldyToit = AldyToiC:WaitForChild("\079\112\116\105\111\110\115");
			local AldyToiD = AldyToit:WaitForChild(AldyToiiu(46720));
			AldyToiD.Active = true;
			AldyToiD[AldyToiiu(46618)] = true;
		end;
	end);
	local function AldyToiy(AldyToiD, AldyToiP)
		if AldyToiC.UseVIM and AldyToit then
			pcall(function()
				if AldyToiC[AldyToiiu(46900)] then
					AldyToit:SendMouseMoveEvent(AldyToiD, AldyToiP, game);
					task.wait(AldyToiC[AldyToiiu(47090)]);
				end;
				AldyToit:SendMouseButtonEvent(AldyToiD, AldyToiP, 0, true, game, 0);
				task.wait(AldyToiC[AldyToiiu(47090)]);
				AldyToit:SendMouseButtonEvent(AldyToiD, AldyToiP, 0, false, game, 0);
			end);
		elseif AldyToip and AldyToia(AldyToip) then
			pcall(function()
				AldyToip.MouseButton1Click:Fire();
			end);
		end;
	end;
	local function AldyToio()
		AldyToiF = true;
		for AldyToiC = 1, 50, 1 do
			if not AldyToiJ then
				break;
			end;
			task[AldyToiiu(46873)](.01);
		end;
		AldyToiJ = false;
	end;
	local function AldyTois(AldyToiC, AldyToit)
		local AldyToiD = tick() + (AldyToit or 2);
		while tick() < AldyToiD do
			local AldyToit = AldyToie(AldyToiC);
			if AldyToit and AldyToia(AldyToit) then
				return AldyToit;
			end;
			task[AldyToiiu(46873)](.05);
		end;
		return nil;
	end;
	local function AldyToiI()
		if AldyToiJ then
			return;
		end;
		AldyToip = AldyTois(AldyToiz, 2);
		if not AldyToip then
			return;
		end;
		local AldyToit = AldyToiV(AldyToip);
		AldyToiJ = true;
		AldyToiF = false;
		AldyToir = task[AldyToiiu(47116)](function()
				local AldyToiD = tick();
				local AldyToiP = 0;
				while AldyToiJ and (AldyToiN and not AldyToiF) do
					if not AldyToia(AldyToip) then
						break;
					end;
					if AldyToiP % 5 == 0 then
						local AldyToiC = AldyToiV(AldyToip);
						if AldyToiC then
							AldyToit = AldyToiC;
						end;
					end;
					local AldyToij, AldyToik = AldyToiw(AldyToit);
					AldyToiy(AldyToij, AldyToik);
					AldyToiP = AldyToiP + 1;
					local AldyToiN = 1 / math.clamp(AldyToiC[AldyToiiu(46702)], 6, 40);
					task[AldyToiiu(46873)](AldyToiN);
					if tick() - AldyToiD > AldyToiC.MaxSpamSeconds then
						break;
					end;
				end;
				AldyToiJ = false;
			end);
	end;
	local function AldyToic()
		if AldyToiX then
			AldyToiX:Disconnect();
			AldyToiX = nil;
		end;
		AldyToiA = AldyToiA or AldyToiP:FindFirstChild("\082\069\047\084\101\120\116\078\111\116\105\102\105\099\097\116\105\111\110");
		if AldyToiA and AldyToiA:IsA(AldyToiiu(46996)) then
			AldyToiX = AldyToiA[AldyToiiu(46848)]:Connect(function(AldyToit)
					local AldyToiD = type(AldyToit) == AldyToiiu(46627) and AldyToit[AldyToiiu(46894)] or AldyToit;
					if not AldyToiD then
						return;
					end;
					local AldyToiP = (tostring(AldyToiD)):lower();
					for AldyToiC, AldyToit in ipairs(AldyToiC[AldyToiiu(47098)]) do
						if string.find(AldyToiP, AldyToit:lower(), 1, true) then
							AldyToio();
							return;
						end;
					end;
					for AldyToiC, AldyToit in ipairs(AldyToiC[AldyToiiu(46966)]) do
						if string.find(AldyToiP, AldyToit:lower(), 1, true) then
							AldyToio();
							return;
						end;
					end;
				end);
		end;
	end;
	local function AldyToiq()
		if not AldyToiN or not AldyToiz then
			return;
		end;
		if AldyToiz[AldyToiiu(46889)] then
			task[AldyToiiu(47099)](AldyToiC.UILoadDelay, AldyToiI);
		else
			AldyToio();
		end;
	end;
	local function AldyToid()
		if AldyToiW then
			AldyToiW:Disconnect();
		end;
		AldyToiz = AldyToiB();
		if not AldyToiz then
			return;
		end;
		AldyToiW = (AldyToiz:GetPropertyChangedSignal(AldyToiiu(46889))):Connect(AldyToiq);
	end;
	local function AldyToix(AldyToit)
		AldyToit = AldyToit or {};
		for AldyToit, AldyToiD in pairs(AldyToit) do
			if AldyToiC[AldyToit] ~= nil then
				AldyToiC[AldyToit] = AldyToiD;
			end;
		end;
		AldyToic();
	end;
	local function AldyToiH()
		if AldyToiN then
			return;
		end;
		AldyToiN = true;
		AldyToid();
		task[AldyToiiu(47099)](AldyToiC[AldyToiiu(46767)], function()
			if AldyToiN and (AldyToiz and AldyToiz[AldyToiiu(46889)]) then
				AldyToiI();
			end;
		end);
	end;
	local function AldyToiG()
		if not AldyToiN then
			return;
		end;
		AldyToiN = false;
		AldyToio();
	end;
	local function AldyToih(AldyToit)
		AldyToiC.YesButtonName = AldyToit;
	end;
	local function AldyToib(AldyToit)
		AldyToiC.RayfieldEnabled = AldyToit;
		AldyToiC.UseVIM = AldyToit;
		if not AldyToit then
			AldyToiG();
		end;
	end;
	local AldyToil = AldyToiS:Toggle({ [AldyToiiu(47123)] = AldyToiiu(46789), Default = false, [AldyToiiu(46641)] = function(AldyToiC)
				if AldyToiC then
					AldyToib(true);
					AldyToiH();
				else
					AldyToib(false);
				end;
			end });
	AldyToiT:Register("\065\099\099\101\112\116\084\114\097\100\101", AldyToil);
	AldyToix({ [AldyToiiu(46804)] = false });
end;
local function AldyToiRu(AldyToiC)
	if not AldyToiC or type(AldyToiC) ~= "\110\117\109\098\101\114" then
		return "\063\063\063";
	end;
	if AldyToiC >= 1000000 then
		return string.format(AldyToiiu(46972), AldyToiC / 1000000);
	elseif AldyToiC >= 1000 then
		return string[AldyToiiu(47069)]("\037\046\049\102\107 \067\111\105\110\115", AldyToiC / 1000);
	else
		return tostring(AldyToiC) .. " \067\111\105\110\115";
	end;
end;
local AldyToieu = {};
for AldyToiC, AldyToit in ipairs(AldyToiw:GetChildren()) do
	if AldyToit:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
		local AldyToiC, AldyToiD = pcall(require, AldyToit);
		if AldyToiC and typeof(AldyToiD) == "\116\097\098\108\101" then
			local AldyToiC = AldyToiD.Data;
			if AldyToiC and AldyToiC[AldyToiiu(47018)] == AldyToiiu(46757) then
				local AldyToiP = AldyToiC[AldyToiiu(46851)] or AldyToiiu(47108);
				local AldyToij = AldyToiC.Name or AldyToit.Name;
				local AldyToik = AldyToiC.Description or "-";
				local AldyToiN = AldyToiiu(46706);
				if AldyToiD[AldyToiiu(46931)] then
					AldyToiN = AldyToiRu(AldyToiD.Price);
				else
					local AldyToiC = {
							["\071\111\108\100 \082\111\100"] = AldyToiiu(46803),
							[AldyToiiu(46801)] = "\049\053\107 \067\111\105\110\115",
							["\077\105\100\110\105\103\104\116 \082\111\100"] = "\053\048\107 \067\111\105\110\115",
							[AldyToiiu(47023)] = AldyToiiu(46926),
						};
					AldyToiN = AldyToiC[AldyToij] or AldyToiiu(46869);
				end;
				table[AldyToiiu(46681)](AldyToieu, {
					[AldyToiiu(47015)] = AldyToiP,
					[AldyToiiu(46637)] = AldyToij,
					[AldyToiiu(47028)] = AldyToik,
					Harga = AldyToiN,
				});
			end;
		end;
	end;
end;
AldyToiZ:Paragraph({ [AldyToiiu(47123)] = AldyToiiu(46613), [AldyToiiu(46824)] = "\083\111\109\101 \082\111\100\115 \099\097\110\'\116 \098\101 \112\117\114\099\104\097\115\101\100 \098\101\099\097\117\115\101 \116\104\101\121 \097\114\101 \086\073\080 \111\110\108\121 \111\114 \100\111\101\115\110\'\116 \104\097\118\101 \097 \112\114\105\099\101 \109\097\112\046", Color = AldyToiiu(46974) });
for AldyToit, AldyToiD in ipairs(AldyToieu) do
	AldyToiZ:Button({ [AldyToiiu(47123)] = string[AldyToiiu(47069)]("\037\115 \040\037\115\041", AldyToiD.Name, AldyToiD[AldyToiiu(46786)]), [AldyToiiu(46641)] = function()
			local AldyToit, AldyToiP = pcall(function()
					return AldyToiF[AldyToiiu(47043)]._Index["\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048"].net["\082\070\047\080\117\114\099\104\097\115\101\070\105\115\104\105\110\103\082\111\100"]:InvokeServer(AldyToiD[AldyToiiu(47015)]);
				end);
			AldyToiC:Notify({ [AldyToiiu(47123)] = AldyToiiu(46944), Description = AldyToit and "\066\117\121\105\110\103 " .. AldyToiD.Name or AldyToiiu(46644) .. AldyToiD.Name, [AldyToiiu(46867)] = 2 });
			if not AldyToit then
				warn("\091\066\117\121 \082\111\100 \069\114\114\111\114\093\058", AldyToiP);
			end;
		end });
end;
local AldyToiVu = AldyToiF:FindFirstChild(AldyToiiu(46995));
if not AldyToiVu then
	warn(AldyToiiu(46917));
	return;
end;
AldyToiZ:Paragraph({ Title = "\066\097\105\116\047 \066\111\098\098\101\114", [AldyToiiu(46824)] = "\083\111\109\101 \082\111\100\115 \099\097\110\'\116 \098\101 \112\117\114\099\104\097\115\101\100 \098\101\099\097\117\115\101 \116\104\101\121 \097\114\101 \086\073\080 \111\110\108\121 \111\114 \100\111\101\115\110\'\116 \104\097\118\101 \097 \112\114\105\099\101 \109\097\112\046", [AldyToiiu(46674)] = AldyToiiu(46974) });
for AldyToit, AldyToiD in ipairs(AldyToiVu:GetChildren()) do
	if AldyToiD:IsA(AldyToiiu(46676)) then
		local AldyToit, AldyToiP = pcall(require, AldyToiD);
		if AldyToit and (AldyToiP and AldyToiP.Data) then
			local AldyToit = AldyToiP[AldyToiiu(47113)][AldyToiiu(46851)] or 0;
			local AldyToiD = AldyToiP[AldyToiiu(47113)].Name or AldyToiiu(46768);
			local AldyToij = AldyToiP[AldyToiiu(47113)].Description or AldyToiiu(47096);
			local AldyToik = AldyToiP[AldyToiiu(46931)] and AldyToiP[AldyToiiu(46931)] .. " \067\111\105\110\115" or AldyToiiu(46620);
			AldyToiZ:Button({ [AldyToiiu(47123)] = AldyToiD .. (" \040" .. (AldyToik .. "\041")), [AldyToiiu(46641)] = function()
					pcall(function()
						AldyToiF[AldyToiiu(47043)][AldyToiiu(46908)]["\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048"][AldyToiiu(46715)]["\082\070\047\080\117\114\099\104\097\115\101\066\097\105\116"]:InvokeServer(AldyToit);
						AldyToiC:Notify({ [AldyToiiu(47123)] = AldyToiiu(46814), [AldyToiiu(46742)] = AldyToiiu(46849) .. AldyToiD, Duration = 2 });
					end);
				end });
		end;
	end;
end;
local AldyToiwu = {};
local function AldyToiyu()
	AldyToiwu[AldyToiiu(47085)] = { [AldyToiiu(47014)] = workspace.Terrain[AldyToiiu(47014)], [AldyToiiu(46907)] = workspace.Terrain[AldyToiiu(46907)], WaterReflectance = workspace.Terrain.WaterReflectance };
	AldyToiwu.Parts = {};
	AldyToiwu[AldyToiiu(47005)] = {};
	AldyToiwu.Meshes = {};
	for AldyToiC, AldyToit in pairs(game:GetDescendants()) do
		if AldyToit:IsA("\066\097\115\101\080\097\114\116") then
			AldyToiwu[AldyToiiu(46886)][AldyToit] = {
					Color = AldyToit[AldyToiiu(46674)],
					[AldyToiiu(46960)] = AldyToit[AldyToiiu(46960)],
					Reflectance = AldyToit.Reflectance,
					[AldyToiiu(46616)] = AldyToit[AldyToiiu(46616)],
					Transparency = AldyToit[AldyToiiu(46685)],
				};
		elseif AldyToit:IsA(AldyToiiu(46985)) or AldyToit:IsA("\084\101\120\116\117\114\101") then
			AldyToiwu[AldyToiiu(47005)][AldyToit] = { Transparency = AldyToit.Transparency, [AldyToiiu(46778)] = AldyToit.Texture };
		elseif AldyToit:IsA("\083\112\101\099\105\097\108\077\101\115\104") then
			AldyToiwu[AldyToiiu(47039)][AldyToit] = { TextureId = AldyToit[AldyToiiu(46837)] };
		end;
	end;
end;
local function AldyToiou()
	AldyToiyu();
	local AldyToiC = workspace[AldyToiiu(47085)];
	local AldyToit = (game:GetService("\080\108\097\121\101\114\115")).LocalPlayer;
	if sethiddenproperty then
		sethiddenproperty(AldyToiC, "\087\097\116\101\114\087\097\118\101\083\105\122\101", 0);
		sethiddenproperty(AldyToiC, AldyToiiu(46907), 0);
		sethiddenproperty(AldyToiC, AldyToiiu(46963), 0);
	else
		AldyToiC[AldyToiiu(47014)] = 0;
		AldyToiC[AldyToiiu(46907)] = 0;
		AldyToiC[AldyToiiu(46963)] = 0;
	end;
	for AldyToiC, AldyToiD in pairs(game:GetDescendants()) do
		if AldyToiD:IsA("\066\097\115\101\080\097\114\116") then
			if not (AldyToit and AldyToiD:IsDescendantOf(AldyToit[AldyToiiu(46921)])) then
				AldyToiD[AldyToiiu(46960)] = Enum.Material[AldyToiiu(46623)];
				AldyToiD[AldyToiiu(46674)] = Color3[AldyToiiu(46924)](120, 120, 120);
				AldyToiD.Reflectance = 0;
				AldyToiD[AldyToiiu(46616)] = false;
			end;
		elseif AldyToiD:IsA(AldyToiiu(46985)) or AldyToiD:IsA(AldyToiiu(46778)) then
			if not (AldyToiD.Name == AldyToiiu(46957) and AldyToiD[AldyToiiu(46664)]:IsA("\072\101\097\100")) then
				AldyToiD.Transparency = 1;
				AldyToiD[AldyToiiu(46778)] = "";
			end;
		elseif AldyToiD:IsA("\080\097\114\116\105\099\108\101\069\109\105\116\116\101\114") or AldyToiD:IsA("\084\114\097\105\108") or AldyToiD:IsA("\066\101\097\109") then
			AldyToiD[AldyToiiu(46889)] = false;
		elseif AldyToiD:IsA(AldyToiiu(46759)) then
			AldyToiD:Destroy();
		elseif AldyToiD:IsA("\083\112\101\099\105\097\108\077\101\115\104") then
			AldyToiD.TextureId = AldyToiiu(46918);
		end;
	end;
	(settings()).Rendering.MeshPartDetailLevel = Enum[AldyToiiu(46947)].Level01;
	(settings()).Rendering.QualityLevel = Enum[AldyToiiu(46699)][AldyToiiu(46888)];
end;
local function AldyToisu()
	local AldyToiC = workspace.Terrain;
	if AldyToiwu[AldyToiiu(47085)] then
		AldyToiC[AldyToiiu(47014)] = AldyToiwu.Terrain.WaterWaveSize;
		AldyToiC[AldyToiiu(46907)] = AldyToiwu.Terrain.WaterWaveSpeed;
		AldyToiC[AldyToiiu(46963)] = AldyToiwu.Terrain.WaterReflectance;
	end;
	for AldyToiC, AldyToit in pairs(AldyToiwu.Parts) do
		if AldyToiC and AldyToiC.Parent then
			for AldyToit, AldyToiD in pairs(AldyToit) do
				AldyToiC[AldyToit] = AldyToiD;
			end;
		end;
	end;
	for AldyToiC, AldyToit in pairs(AldyToiwu.Decals) do
		if AldyToiC and AldyToiC.Parent then
			for AldyToit, AldyToiD in pairs(AldyToit) do
				AldyToiC[AldyToit] = AldyToiD;
			end;
		end;
	end;
	for AldyToiC, AldyToit in pairs(AldyToiwu[AldyToiiu(47039)]) do
		if AldyToiC and AldyToiC.Parent then
			for AldyToit, AldyToiD in pairs(AldyToit) do
				AldyToiC[AldyToit] = AldyToiD;
			end;
		end;
	end;
end;
local function AldyToiIu()
	local AldyToiC = game:GetService(AldyToiiu(46872));
	AldyToiC[AldyToiiu(47078)] = 0;
	AldyToiC[AldyToiiu(46707)] = .5;
	AldyToiC[AldyToiiu(46930)] = Color3.fromRGB(10, 10, 10);
	AldyToiC[AldyToiiu(46938)] = Color3[AldyToiiu(46924)](5, 5, 5);
	AldyToiC[AldyToiiu(46884)] = 0;
	AldyToiC[AldyToiiu(47110)] = 100000;
	AldyToiC:ClearAllChildren();
	local AldyToit = Instance[AldyToiiu(46604)](AldyToiiu(46635));
	AldyToit.SkyboxBk = AldyToiiu(46918);
	AldyToit[AldyToiiu(46611)] = "";
	AldyToit[AldyToiiu(46640)] = "";
	AldyToit[AldyToiiu(46979)] = AldyToiiu(46918);
	AldyToit.SkyboxRt = "";
	AldyToit.SkyboxUp = "";
	AldyToit.SunAngularSize = 0;
	AldyToit.MoonAngularSize = 0;
	AldyToit[AldyToiiu(46874)] = 0;
	AldyToit[AldyToiiu(46664)] = AldyToiC;
end;
local AldyToicu = false;
local AldyToiqu = AldyToiS:Toggle({ [AldyToiiu(47123)] = AldyToiiu(46840), [AldyToiiu(47042)] = false, Callback = function(AldyToiC)
			AldyToicu = AldyToiC;
		end });
AldyToiT:Register("\100\097\114\107\078\105\103\104\116", AldyToiqu);
AldyToiD.RenderStepped:Connect(function()
	if AldyToicu then
		AldyToiIu();
	end;
end);
local AldyToidu = AldyToiS:Toggle({
		[AldyToiiu(47123)] = AldyToiiu(46636),
		Description = "\082\101\100\117\099\101 \116\101\120\116\117\114\101\115 \102\111\114 \098\101\116\116\101\114 \070\080\083",
		[AldyToiiu(47042)] = true,
		Callback = function(AldyToiC)
			if AldyToiC then
				AldyToiou();
			else
				AldyToisu();
			end;
			AldyToiT:Save();
		end,
	});
AldyToiT:Register(AldyToiiu(47121), AldyToidu);
local AldyToixu = AldyToiS:Toggle({
		Title = AldyToiiu(47061),
		[AldyToiiu(46742)] = "\068\105\115\097\098\108\101 \114\101\110\100\101\114 \102\111\114 \098\101\116\116\101\114 \070\080\083",
		[AldyToiiu(47042)] = false,
		Callback = function(AldyToiC)
			if AldyToiC then
				pcall(function()
					AldyToiD:Set3dRenderingEnabled(false);
				end);
			else
				pcall(function()
					AldyToiD:Set3dRenderingEnabled(true);
				end);
			end;
			AldyToiT:Save();
		end,
	});
AldyToiT:Register("\114\101\110\100\101\114\051\100", AldyToixu);
local AldyToiHu = {
		[AldyToiiu(47052)] = false,
		CutsceneController = require((game:GetService(AldyToiiu(46879)))[AldyToiiu(46782)].CutsceneController),
		OriginalPlay = nil,
		OriginalStop = nil,
	};
function AldyToiHu.SaveOriginal()
	if not AldyToiHu[AldyToiiu(46716)] then
		AldyToiHu.OriginalPlay = AldyToiHu[AldyToiiu(46998)][AldyToiiu(46962)];
	end;
	if not AldyToiHu[AldyToiiu(46799)] then
		AldyToiHu[AldyToiiu(46799)] = AldyToiHu.CutsceneController.Stop;
	end;
end;
function AldyToiHu.Disable()
	if AldyToiHu[AldyToiiu(47052)] then
		return;
	end;
	AldyToiHu.Disabled = true;
	AldyToiHu.SaveOriginal();
	AldyToiHu[AldyToiiu(46998)][AldyToiiu(46962)] = function(AldyToiC, ...)
			local AldyToit = require(AldyToiF[AldyToiiu(46928)].GuiControl);
			local AldyToiD = game:GetService(AldyToiiu(46852));
			local AldyToiP = require(AldyToiF[AldyToiiu(46782)][AldyToiiu(46842)]);
			AldyToit:SetHUDVisibility(true);
			AldyToiD[AldyToiiu(46889)] = true;
			if AldyToiP:IsEnabled() == false then
				AldyToiP:SetEnabled(true);
			end;
		end;
	AldyToiHu.CutsceneController.Stop = function(...)
			AldyToiHu[AldyToiiu(46799)](...);
		end;
end;
function AldyToiHu.Enable()
	if not AldyToiHu[AldyToiiu(47052)] then
		return;
	end;
	AldyToiHu.Disabled = false;
	AldyToiHu.SaveOriginal();
	AldyToiHu[AldyToiiu(46998)].Play = AldyToiHu[AldyToiiu(46716)];
	AldyToiHu[AldyToiiu(46998)].Stop = AldyToiHu[AldyToiiu(46799)];
end;
local AldyToiGu = AldyToiS:Toggle({ [AldyToiiu(47123)] = "\068\105\115\097\098\108\101\047\083\107\105\112 \067\117\116\115\099\101\110\101 \065\110\105\109\097\116\105\111\110", Default = false, [AldyToiiu(46641)] = function(AldyToiC)
			if AldyToiC then
				AldyToiHu.Disable();
			else
				AldyToiHu[AldyToiiu(46619)]();
			end;
			AldyToiT:Save();
		end });
AldyToiT:Register("\067\117\116\115\099\101\110\101\084\111\103\103\108\101", AldyToiGu);
local AldyToihu = AldyToiS:Toggle({ Title = "\070\105\115\104\105\110\103 \082\097\100\097\114", Default = false, [AldyToiiu(46641)] = function(AldyToiC)
			local AldyToit = require(AldyToiF[AldyToiiu(47043)][AldyToiiu(47109)]);
			local AldyToiD = AldyToit:RemoteFunction(AldyToiiu(46870));
			AldyToiD:InvokeServer(AldyToiC);
			AldyToiT:Save();
		end });
AldyToiT:Register("\070\105\115\104\105\110\103\082\097\100\097\114\084\111\103\103\108\101", AldyToihu);
local AldyToibu = AldyToiS:Toggle({ [AldyToiiu(47123)] = "\065\117\116\111 \083\097\118\101 \038 \082\101\115\116\111\114\101 \076\097\115\116 \080\111\115\105\116\105\111\110", Default = false, Callback = function(AldyToiC)
			AldyToiTT = AldyToiC;
			AldyToiT:Save();
		end });
AldyToiT:Register("\115\097\118\101\076\097\115\116\080\111\115\105\116\105\111\110", AldyToibu);
local AldyToilu = AldyToiS:Toggle({ Title = AldyToiiu(46863), Default = false, Callback = function(AldyToiC)
			AldyToigT.enabled = AldyToiC;
			if not AldyToiC then
				AldyToigT[AldyToiiu(46942)] = nil;
			elseif AldyToiE.autoFishing and (AldyToir[AldyToiiu(46921)] and AldyToir[AldyToiiu(46921)][AldyToiiu(46626)]) then
				AldyToigT[AldyToiiu(46942)] = AldyToir.Character.PrimaryPart.CFrame;
			end;
			AldyToiT:Save();
		end });
AldyToiT:Register("\076\111\099\107\080\111\115\105\116\105\111\110", AldyToilu);
task[AldyToiiu(47116)](function()
	while task.wait() do
		if AldyToigT.enabled and (AldyToigT.position and (AldyToir[AldyToiiu(46921)] and AldyToir[AldyToiiu(46921)][AldyToiiu(46626)])) then
			AldyToir.Character[AldyToiiu(46626)].CFrame = AldyToigT.position;
		end;
	end;
end);
local AldyToiuu = false;
AldyToiCT:Section({ Title = "\070\105\110\100 \077\101" });
AldyToiCT:Paragraph({
	Title = AldyToiiu(46748),
	[AldyToiiu(46824)] = AldyToiiu(46645),
	[AldyToiiu(46914)] = "\109\101\115\115\097\103\101-\115\113\117\097\114\101",
	[AldyToiiu(46674)] = Color3.fromHex(AldyToiiu(46967)),
	[AldyToiiu(46791)] = { {
			Title = AldyToiiu(47056),
			Icon = AldyToiiu(46943),
			Variant = "\084\101\114\116\105\097\114\121",
			[AldyToiiu(46641)] = function()
				setclipboard("\104\116\116\112\115\058\047\047\100\105\115\099\111\114\100\046\103\103\047\097\117\080\085\071\071\057\100\121\119");
				AldyToiC:Notify({ [AldyToiiu(47123)] = "\067\111\112\105\101\100\033", [AldyToiiu(47092)] = "\068\105\115\099\111\114\100 \108\105\110\107 \099\111\112\105\101\100 \116\111 \099\108\105\112\098\111\097\114\100\046", [AldyToiiu(46867)] = 1 });
			end,
		} },
});
AldyToiCT:Paragraph({
	Title = "\071\105\116\072\117\098",
	Desc = "\065\108\100\105 \080\114\097\110\097\116\097",
	[AldyToiiu(46914)] = "\115\101\110\100",
	Color = Color3[AldyToiiu(46897)](AldyToiiu(46670)),
	[AldyToiiu(46791)] = { {
			Title = AldyToiiu(47056),
			Icon = AldyToiiu(46943),
			[AldyToiiu(46723)] = AldyToiiu(46610),
			[AldyToiiu(46641)] = function()
				setclipboard(AldyToiiu(46958));
				AldyToiC:Notify({ [AldyToiiu(47123)] = "\067\111\112\105\101\100\033", [AldyToiiu(47092)] = AldyToiiu(46982), Duration = 1 });
			end,
		} },
});
AldyToitT:Section({ [AldyToiiu(47123)] = "\240\159\145\164 \076\111\099\097\108 \080\108\097\121\101\114" });
AldyToitT:Paragraph({ Title = "\240\159\134\148 \080\108\097\121\101\114 \073\068", Desc = tostring(AldyToir.UserId), [AldyToiiu(46791)] = { {
			Title = AldyToiiu(47059),
			[AldyToiiu(46806)] = "\099\111\112\121",
			[AldyToiiu(46723)] = AldyToiiu(46610),
			Callback = function()
				setclipboard(tostring(AldyToir[AldyToiiu(46698)]));
			end,
		} } });
AldyToitT:Section({ Title = AldyToiiu(46655) });
local AldyToiEu = AldyToitT:Paragraph({ [AldyToiiu(47123)] = AldyToiiu(46925), Desc = #AldyToit:GetPlayers() .. (AldyToiiu(46693) .. AldyToit.MaxPlayers) });
local AldyToigu = AldyToitT:Paragraph({ [AldyToiiu(47123)] = AldyToiiu(46633), Desc = AldyToiiu(46954) });
AldyToitT:Paragraph({ [AldyToiiu(47123)] = "\240\159\143\183\239\184\143 \080\108\097\099\101 \073\068", Desc = tostring(game.PlaceId), Buttons = { {
			[AldyToiiu(47123)] = AldyToiiu(47059),
			Icon = "\099\111\112\121",
			[AldyToiiu(46723)] = AldyToiiu(46610),
			Callback = function()
				setclipboard(tostring(game.PlaceId));
			end,
		} } });
local AldyToiTu;
AldyToiTu = string[AldyToiiu(47069)]("\104\116\116\112\115\058\047\047\119\119\119\046\114\111\098\108\111\120\046\099\111\109\047\103\097\109\101\115\047\115\116\097\114\116\063\112\108\097\099\101\073\100\061\037\100\038\103\097\109\101\073\110\115\116\097\110\099\101\073\100\061\037\115", game.PlaceId, game[AldyToiiu(46857)]);
AldyToitT:Paragraph({ [AldyToiiu(47123)] = "\240\159\148\151 \083\101\114\118\101\114 \076\105\110\107", Desc = "\067\108\105\099\107 \067\111\112\121 \116\111 \083\104\097\114\101\047\074\111\105\110", [AldyToiiu(46791)] = { {
			[AldyToiiu(47123)] = "\067\111\112\121 \076\105\110\107",
			Icon = AldyToiiu(47065),
			Variant = "\080\114\105\109\097\114\121",
			Callback = function()
				setclipboard(AldyToiTu);
				AldyToiC:Notify({ [AldyToiiu(47123)] = AldyToiiu(46882), Content = "\083\101\114\118\101\114 \108\105\110\107 \099\111\112\105\101\100 \116\111 \099\108\105\112\098\111\097\114\100\046" });
			end,
		} } });
local AldyToimu = "";
local AldyToiOu = AldyToitT:Input({ Title = "\073\110\112\117\116 \083\101\114\118\101\114 \076\105\110\107", [AldyToiiu(47031)] = "\069\110\116\101\114 \121\111\117\114 \083\101\114\118\101\114 \076\105\110\107", Callback = function(AldyToiC)
			AldyToimu = AldyToiC;
			AldyToiT:Save();
		end });
AldyToiT:Register(AldyToiiu(46949), AldyToiOu);
AldyToitT:Button({ Title = AldyToiiu(46797), [AldyToiiu(46641)] = function()
		local AldyToit = linkJoin;
		if not AldyToit or AldyToit == AldyToiiu(46918) then
			AldyToiC:Notify({ Title = "\076\105\110\107 \069\114\114\111\114", [AldyToiiu(47092)] = "\076\105\110\107 \098\101\108\117\109 \100\105 \105\110\112\117\116", [AldyToiiu(46867)] = 1 });
			return;
		end;
		if AldyToit:find(AldyToiiu(47117)) and AldyToit:find(AldyToiiu(46891)) then
			local AldyToiD = AldyToit:match(AldyToiiu(46999));
			local AldyToiP = AldyToit:match(AldyToiiu(46813));
			if not AldyToiD or not AldyToiP then
				AldyToiC:Notify({ Title = AldyToiiu(46835), [AldyToiiu(47092)] = AldyToiiu(46746), Duration = 2 });
				return;
			end;
			AldyToiD = tonumber(AldyToiD);
			local AldyToik, AldyToiN = pcall(function()
					AldyToiJ:TeleportToPlaceInstance(AldyToiD, AldyToiP, AldyToij);
				end);
			if not AldyToik then
				AldyToiC:Notify({ Title = "\084\101\108\101\112\111\114\116 \070\097\105\108\101\100", Content = tostring(AldyToiN), Duration = 2 });
			end;
		elseif AldyToit:find(AldyToiiu(46906)) then
			local AldyToiD = AldyToit:match(AldyToiiu(46649));
			local AldyToiP = game.PlaceId;
			if not AldyToiD then
				AldyToiC:Notify({ Title = "\069\114\114\111\114", [AldyToiiu(47092)] = "\080\114\105\118\097\116\101 \115\101\114\118\101\114 \099\111\100\101 \116\105\100\097\107 \100\105\116\101\109\117\107\097\110", Duration = 2 });
				return;
			end;
			local AldyToik, AldyToiN = pcall(function()
					AldyToiJ:TeleportToPrivateServer(AldyToiP, AldyToiD, { AldyToij });
				end);
			if not AldyToik then
				AldyToiC:Notify({ Title = AldyToiiu(46868), Content = tostring(AldyToiN), Duration = 2 });
			end;
		else
			AldyToiC:Notify({ [AldyToiiu(47123)] = "\069\114\114\111\114", [AldyToiiu(47092)] = AldyToiiu(46970), [AldyToiiu(46867)] = 2 });
		end;
	end });
local AldyToiMu = os.time() - AldyToix;
local AldyToiLu = math.floor(AldyToiMu / 60);
local AldyToifu = AldyToiMu % 60;
task[AldyToiiu(47116)](function()
	while task.wait(10) do
		if AldyToil[AldyToiiu(47062)] then
			break;
		end;
		local AldyToiC = os[AldyToiiu(46617)]() - AldyToix;
		local AldyToiD = math.floor(AldyToiC / 60);
		local AldyToiP = AldyToiC % 60;
		AldyToiEu:SetDesc(tostring(#AldyToit:GetPlayers()) .. (AldyToiiu(46693) .. tostring(AldyToit.MaxPlayers)));
		AldyToigu:SetDesc(tostring(math.floor((game:GetService("\083\116\097\116\115")).Network.ServerStatsItem["\068\097\116\097 \080\105\110\103"]:GetValue())) .. AldyToiiu(47058));
	end;
end);
local function AldyToiKu(AldyToiC, AldyToit)
	for AldyToiC, AldyToiD in ipairs(AldyToiC) do
		if AldyToiD == AldyToit then
			return true;
		end;
	end;
	return false;
end;
local AldyToiSu = AldyToiiu(46918);
if AldyToiE[AldyToiiu(46694)] then
	AldyToiHT();
end;
local function AldyToiYu(AldyToiC)
	local AldyToit = AldyToiF:FindFirstChild(AldyToiiu(46787));
	if not AldyToit then
		return nil;
	end;
	local AldyToiD = (AldyToiC:gsub("\037\115\042\037\098\040\041", AldyToiiu(46918))):gsub("\094\037\115\042\040\046-\041\037\115\042\036", AldyToiiu(47124));
	local AldyToiP, AldyToij = nil, 0;
	for AldyToiC, AldyToit in ipairs(AldyToit:GetChildren()) do
		if AldyToit:IsA(AldyToiiu(46676)) then
			if AldyToiD:find(AldyToit[AldyToiiu(46637)], 1, true) then
				if #AldyToit[AldyToiiu(46637)] > AldyToij then
					AldyToij = #AldyToit.Name;
					AldyToiP = AldyToit;
				end;
			end;
		end;
	end;
	return AldyToiP;
end;
task[AldyToiiu(47116)](function()
	while task[AldyToiiu(46873)](1) do
		local AldyToiC = os.time() - AldyToix;
		local AldyToit = math.floor(AldyToiC / 60);
		local AldyToiD = AldyToiC % 60;
		AldyToiSu = string.format(AldyToiiu(46809), AldyToit, AldyToiD);
	end;
end);
AldyToiDT:Section({ [AldyToiiu(47123)] = "\087\101\098\104\111\111\107 \067\111\110\102\105\103\117\114\097\116\105\111\110" });
local AldyToiUu = AldyToiDT:Toggle({ [AldyToiiu(47123)] = AldyToiiu(46660), Default = true, Callback = function(AldyToiC)
			AldyToieT.enabled = AldyToiC;
			if not AldyToiC then
				if AldyToieT.connection and AldyToieT[AldyToiiu(47105)].Connected then
					AldyToieT[AldyToiiu(47105)]:Disconnect();
					AldyToieT.connection = nil;
				end;
				return;
			end;
			task.spawn(function()
				while AldyToieT.enabled do
					task[AldyToiiu(46873)](1);
					local AldyToiC = AldyToir.PlayerGui:FindFirstChild("\083\109\097\108\108 \078\111\116\105\102\105\099\097\116\105\111\110");
					if not (AldyToiC and AldyToiC[AldyToiiu(46889)]) then
						if AldyToieT.connection and AldyToieT.connection[AldyToiiu(47064)] then
							AldyToieT.connection:Disconnect();
							AldyToieT.connection = nil;
						end;
					end;
					if AldyToieT.connection and AldyToieT.connection.Connected then
 
					end;
					local AldyToit = AldyToiC:FindFirstChild("\068\105\115\112\108\097\121", true) and AldyToiC.Display:FindFirstChild(AldyToiiu(46625), true);
					if AldyToit then
						local AldyToiC = AldyToit:FindFirstChild(AldyToiiu(46830), true);
						local AldyToiD = AldyToit:FindFirstChild(AldyToiiu(46961), true);
						if AldyToiC and AldyToiD then
							AldyToieT.connection = (AldyToiC:GetPropertyChangedSignal(AldyToiiu(46894))):Connect(function()
									local AldyToit = os[AldyToiiu(46617)]();
									local AldyToiP = AldyToiC[AldyToiiu(46894)];
									if AldyToiP == AldyToiiu(46918) or AldyToiP == AldyToieT[AldyToiiu(47079)] then
										return;
									end;
									AldyToieT[AldyToiiu(47079)] = AldyToiP;
									AldyToieT[AldyToiiu(47047)] = AldyToit;
									local AldyToik = AldyToiYu(AldyToiP);
									if not AldyToik then
										return;
									end;
									local AldyToiN, AldyToiJ = pcall(require, AldyToik);
									if not (AldyToiN and (AldyToiJ and AldyToiJ.Data)) then
										return;
									end;
									local AldyToiF = AldyToiJ.Probability[AldyToiiu(46621)];
									local AldyToiz = AldyToiJ[AldyToiiu(47113)].Tier;
									local AldyToip = AldyToiJ[AldyToiiu(46896)];
									local AldyToiW = AldyToio[AldyToiiu(46977)](nil, AldyToiF);
									local AldyToiA = AldyToiW[AldyToiiu(46637)];
									if AldyToiKu(AldyToieT.selectedTiers, AldyToiA) then
										return;
									end;
									local AldyToiX = AldyToiJ.Data[AldyToiiu(46806)] and AldyToiJ[AldyToiiu(47113)].Icon:match(AldyToiiu(47025));
									local AldyToia = AldyToiJ.SellPrice;
									local AldyToiB = AldyToiD[AldyToiiu(46894)];
									local AldyToin = AldyToiP:match("\037\040\040\046\043\041\037\041");
									local AldyToiR = AldyToiP:gsub("\037\115\042\037\098\040\041\037\115\042\036", AldyToiiu(46918));
									local AldyToie, AldyToiw = "\085\110\107\110\111\119\110", "\085\110\107\110\111\119\110";
									local AldyToiy = AldyToir:FindFirstChild("\108\101\097\100\101\114\115\116\097\116\115");
									if AldyToiy and AldyToiy:FindFirstChild("\067\097\117\103\104\116") then
										AldyToie = tostring(AldyToiy.Caught.Value);
									end;
									if AldyToiV then
										local AldyToiC = AldyToiV:FindFirstChild(AldyToiiu(46971));
										local AldyToit = AldyToiC and AldyToiC:FindFirstChild(AldyToiiu(46721));
										local AldyToiD = AldyToit and AldyToit:FindFirstChild("\066\097\103\083\105\122\101");
										if AldyToiD and AldyToiD:IsA("\084\101\120\116\076\097\098\101\108") then
											AldyToiw = AldyToiD.Text;
											local AldyToiC = AldyToiw:match("\094\040\037\100\043\041");
											local AldyToit = tonumber(AldyToiC);
											if AldyToit and AldyToit >= 4990 then
												AldyToiUT();
											end;
										end;
									end;
									local AldyTois = ((((AldyToij:WaitForChild(AldyToiiu(47106))):WaitForChild("\069\118\101\110\116\115")):WaitForChild(AldyToiiu(46946))):WaitForChild("\067\117\114\114\101\110\099\121\067\111\117\110\116\101\114")):WaitForChild("\067\111\117\110\116\101\114");
									local AldyToiI = AldyTois[AldyToiiu(46894)] or "\048";
									AldyToiVT({
										discordId = AldyToieT[AldyToiiu(46825)],
										[AldyToiiu(46777)] = AldyToir[AldyToiiu(46637)],
										[AldyToiiu(46820)] = AldyToiR,
										weight = AldyToin,
										[AldyToiiu(46980)] = AldyToiB,
										[AldyToiiu(46913)] = AldyToiX,
										tierName = AldyToiA,
										[AldyToiiu(46728)] = AldyToia,
										totalCaught = AldyToie,
										[AldyToiiu(46712)] = AldyToiw,
										totalCoin = AldyToiI,
										totalPlay = AldyToiSu,
									});
								end);
						end;
					end;
				end;
			end);
		end });
AldyToiT:Register(AldyToiiu(47067), AldyToiUu);
local AldyToiQu = {
		"\067\111\109\109\111\110",
		"\085\110\099\111\109\109\111\110",
		AldyToiiu(46812),
		AldyToiiu(46935),
		AldyToiiu(46682),
		"\077\121\116\104\105\099",
		AldyToiiu(46784),
	};
(getgenv()).webhookTier = AldyToiDT:Dropdown({
		[AldyToiiu(47123)] = "\083\101\108\101\099\116 \084\105\101\114",
		Values = AldyToiQu,
		[AldyToiiu(46885)] = true,
		[AldyToiiu(46700)] = false,
		[AldyToiiu(46827)] = {},
		Callback = function(AldyToiC)
			for AldyToiC, AldyToit in ipairs(AldyToiC) do
				AldyToieT.selectedTiers[AldyToit] = true;
			end;
		end,
	});
AldyToiT:Register(AldyToiiu(46609), (getgenv())[AldyToiiu(46609)]);
(getgenv())[AldyToiiu(46859)] = AldyToiDT:Input({ Title = "\068\105\115\099\111\114\100 \085\115\101\114 \073\068 \040\079\112\116\105\111\110\097\108\041", Placeholder = AldyToiiu(47118), [AldyToiiu(46641)] = function(AldyToiC)
			AldyToieT[AldyToiiu(46825)] = value:match("\037\100\043") or AldyToiiu(46918);
			AldyToiT:Save();
		end });
AldyToiT:Register(AldyToiiu(46859), (getgenv())[AldyToiiu(46859)]);
(getgenv()).customUrl = AldyToiDT:Input({ [AldyToiiu(47123)] = AldyToiiu(46793), Placeholder = "\069\110\116\101\114 \121\111\117\114 \068\105\115\099\111\114\100 \119\101\098\104\111\111\107 \085\082\076", Callback = function(AldyToiC)
			local AldyToit = AldyToiC:match(AldyToiiu(47045)) or AldyToiiu(46918);
			AldyToieT[AldyToiiu(46731)] = AldyToit;
		end });
AldyToiT:Register("\099\117\115\116\111\109\085\114\108", (getgenv()).customUrl);
do
	local AldyToiC = {
			selectedPlayerName = nil,
			selectedPlayerId = nil,
			[AldyToiiu(46632)] = nil,
			itemQty = 0,
			[AldyToiiu(47021)] = false,
			filterUnfavorited = false,
		};
	AldyToiY:Section({ Title = "\065\117\116\111 \084\114\097\100\101" });
	local AldyToiD, AldyToik, AldyToiN;
	local AldyToiJ = false;
	local function AldyToiz()
		if AldyToiJ then
			return true;
		end;
		local AldyToiC = pcall(function()
				AldyToik = require((AldyToiF:WaitForChild("\080\097\099\107\097\103\101\115")):WaitForChild("\082\101\112\108\105\111\110"));
				AldyToiN = require((AldyToiF:WaitForChild("\083\104\097\114\101\100")):WaitForChild(AldyToiiu(46916)));
				AldyToiD = require((AldyToiF:WaitForChild(AldyToiiu(46928))):WaitForChild(AldyToiiu(46887)));
			end);
		if AldyToiC then
			AldyToiJ = true;
			return true;
		end;
		return false;
	end;
	local AldyToip = {};
	local AldyToiW = {};
	local AldyToiA;
	local function AldyToiX()
		local AldyToiC = {};
		for AldyToit, AldyToiD in ipairs(AldyToit:GetPlayers()) do
			if AldyToiD ~= AldyToir then
				table[AldyToiiu(46681)](AldyToiC, AldyToiD.Name);
			end;
		end;
		table[AldyToiiu(46679)](AldyToiC);
		return AldyToiC;
	end;
	AldyToiA = AldyToiY:Paragraph({ [AldyToiiu(47123)] = "\083\116\097\116\117\115", [AldyToiiu(46824)] = "\087\097\105\116\105\110\103 \116\111 \115\116\097\114\116 \116\114\097\100\101" });
	if not AldyToiz() then
		if AldyToiA then
			AldyToiA:SetDesc(AldyToiiu(46862));
		end;
		return;
	end;
	(getgenv())[AldyToiiu(46955)] = function(AldyToiC)
			if type(AldyToiC) == "\116\097\098\108\101" then
				AldyToiC = AldyToiC[1];
			end;
			if type(AldyToiC) == AldyToiiu(46730) then
				return AldyToiC:match("\094\040\046-\041\037\115\042\037\040\037\100\043\120\037\041\036") or AldyToiC:match(AldyToiiu(47063)) or AldyToiC;
			end;
			return nil;
		end;
	(getgenv())[AldyToiiu(46672)] = (getgenv())[AldyToiiu(46672)] or { [AldyToiiu(47046)] = {}, Legendary = {}, [AldyToiiu(46784)] = {} };
	local AldyToia = {};
	local AldyToiB = {};
	local AldyToin = {};
	local function AldyToiR(AldyToiC)
		local AldyToit = {};
		for AldyToiC, AldyToiD in pairs(AldyToiC) do
			table[AldyToiiu(46681)](AldyToit, AldyToiC);
		end;
		return AldyToit;
	end;
	local AldyToie = {};
	local AldyToiV = {};
	local AldyToiw = {};
	local function AldyToiy(AldyToiD, AldyToik)
		local AldyToiN, AldyToiJ = 0, 0;
		task[AldyToiiu(47116)](function()
			if not AldyToiz() then
				AldyToiA:SetDesc(AldyToiiu(46796));
				return;
			end;
			local AldyToir = AldyToij.Character;
			local AldyToip = AldyToir and AldyToir:FindFirstChild(AldyToiiu(46883));
			local AldyToiW = AldyToiP:FindFirstChild("\067\104\097\114\097\099\116\101\114\115");
			local AldyToiX = AldyToiW:FindFirstChild(AldyToiC.selectedPlayerName);
			if not AldyToiX or not AldyToiC[AldyToiiu(46905)] then
				AldyToiA:SetDesc(AldyToiiu(46737));
				return;
			end;
			local AldyToia = AldyToit:GetPlayerFromCharacter(AldyToiX);
			if not AldyToia then
				AldyToiA:SetDesc(AldyToiiu(46932));
				return;
			end;
			local AldyToiB = AldyToiX:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
			if not AldyToiB then
				AldyToiA:SetDesc(AldyToiiu(46802));
				return;
			end;
			AldyToip.CFrame = AldyToiB.CFrame;
			local AldyToin = ((((AldyToiF:WaitForChild(AldyToiiu(47043))):WaitForChild("\095\073\110\100\101\120")):WaitForChild("\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048")):WaitForChild(AldyToiiu(46715))):WaitForChild(AldyToiiu(47054));
			for AldyToit, AldyToiP in ipairs(AldyToik) do
				local AldyToij = (getgenv())[AldyToiiu(46955)](AldyToiP) or AldyToiP;
				local AldyToik = (getgenv())[AldyToiiu(46672)][AldyToiD] and (getgenv())[AldyToiiu(46672)][AldyToiD][AldyToij];
				if not AldyToik or #AldyToik == 0 then
					AldyToiA:SetDesc(AldyToiiu(46991) .. AldyToiP);
				end;
				for AldyToit, AldyToij in ipairs(AldyToik) do
					if not AldyToiC[AldyToiiu(47094) .. AldyToiD] then
						AldyToiA:SetDesc("\084\114\097\100\101 \115\116\111\112\112\101\100 \102\111\114 " .. AldyToiD);
						return;
					end;
					local AldyToiF, AldyToir = pcall(AldyToin[AldyToiiu(47066)], AldyToin, AldyToiC[AldyToiiu(46905)], AldyToij);
					if AldyToiF and AldyToir then
						AldyToiN = AldyToiN + 1;
					else
						AldyToiJ = AldyToiJ + 1;
					end;
					AldyToiA:SetDesc(string.format("\091\037\115\093 \037\115 \040\037\100\047\037\100\041\n\083\117\099\099\101\115\115\058 \037\100 \124 \070\097\105\108\101\100\058 \037\100", AldyToiD, AldyToiP, AldyToit, #AldyToik, AldyToiN, AldyToiJ));
					task[AldyToiiu(46873)](3);
				end;
			end;
			AldyToiA:SetDesc(string.format(AldyToiiu(46881), AldyToiD, AldyToiN, AldyToiJ));
		end);
	end;
	local AldyToio = {};
	local AldyTois = {};
	local AldyToiI = {};
	local AldyToic = false;
	local AldyToiq = false;
	local AldyToid = false;
	(getgenv())[AldyToiiu(46668)] = hookmetamethod(game, "\095\095\110\097\109\101\099\097\108\108", newcclosure(function(AldyToiC, ...)
			local AldyToit = getnamecallmethod();
			local AldyToiD = { ... };
			if AldyToit == "\070\105\114\101\083\101\114\118\101\114" and tostring(AldyToiC) == "\085\082\069\047\085\112\100\097\116\101\079\120\121\103\101\110" then
				return nil;
			end;
			return (getgenv())[AldyToiiu(46668)](AldyToiC, unpack(AldyToiD));
		end));
	AldyToiY:Section({ [AldyToiiu(47123)] = AldyToiiu(47100) });
	local AldyToix = AldyToiY:Dropdown({
			[AldyToiiu(47123)] = "\083\101\108\101\099\116 \070\105\115\104 \102\114\111\109 \066\097\099\107\112\097\099\107",
			Values = { AldyToiiu(46733) },
			Multi = true,
			AllowNone = true,
			Callback = function(AldyToit)
				AldyToiC[AldyToiiu(46632)] = AldyToit;
			end,
		});
	local AldyToiH = AldyToiY:Dropdown({
			Title = AldyToiiu(46933),
			Values = AldyToiX(),
			AllowNone = true,
			Callback = function(AldyToiD)
				AldyToiC[AldyToiiu(46647)] = AldyToiD;
				if AldyToiD then
					local AldyToiP = AldyToit:FindFirstChild(AldyToiD);
					AldyToiC.selectedPlayerId = AldyToiP and AldyToiP[AldyToiiu(46698)] or nil;
				else
					AldyToiC[AldyToiiu(46905)] = nil;
				end;
			end,
		});
	(getgenv()).DataReplion = AldyToik.Client:WaitReplion(AldyToiiu(47113));
	local AldyToiG = (getgenv())[AldyToiiu(46975)]:Get({ AldyToiiu(46721), "\073\116\101\109\115" });
	(getgenv()).refreshInventory = function()
			local AldyToiC = {};
			AldyToip = {};
			AldyToiW = {};
			if not AldyToiG then
				return;
			end;
			for AldyToit, AldyToiP in ipairs(AldyToiG) do
				local AldyToij = AldyToiN:GetItemData(AldyToiP[AldyToiiu(46851)]);
				if AldyToij and (AldyToij.Data and (AldyToij[AldyToiiu(47113)][AldyToiiu(47018)] == AldyToiiu(46919) or AldyToij[AldyToiiu(47113)][AldyToiiu(47018)] == "\069\110\099\104\097\110\116\083\116\111\110\101\115")) then
					if not AldyToiP[AldyToiiu(47081)] then
						local AldyToit = AldyToiD.GetItemName(AldyToiP, AldyToij);
						if not AldyToiC[AldyToit] then
							AldyToiC[AldyToit] = 0;
							AldyToip[AldyToit] = {};
						end;
						AldyToiC[AldyToit] = AldyToiC[AldyToit] + 1;
						table[AldyToiiu(46681)](AldyToip[AldyToit], AldyToiP[AldyToiiu(46896)]);
					end;
				end;
			end;
			for AldyToiC, AldyToit in pairs(AldyToiC) do
				table.insert(AldyToiW, string[AldyToiiu(47069)](AldyToiiu(47034), AldyToiC, AldyToit));
			end;
			table.sort(AldyToiW);
			AldyToix:Refresh(AldyToiW);
			AldyToiH:Refresh(AldyToiX());
		end;
	(getgenv())[AldyToiiu(46829)]();
	AldyToiY:Button({ [AldyToiiu(47123)] = AldyToiiu(47013), [AldyToiiu(46641)] = function()
			(getgenv())[AldyToiiu(46829)]();
		end });
	AldyToiY:Input({
		[AldyToiiu(47123)] = "\081\117\097\110\116\105\116\121 \116\111 \084\114\097\100\101",
		Placeholder = "\053",
		Type = AldyToiiu(46739),
		Callback = function(AldyToit)
			AldyToiC[AldyToiiu(46828)] = tonumber(AldyToit) or 0;
		end,
	});
	AldyToit.PlayerAdded:Connect(function()
		if AldyToiH and not AldyToiH[AldyToiiu(47119)] then
			AldyToiH:Refresh(AldyToiX());
		end;
	end);
	AldyToit[AldyToiiu(47037)]:Connect(function()
		if AldyToiH and not AldyToiH[AldyToiiu(47119)] then
			AldyToiH:Refresh(AldyToiX());
		end;
	end);
	AldyToiY:Toggle({ [AldyToiiu(47123)] = "\083\116\097\114\116 \084\114\097\100\101\033", [AldyToiiu(46827)] = false, Callback = function(AldyToiD)
			AldyToiC.autoTradeStart = AldyToiD;
			if AldyToiD then
				local AldyToiD, AldyToik = 0, 0;
				task[AldyToiiu(47116)](function()
					if not AldyToiz() then
						AldyToiA:SetDesc("\069\114\114\111\114\058 \099\097\110\'\116 \102\105\110\100 \109\111\100\117\108\101\115\044 \112\108\101\097\115\101 \099\111\110\116\097\099\116 \097\100\109\105\110\046");
						AldyToiC[AldyToiiu(47021)] = false;
						return;
					end;
					local AldyToiN = AldyToij[AldyToiiu(46921)];
					local AldyToiJ = AldyToiN and AldyToiN:FindFirstChild(AldyToiiu(46883));
					local AldyToir = AldyToiP:FindFirstChild(AldyToiiu(46941));
					local AldyToiW = AldyToir:FindFirstChild(AldyToiC.selectedPlayerName);
					if AldyToiC[AldyToiiu(46905)] then
						AldyToiA:SetDesc(AldyToiiu(47115));
						AldyToiC[AldyToiiu(47021)] = false;
						return;
					end;
					local AldyToiX = AldyToiC.selectedItemName;
					local AldyToia = (getgenv()).filterRegex(AldyToiX) or AldyToiX;
					local AldyToiB = AldyToip[AldyToia];
					if not AldyToiB or #AldyToiB == 0 then
						AldyToiA:SetDesc("\078\111 \105\116\101\109\115 \102\111\117\110\100 \102\111\114 " .. AldyToia);
					end;
					if not AldyToiB or #AldyToiB < AldyToiC.itemQty then
						AldyToiA:SetDesc({ [AldyToiiu(47123)] = AldyToiiu(46835), [AldyToiiu(47092)] = "\078\111\116 \101\110\111\117\103\104 \105\116\101\109\115 \102\111\114 " .. AldyToia });
						AldyToiC.autoTradeStart = false;
						return;
					end;
					local AldyToin = AldyToit:GetPlayerFromCharacter(AldyToiW);
					if not AldyToin then
						AldyToiA:SetDesc(AldyToiiu(46846));
						return;
					end;
					local AldyToiR = AldyToiW:FindFirstChild(AldyToiiu(46883));
					if not AldyToiR then
						AldyToiA:SetDesc("\069\114\114\111\114\058 \099\097\110\'\116 \102\105\110\100 \116\097\114\103\101\116 \112\111\115\105\116\105\111\110\046");
						return;
					end;
					AldyToiJ[AldyToiiu(46631)] = AldyToiR.CFrame;
					local AldyToie = ((((AldyToiF:WaitForChild(AldyToiiu(47043))):WaitForChild(AldyToiiu(46908))):WaitForChild(AldyToiiu(46866))):WaitForChild(AldyToiiu(46715))):WaitForChild(AldyToiiu(47054));
					for AldyToit, AldyToiP in ipairs(AldyToiB) do
						if not AldyToiC.autoTradeStart then
							AldyToiA:SetDesc("\084\114\097\100\101 \115\116\111\112\112\101\100\046");
							return;
						end;
						local AldyToij, AldyToiN = pcall(AldyToie.InvokeServer, AldyToie, AldyToiC.selectedPlayerId, AldyToiP);
						if AldyToij and AldyToiN then
							AldyToiD = AldyToiD + 1;
							AldyToiA:SetDesc(string.format(AldyToiiu(46608), AldyToia, AldyToiD, AldyToik));
						else
							AldyToik = AldyToik + 1;
							AldyToiA:SetDesc(string.format("\091\037\115\093 \070\097\105\108\101\100 \116\111 \116\114\097\100\101 \040\037\100\047\037\100\041", AldyToia, AldyToiD, AldyToik));
						end;
						task.wait(3);
					end;
					AldyToiA:SetDesc(string.format("\226\156\133 \065\108\108 \084\114\097\100\101\115 \067\111\109\112\108\101\116\101\046\n\083\117\099\099\101\115\115\058 \037\100 \124 \070\097\105\108\101\100\058 \037\100", AldyToiD, AldyToik));
					AldyToiC[AldyToiiu(47021)] = false;
					(getgenv())[AldyToiiu(46829)]();
				end);
			end;
		end });
end;
do
	local AldyToiC = { [AldyToiiu(47050)] = false, [AldyToiiu(46761)] = {} };
	local AldyToit = {
			{ [AldyToiiu(46637)] = "\087\105\110\100", [AldyToiiu(46931)] = 10000 },
			{ [AldyToiiu(46637)] = AldyToiiu(46939), Price = 15000 },
			{ Name = AldyToiiu(46622), [AldyToiiu(46931)] = 20000 },
			{ Name = "\083\116\111\114\109", Price = 35000 },
			{ [AldyToiiu(46637)] = "\082\097\100\105\097\110\116", Price = 50000 },
			{ Name = AldyToiiu(47029), [AldyToiiu(46931)] = 300000 },
		};
	table.sort(AldyToit, function(AldyToiC, AldyToit)
		return AldyToiC[AldyToiiu(46931)] < AldyToit.Price;
	end);
	local AldyToiD = {};
	for AldyToiC, AldyToit in ipairs(AldyToit) do
		table[AldyToiiu(46681)](AldyToiD, AldyToit.Name);
	end;
	local function AldyToiP()
		if not AldyToiC.enabled or #AldyToiC.selectedWeathers == 0 then
			return;
		end;
		for AldyToiC, AldyToit in ipairs(AldyToiC.selectedWeathers) do
			pcall(function()
				((((((game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101")):WaitForChild(AldyToiiu(47043))):WaitForChild("\095\073\110\100\101\120")):WaitForChild(AldyToiiu(46866))):WaitForChild(AldyToiiu(46715))):WaitForChild("\082\070\047\080\117\114\099\104\097\115\101\087\101\097\116\104\101\114\069\118\101\110\116")):InvokeServer(AldyToit);
			end);
			task[AldyToiiu(46873)](1);
		end;
	end;
	local AldyToij = AldyToiv:Toggle({ Title = "\065\117\116\111 \066\117\121 \087\101\097\116\104\101\114", Value = false, Callback = function(AldyToit)
				AldyToiC.enabled = AldyToit;
				if AldyToit then
					AldyToiP();
					task[AldyToiiu(47116)](function()
						while AldyToiC[AldyToiiu(47050)] do
							task[AldyToiiu(46873)](500);
							if not AldyToiC.enabled then
								break;
							end;
							AldyToiP();
						end;
					end);
				end;
			end });
	AldyToiT:Register("\097\117\116\111\066\117\121\087\101\097\116\104\101\114\084\111\103\103\108\101", AldyToij);
	local AldyToik = AldyToiv:Dropdown({
			Title = AldyToiiu(46927),
			[AldyToiiu(46901)] = AldyToiD,
			[AldyToiiu(46885)] = true,
			AllowNone = true,
			Callback = function(AldyToit)
				AldyToiC[AldyToiiu(46761)] = AldyToit;
			end,
		});
	AldyToiT:Register("\097\117\116\111\066\117\121\087\101\097\116\104\101\114\068\114\111\112\100\111\119\110", AldyToik);
	AldyToiv:Section({ [AldyToiiu(47123)] = AldyToiiu(46639) });
	for AldyToiC, AldyToit in ipairs(AldyToit) do
		local AldyToiD = string.format(AldyToiiu(47033), AldyToit.Name, AldyToit[AldyToiiu(46931)]);
		AldyToiv:Button({ Title = AldyToiD, [AldyToiiu(46641)] = function()
				pcall(function()
					((((((game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101")):WaitForChild(AldyToiiu(47043))):WaitForChild(AldyToiiu(46908))):WaitForChild(AldyToiiu(46866))):WaitForChild(AldyToiiu(46715))):WaitForChild("\082\070\047\080\117\114\099\104\097\115\101\087\101\097\116\104\101\114\069\118\101\110\116")):InvokeServer(AldyToit[AldyToiiu(46637)]);
				end);
			end });
	end;
end;
do
	(getgenv())[AldyToiiu(46657)] = AldyToiQ:Paragraph({ [AldyToiiu(47123)] = AldyToiiu(46678), [AldyToiiu(46824)] = "\087\097\105\116\105\110\103 \116\111 \115\116\097\114\116 \101\110\099\104\097\110\116", Color = "\082\101\100" });
	local AldyToiC = Vector3[AldyToiiu(46604)](3231, -1303, 1402);
	local AldyToit = (AldyToiF:WaitForChild("\067\111\110\116\114\111\108\108\101\114\115")):WaitForChild(AldyToiiu(46736));
	local AldyToiD = AldyToiF:WaitForChild(AldyToiiu(46725));
	local function AldyToik()
		local AldyToiC = {};
		for AldyToit, AldyToiD in ipairs(AldyToiD:GetChildren()) do
			if AldyToiD:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
				local AldyToit = require(AldyToiD);
				if AldyToit and (AldyToit[AldyToiiu(47113)] and AldyToit[AldyToiiu(47113)].Name) then
					table.insert(AldyToiC, AldyToit[AldyToiiu(47113)][AldyToiiu(46637)]);
				end;
			end;
		end;
		table.sort(AldyToiC);
		return AldyToiC;
	end;
	local AldyToiN = {};
	local AldyToiJ = false;
	local function AldyToir()
		local AldyToiC = AldyToiX:Get(AldyToiiu(46721));
		if not AldyToiC or not AldyToiC.Items then
			return nil;
		end;
		for AldyToiC, AldyToit in pairs(AldyToiC[AldyToiiu(46787)]) do
			if type(AldyToit) == AldyToiiu(46627) and AldyToit[AldyToiiu(46851)] == 10 then
				return tostring(AldyToit[AldyToiiu(46896)]);
			end;
		end;
		return nil;
	end;
	AldyToiQ:Dropdown({
		Title = "\083\101\108\101\099\116 \069\110\099\104\097\110\116",
		Values = AldyToik(),
		[AldyToiiu(46885)] = true,
		[AldyToiiu(46700)] = false,
		Value = {},
		Callback = function(AldyToiC)
			AldyToiN = AldyToiC or {};
			if #AldyToiN > 0 then
				(getgenv())[AldyToiiu(46657)]:SetDesc("\226\156\133 \069\110\099\104\097\110\116 \100\105\112\105\108\105\104\058 " .. table.concat(AldyToiN, "\044 "));
			else
				(getgenv())[AldyToiiu(46657)]:SetDesc(AldyToiiu(46614));
			end;
		end,
	});
	local function AldyToiz(AldyToiC, AldyToit)
		for AldyToiC, AldyToiD in ipairs(AldyToiC) do
			if AldyToiD == AldyToit then
				return true;
			end;
		end;
		return false;
	end;
	local function AldyToip(AldyToiC, AldyToit)
		return table[AldyToiiu(46948)](AldyToiC, AldyToit or AldyToiiu(47057));
	end;
	AldyToiQ:Toggle({ Title = AldyToiiu(46790), [AldyToiiu(47042)] = false, Callback = function(AldyToit)
			if AldyToit then
				if #AldyToiN == 0 then
					(getgenv())[AldyToiiu(46657)]:SetDesc("\226\157\140 \069\114\114\111\114\058 \078\111 \069\110\099\104\097\110\116 \115\101\108\101\099\116\101\100\046");
					return;
				end;
				AldyToiJ = true;
				(getgenv()).statusEnchant:SetDesc("\077\117\108\097\105 \112\114\111\115\101\115 \101\110\099\104\097\110\116\046\046\046 \077\101\110\099\097\114\105 " .. AldyToip(AldyToiN));
				local AldyToit = (AldyToiP:WaitForChild("\067\104\097\114\097\099\116\101\114\115")):FindFirstChild(AldyToij[AldyToiiu(46637)]);
				local AldyToiD = AldyToit and AldyToit:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
				if AldyToiD then
					AldyToiD[AldyToiiu(46631)] = CFrame[AldyToiiu(46604)](AldyToiC);
				end;
				task.spawn(function()
					while AldyToiJ do
						local AldyToiC = AldyToir();
						if not AldyToiC then
							(getgenv())[AldyToiiu(46657)]:SetDesc("\226\157\140 \066\097\116\117 \104\097\098\105\115\033 \066\101\114\104\101\110\116\105\046");
							AldyToiJ = false;
							break;
						end;
						local AldyToit = pcall(function()
								AldyToih.RE_EquipItem:FireServer(AldyToiC, "\069\110\099\104\097\110\116\083\116\111\110\101\115");
								task.wait(.2);
								AldyToih[AldyToiiu(47010)]:FireServer(2);
								task[AldyToiiu(46873)](.2);
								AldyToih[AldyToiiu(46769)]:FireServer();
							end);
						if not AldyToit then
							(getgenv())[AldyToiiu(46657)]:SetDesc(AldyToiiu(47011));
							AldyToiJ = false;
							break;
						end;
						task.wait(1);
					end;
				end);
			else
				AldyToiJ = false;
				(getgenv())[AldyToiiu(46657)]:SetDesc("\069\110\099\104\097\110\116\105\110\103 \115\116\111\112\112\101\100\046");
			end;
		end });
	local function AldyToiW(AldyToiC)
		for AldyToit, AldyToiD in ipairs(AldyToiD:GetChildren()) do
			if AldyToiD:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
				local AldyToit = require(AldyToiD);
				if AldyToit and (AldyToit[AldyToiiu(47113)] and AldyToit[AldyToiiu(47113)][AldyToiiu(46851)] == AldyToiC) then
					return AldyToit;
				end;
			end;
		end;
		return nil;
	end;
	AldyToih[AldyToiiu(46752)][AldyToiiu(46848)]:Connect(function(AldyToiC, AldyToit, AldyToiD, AldyToiP)
		if not AldyToiJ then
			return;
		end;
		local AldyToij = AldyToiW(AldyToit);
		if AldyToij then
			local AldyToiC = AldyToij[AldyToiiu(47113)][AldyToiiu(46637)];
			if AldyToiz(AldyToiN, AldyToiC) then
				(getgenv()).statusEnchant:SetDesc("\226\156\133 \069\110\099\104\097\110\116 \070\111\117\110\100\033\058 " .. (AldyToiC .. AldyToiiu(47083)));
				AldyToiJ = false;
			else
				(getgenv()).statusEnchant:SetDesc("\070\111\117\110\100 \058 " .. (AldyToiC .. AldyToiiu(46892)));
			end;
		end;
	end);
end;
do
	local AldyToiD = {
			[AldyToiiu(46695)] = { name = AldyToiiu(46785), position = Vector3.new(1014.896, 20.921, 5071.434) },
			["\048\050"] = { name = AldyToiiu(46766), [AldyToiiu(46942)] = Vector3.new(-3598.539, -279.646, -1634.287) },
			[AldyToiiu(46687)] = { [AldyToiiu(46628)] = "\076\111\115\116 \083\104\111\114\101", position = Vector3[AldyToiiu(46604)](-3677, 107, -912) },
			[AldyToiiu(46642)] = { [AldyToiiu(46628)] = "\070\105\115\104\101\114\109\097\110 \073\115\108\097\110\100", position = Vector3[AldyToiiu(46604)](-2.382, 4.5, 2839.47) },
			[AldyToiiu(46994)] = { name = AldyToiiu(46834), [AldyToiiu(46942)] = Vector3[AldyToiiu(46604)](-2051.413, 6.268, 3662) },
			[AldyToiiu(46959)] = { name = "\069\115\111\116\101\114\105\099 \068\101\112\116\104\115", [AldyToiiu(46942)] = Vector3.new(3209.068, -1302.855, 1411.844) },
			[AldyToiiu(46810)] = { [AldyToiiu(46628)] = AldyToiiu(46910), [AldyToiiu(46942)] = Vector3[AldyToiiu(46604)](2031.415, 27.397, 1394.621) },
			[AldyToiiu(47077)] = { name = AldyToiiu(47086), position = Vector3[AldyToiiu(46604)](-678.811, 4.935, 708.578) },
			["\048\057"] = { [AldyToiiu(46628)] = AldyToiiu(46764), position = Vector3.new(-516.92, 22, 191) },
			[AldyToiiu(46773)] = { name = "\083\105\115\121\112\104\117\115", [AldyToiiu(46942)] = Vector3.new(-3667.556, -135.574, -900.99) },
			["\049\049"] = { name = "\087\101\097\116\104\101\114 \077\097\099\104\105\110\101", position = Vector3.new(-1471, -3, 1929) },
			[AldyToiiu(47049)] = { name = "\087\105\110\116\101\114 \070\101\115\116", [AldyToiiu(46942)] = Vector3.new(1611, 4, 3280) },
			[AldyToiiu(47102)] = { [AldyToiiu(46628)] = "\067\111\114\097\108 \082\101\101\102\115", position = Vector3.new(-2949.694, 63.25, 2248.52) },
		};
	local AldyToik = nil;
	local function AldyToiN()
		local AldyToiC = {};
		for AldyToit, AldyToiD in ipairs(AldyToit:GetPlayers()) do
			if AldyToiD ~= AldyToir then
				table[AldyToiiu(46681)](AldyToiC, AldyToiD.Name);
			end;
		end;
		table.sort(AldyToiC);
		return AldyToiC;
	end;
	local AldyToiJ = AldyToii:Dropdown({
			Title = "\083\101\108\101\099\116 \080\108\097\121\101\114",
			Values = AldyToiN(),
			[AldyToiiu(46885)] = false,
			Callback = function(AldyToiC)
				AldyToik = AldyToiC;
			end,
		});
	local function AldyToiz(AldyToit)
		if not AldyToit or AldyToit == AldyToiiu(46918) then
			AldyToiC:Notify({ Title = "\226\157\140 \069\114\114\111\114", Content = "\078\111 \112\108\097\121\101\114 \115\101\108\101\099\116\101\100\046", Duration = 2 });
			return;
		end;
		local AldyToiD = AldyToij[AldyToiiu(46921)];
		local AldyToik = AldyToiD and AldyToiD:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
		if not AldyToik then
			AldyToiC:Notify({ [AldyToiiu(47123)] = AldyToiiu(46909), Content = "\089\111\117\114 \099\104\097\114\097\099\116\101\114 \110\111\116 \102\111\117\110\100\046", Duration = 2 });
			return;
		end;
		local AldyToiN = AldyToiP:FindFirstChild("\067\104\097\114\097\099\116\101\114\115");
		if not AldyToiN then
			AldyToiC:Notify({ [AldyToiiu(47123)] = "\226\157\140 \069\114\114\111\114", Content = AldyToiiu(46741), [AldyToiiu(46867)] = 2 });
			return;
		end;
		local AldyToiJ = AldyToiN:FindFirstChild(AldyToit);
		if AldyToiJ and AldyToiJ:FindFirstChild(AldyToiiu(46883)) then
			local AldyToiD = AldyToiJ.HumanoidRootPart;
			local AldyToiP = AldyToiD.CFrame[AldyToiiu(46688)] * 5;
			AldyToik.CFrame = AldyToiD[AldyToiiu(46631)] + AldyToiP;
			AldyToiC:Notify({ [AldyToiiu(47123)] = "\226\156\133 \084\101\108\101\112\111\114\116\101\100", [AldyToiiu(47092)] = "\084\101\108\101\112\111\114\116\101\100 \116\111 " .. AldyToit, [AldyToiiu(46867)] = 2 });
		else
			AldyToiC:Notify({ Title = AldyToiiu(46909), Content = AldyToiiu(46847), [AldyToiiu(46867)] = 2 });
		end;
	end;
	AldyToii:Button({ Title = AldyToiiu(46665), Callback = function()
			pcall(function()
				AldyToiz(AldyToik);
			end);
		end });
	for AldyToiC, AldyToit in pairs(AldyToiD) do
		AldyToii:Button({ [AldyToiiu(47123)] = AldyToit.name, [AldyToiiu(46641)] = function()
				local AldyToiC = AldyToiP.Characters:FindFirstChild(AldyToij[AldyToiiu(46637)]);
				local AldyToiD = AldyToiC and AldyToiC:FindFirstChild(AldyToiiu(46883));
				if AldyToiD then
					AldyToiD[AldyToiiu(46631)] = CFrame[AldyToiiu(46604)](AldyToit[AldyToiiu(46942)] + Vector3.new(5, 5, 0));
					AldyToii:Notify({ Title = "\226\156\133 \084\101\108\101\112\111\114\116 \083\117\099\099\101\115\115", Content = AldyToiiu(47040) .. AldyToit[AldyToiiu(46628)], [AldyToiiu(46867)] = 2 });
				else
					AldyToii:Notify({ Title = AldyToiiu(47004), Content = AldyToiiu(46929), Duration = 2 });
				end;
			end });
	end;
	AldyToii:Section({ [AldyToiiu(47123)] = "\084\101\108\101\112\111\114\116 \084\111 \078\080\067" });
	(getgenv())[AldyToiiu(46936)] = (getgenv())[AldyToiiu(46936)] or {};
	local function AldyToip()
		(getgenv()).npcFolder = (getgenv())[AldyToiiu(46951)] or AldyToiF:WaitForChild("\078\080\067");
		for AldyToiC, AldyToit in ipairs((getgenv())[AldyToiiu(46951)]:GetChildren()) do
			table.insert((getgenv())[AldyToiiu(46936)], AldyToit.Name);
		end;
	end;
	local AldyToiW = (getgenv()).npcNames[1] or nil;
	AldyToii:Dropdown({
		Title = AldyToiiu(46973),
		[AldyToiiu(46901)] = (getgenv())[AldyToiiu(46936)],
		Multi = false,
		[AldyToiiu(47042)] = AldyToiW,
		[AldyToiiu(46641)] = function(AldyToiC)
			AldyToiW = AldyToiC;
		end,
	});
	(getgenv())[AldyToiiu(46662)] = function(AldyToiC)
			if not AldyToiC then
				AldyToii:Notify({ [AldyToiiu(47123)] = AldyToiiu(47004), Content = AldyToiiu(46756), Duration = 2 });
				return;
			end;
			local AldyToit = AldyToij.Character;
			local AldyToiD = AldyToit and AldyToit:FindFirstChild(AldyToiiu(46883));
			if not AldyToiD then
				AldyToii:Notify({ [AldyToiiu(47123)] = AldyToiiu(47004), Content = "\067\104\097\114\097\099\116\101\114 \111\114 \072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116 \110\111\116 \102\111\117\110\100\046", Duration = 2 });
				return;
			end;
			local AldyToiP, AldyToik = pcall(function()
					return AldyToiC:GetPivot();
				end);
			if AldyToiP and typeof(AldyToik) == AldyToiiu(46631) then
				local AldyToit = AldyToik.LookVector;
				local AldyToiP = Vector3.new(0, 5, 0) + AldyToit * 5;
				AldyToiD[AldyToiiu(46631)] = AldyToik + AldyToiP;
				AldyToii:Notify({ [AldyToiiu(47123)] = AldyToiiu(47060), [AldyToiiu(47092)] = AldyToiiu(46978) .. AldyToiC.Name, Duration = 2 });
			else
				AldyToii:Notify({ [AldyToiiu(47123)] = "\226\157\140 \084\101\108\101\112\111\114\116 \070\097\105\108\101\100", [AldyToiiu(47092)] = "\087\111\114\108\100\080\105\118\111\116 \110\111\116 \097\118\097\105\108\097\098\108\101 \102\111\114 \078\080\067\058 " .. AldyToiC.Name, [AldyToiiu(46867)] = 2 });
			end;
		end;
	AldyToii:Button({ [AldyToiiu(47123)] = "\084\101\108\101\112\111\114\116", [AldyToiiu(46641)] = function()
			if not AldyToiW then
				AldyToii:Notify({ [AldyToiiu(47123)] = "\226\157\140 \084\101\108\101\112\111\114\116 \070\097\105\108\101\100", Content = "\080\108\101\097\115\101 \115\101\108\101\099\116 \097\110 \078\080\067\046", Duration = 2 });
				return;
			end;
			local AldyToiC = npcFolder:FindFirstChild(AldyToiW);
			(getgenv()).teleportToNPC(AldyToiC);
		end });
end;
do
	(getgenv())[AldyToiiu(47044)] = (getgenv()).savedPos or nil;
	(getgenv())[AldyToiiu(46783)] = (getgenv())[AldyToiiu(46783)] or false;
	(getgenv())[AldyToiiu(46638)] = (getgenv())[AldyToiiu(46638)] or false;
	(getgenv())[AldyToiiu(46861)] = function()
			task[AldyToiiu(47116)](function()
				while task.wait(4) do
					if (getgenv())[AldyToiiu(46783)] then
						local AldyToiC = AldyToiP:FindFirstChild("\033\033\033 \077\069\078\085 \082\073\078\071\083");
						local AldyToit = nil;
						if AldyToiC then
							for AldyToiC, AldyToiD in ipairs(AldyToiC:GetChildren()) do
								if AldyToiD.Name == AldyToiiu(46680) then
									local AldyToiC = AldyToiD:FindFirstChild("\077\101\103\097\108\111\100\111\110 \072\117\110\116");
									if AldyToiC then
										for AldyToiC, AldyToiD in ipairs(AldyToiC:GetChildren()) do
											if AldyToiD:IsA("\066\097\115\101\080\097\114\116") then
												AldyToit = AldyToiD[AldyToiiu(46807)];
												break;
											end;
										end;
									end;
								end;
							end;
						end;
						local AldyToiD = AldyToiP.Characters:FindFirstChild(AldyToij.Name);
						local AldyToik = AldyToiD and AldyToiD:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
						if AldyToit and AldyToik then
							AldyToiKT(true);
							AldyToinu:Set(true);
							(getgenv()).isMega = true;
							local AldyToiC = (AldyToik.Position - AldyToit)[AldyToiiu(46629)];
							if not (getgenv()).savedPos then
								(getgenv()).savedPos = AldyToik[AldyToiiu(46631)];
							end;
							if AldyToik.Anchored then
								AldyToik[AldyToiiu(47016)] = false;
								task[AldyToiiu(46873)](.1);
							end;
							if AldyToiC > 175 then
								AldyToik.CFrame = CFrame[AldyToiiu(46604)](AldyToit + Vector3[AldyToiiu(46604)](20, 30, 0));
								if AldyToigT[AldyToiiu(47050)] then
									AldyToigT.position = AldyToik[AldyToiiu(46631)];
								end;
							end;
							task.wait(1);
							if not AldyToiE[AldyToiiu(46673)] then
								AldyToiE.autoFishing = true;
								AldyToivT:Set(true);
								AldyToiET(true);
							end;
						else
							if (getgenv())[AldyToiiu(47044)] and AldyToik then
								AldyToik[AldyToiiu(46631)] = (getgenv())[AldyToiiu(47044)];
								(getgenv())[AldyToiiu(47044)] = nil;
								(getgenv())[AldyToiiu(46638)] = false;
							end;
						end;
					end;
				end;
			end);
		end;
	(getgenv())[AldyToiiu(46861)]();
	AldyToiK:Toggle({ Title = AldyToiiu(46856), Default = false, [AldyToiiu(46641)] = function(AldyToiC)
			(getgenv()).automega = AldyToiC;
			(getgenv())[AldyToiiu(46861)]();
		end });
	(getgenv())[AldyToiiu(46758)] = (getgenv())[AldyToiiu(46758)] or {
			enabled = false,
			[AldyToiiu(46690)] = nil,
			[AldyToiiu(47082)] = nil,
			platform = nil,
			[AldyToiiu(47080)] = false,
			isAtEvent = false,
		};
	AldyToiK:Section({ [AldyToiiu(47123)] = AldyToiiu(47122) });
	(getgenv())[AldyToiiu(46911)] = {
			"\077\101\103\097\108\111\100\111\110 \072\117\110\116",
			"\065\100\109\105\110 \069\118\101\110\116",
			"\071\104\111\115\116 \087\111\114\109",
			AldyToiiu(47103),
			"\083\104\097\114\107 \072\117\110\116",
			"\071\104\111\115\116 \083\104\097\114\107 \072\117\110\116",
			AldyToiiu(46772),
			"\066\108\097\099\107 \072\111\108\101",
			"\077\101\116\101\111\114 \082\097\105\110",
		};
	AldyToiK:Dropdown({
		Title = AldyToiiu(47101),
		[AldyToiiu(46901)] = (getgenv())[AldyToiiu(46911)],
		AllowNone = true,
		[AldyToiiu(46885)] = true,
		Callback = function(AldyToiC)
			(getgenv())[AldyToiiu(46758)].selectedEvent = AldyToiC;
		end,
	});
	AldyToiK:Toggle({
		Title = "\065\117\116\111 \084\101\108\101\112\111\114\116 \083\112\097\119\110\101\100 \069\118\101\110\116",
		[AldyToiiu(46824)] = AldyToiiu(46822),
		Value = false,
		Callback = function(AldyToiC)
			(getgenv())[AldyToiiu(46758)].enabled = AldyToiC;
			if not AldyToiC and (getgenv()).eventSet.isAtEvent then
				if AldyToir and (AldyToir.Character and (AldyToir.Character[AldyToiiu(46626)] and (getgenv()).eventSet[AldyToiiu(47082)])) then
					local AldyToiC = AldyToir[AldyToiiu(46921)].PrimaryPart;
					if AldyToiC.Anchored then
						AldyToiC[AldyToiiu(47016)] = false;
						task[AldyToiiu(46873)](.1);
					end;
					AldyToiC.CFrame = (getgenv()).eventSet.originalPosition;
					if AldyToigT.enabled then
						AldyToigT[AldyToiiu(46942)] = AldyToiC.CFrame;
					end;
				end;
				(getgenv()).eventSet.isAtEvent = false;
			end;
		end,
	});
	local function AldyToiC(AldyToiC)
		local AldyToit = AldyToiP:FindFirstChild(AldyToiiu(47041));
		if not AldyToit then
			return nil;
		end;
		local AldyToiD = AldyToiC:lower();
		local AldyToij = nil;
		for AldyToiC, AldyToit in ipairs(AldyToit:GetChildren()) do
			if AldyToit[AldyToiiu(46637)] == "\080\114\111\112\115" then
				for AldyToiC, AldyToiP in ipairs(AldyToit:GetChildren()) do
					if AldyToiP[AldyToiiu(46637)]:lower() == AldyToiD then
						if AldyToiP:IsA(AldyToiiu(46964)) then
							local AldyToiC = AldyToiP[AldyToiiu(46626)] or AldyToiP:FindFirstChildWhichIsA(AldyToiiu(46770));
							if AldyToiC then
								return AldyToiC;
							else
 
							end;
						elseif AldyToiP:IsA("\066\097\115\101\080\097\114\116") then
							return AldyToiP;
						end;
					end;
					for AldyToiC, AldyToiP in ipairs(AldyToiP:GetDescendants()) do
						if AldyToiP:IsA("\084\101\120\116\076\097\098\101\108") then
							if AldyToiP[AldyToiiu(46894)]:lower() == AldyToiD then
								local AldyToiC = AldyToiP;
								while AldyToiC and AldyToiC ~= AldyToit do
									if AldyToiC:IsA(AldyToiiu(46770)) then
										return AldyToiC;
									end;
									AldyToiC = AldyToiC.Parent;
								end;
							end;
						end;
					end;
				end;
			end;
		end;
		return nil;
	end;
	task[AldyToiiu(47116)](function()
		while task.wait(5) do
			if not (getgenv())[AldyToiiu(46758)][AldyToiiu(47050)] or not (getgenv())[AldyToiiu(46758)][AldyToiiu(46690)] or not AldyToir.Character or not AldyToir[AldyToiiu(46921)][AldyToiiu(46626)] then
 
			end;
			if (getgenv())[AldyToiiu(46758)][AldyToiiu(47050)] and (getgenv()).eventSet[AldyToiiu(46690)] then
				local AldyToit = AldyToiP[AldyToiiu(46941)]:FindFirstChild(AldyToij[AldyToiiu(46637)]);
				local AldyToiD = AldyToit and AldyToit:FindFirstChild(AldyToiiu(46883));
				local AldyToik = nil;
				for AldyToit, AldyToiD in ipairs((getgenv())[AldyToiiu(46758)][AldyToiiu(46890)]) do
					local AldyToiP = AldyToiC(AldyToiD);
					if AldyToiP then
						AldyToik = AldyToiP;
						break;
					end;
				end;
				if AldyToik and not (getgenv())[AldyToiiu(46758)].isAtEvent then
					(getgenv())[AldyToiiu(46758)].isAtEvent = true;
					(getgenv())[AldyToiiu(46758)].isAutoFishing = AldyToiE.autoFishing;
					(getgenv())[AldyToiiu(46758)].originalPosition = AldyToiD[AldyToiiu(46631)];
					AldyToiKT(true);
					AldyToinu:Set(true);
					AldyToiD[AldyToiiu(46631)] = AldyToik[AldyToiiu(46631)] * CFrame.new(0, 3, 0);
					if AldyToigT.enabled then
						AldyToigT.position = AldyToiD[AldyToiiu(46631)];
					end;
					if (getgenv())[AldyToiiu(46758)].isAutoFishing then
						AldyToivT:Set(true);
					end;
				elseif not AldyToik and (getgenv())[AldyToiiu(46758)][AldyToiiu(47125)] then
					(getgenv()).eventSet.isAutoFishing = AldyToiE.autoFishing;
					if (getgenv())[AldyToiiu(46758)][AldyToiiu(47080)] then
						AldyToivT:Set(false);
					end;
					AldyToiKT(false);
					AldyToinu:Set(false);
					AldyToiD.CFrame = (getgenv())[AldyToiiu(46758)].originalPosition;
					if AldyToigT.enabled then
						AldyToigT.position = AldyToiD.CFrame;
					end;
					if (getgenv()).eventSet.isAutoFishing then
						task[AldyToiiu(46873)](1);
						AldyToivT:Set(true);
					end;
					(getgenv())[AldyToiiu(46758)].isAtEvent = false;
				end;
			end;
		end;
	end);
end;
(getgenv()).ReplicateTextEffect = AldyToiF.Packages._Index[AldyToiiu(46866)][AldyToiiu(46715)][AldyToiiu(46880)];
(getgenv()).ReplicateTextEffect[AldyToiiu(46848)]:Connect(function(AldyToiC)
	if AldyToiC and (AldyToiC.TextData and AldyToiC[AldyToiiu(47003)][AldyToiiu(47038)] == "\069\120\099\108\097\105\109") then
		local AldyToiD = AldyToit.LocalPlayer.Character and AldyToit.LocalPlayer[AldyToiiu(46921)]:FindFirstChild(AldyToiiu(46677));
		if AldyToiD and AldyToiC[AldyToiiu(46625)] == AldyToiD then
			AldyToiq = tick();
		end;
	end;
end);
if AldyToiE.priceValue then
	AldyToiHT();
end;
(getgenv())[AldyToiiu(46997)] = (game:GetService(AldyToiiu(46879))).Packages[AldyToiiu(46908)][AldyToiiu(46866)][AldyToiiu(46715)][AldyToiiu(46983)];
(getgenv()).RemoteFishCaught[AldyToiiu(46848)]:Connect(function(...)
	if not AldyToiE[AldyToiiu(46800)] then
		if AldyToiR == 245 then
			AldyToilT(AldyToiRT, 1);
		end;
	end;
	AldyToijT = false;
	AldyToiq = tick();
	AldyToikT = AldyToikT + 1;
	AldyToiNT = AldyToiNT + 1;
	local AldyToiC = { ... };
	for AldyToiC, AldyToit in ipairs(AldyToiC) do
		if type(AldyToit) == "\116\097\098\108\101" and (AldyToit.InventoryItem and AldyToit.InventoryItem[AldyToiiu(46896)]) then
			local AldyToiC = AldyToit.InventoryItem[AldyToiiu(46896)];
			local AldyToiD = AldyToit.InventoryItem.Id;
			local AldyToiP = AldyToiwT(AldyToiD);
			if AldyToiP and (AldyToiP.Data.Type == "\070\105\115\104\101\115" and AldyToiP.Probability) then
				local AldyToit = AldyToio[AldyToiiu(46977)](nil, AldyToiP.Probability[AldyToiiu(46621)]);
				if AldyToit then
					if AldyToit[AldyToiiu(46637)] == "\076\101\103\101\110\100\097\114\121" and AldyToiu.Legendary then
						AldyToiy:FireServer(AldyToiC);
					elseif AldyToit.Name == AldyToiiu(47046) and AldyToiu[AldyToiiu(46692)] then
						AldyToiy:FireServer(AldyToiC);
					elseif AldyToit.Name == "\083\069\067\082\069\084" and AldyToiu.Secret then
						AldyToiy:FireServer(AldyToiC);
					end;
				end;
			end;
		end;
		if type(AldyToit) == "\116\097\098\108\101" and (AldyToit[AldyToiiu(46988)] and (AldyToit.InventoryItem.Metadata and AldyToit.InventoryItem.Metadata[AldyToiiu(46717)])) then
			local AldyToiC = AldyToit[AldyToiiu(46988)][AldyToiiu(46896)];
			local AldyToiD = AldyToit[AldyToiiu(46988)][AldyToiiu(46878)].VariantId;
			if table[AldyToiiu(46624)](AldyToiau, AldyToiD) then
				AldyToiy:FireServer(AldyToiC);
			end;
		end;
	end;
	if AldyToiE.AutoSell and AldyToikT >= AldyToiPu then
		AldyToikT = 0;
		AldyToiUT();
	end;
	if AldyToiE.autoFarming and AldyToiNT >= AldyToizu then
		AldyToiNT = 0;
		task[AldyToiiu(46873)](.8);
		AldyToiJu();
	end;
	if AldyToiE[AldyToiiu(46694)] then
		AldyToiHT();
	end;
end);
(getgenv())[AldyToiiu(46877)] = hookmetamethod(game, AldyToiiu(46819), newcclosure(function(AldyToiC, ...)
		local AldyToit = getnamecallmethod();
		if AldyToit == "\070\105\114\101\083\101\114\118\101\114" and tostring(AldyToiC) == "\082\101\099\111\110\110\101\099\116\080\108\097\121\101\114" then
			return nil;
		end;
		return (getgenv())[AldyToiiu(46877)](AldyToiC, ...);
	end));
task[AldyToiiu(47116)](function()
	while true do
		task.wait(7);
		AldyToiYT();
		local AldyToiC = tick() - AldyToiq;
		AldyToiMT();
		if AldyToiC > tonumber(AldyToitu) and (AldyToiE.autoFishing and AldyToiE.autoRespawn) then
			AldyToiST();
			AldyToiq = tick();
		end;
	end;
end);
AldyToir[AldyToiiu(46671)]:Connect(function(AldyToiC)
	local AldyToit = AldyToiP.Characters:FindFirstChild(AldyToij[AldyToiiu(46637)]);
	local AldyToiD = game.Players.LocalPlayer.Character:WaitForChild(AldyToiiu(46883));
	for AldyToiC, AldyToit in pairs(AldyToin) do
		if tostring(AldyToit[AldyToiiu(46896)]) == tostring(AldyToia) then
			AldyToiR = AldyToit[AldyToiiu(46851)];
			break;
		end;
	end;
	AldyToiLT();
	local AldyToik = AldyToiE.autoFishing;
	AldyToivT:Set(AldyToik);
	AldyToiET(AldyToik);
end);
AldyToiT:Load();