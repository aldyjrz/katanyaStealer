 
-- Simpan fungsi asli agar bisa dikembalikan
 local Replion, Promise, ItemUtility, ItemStringUtility, PromptController
local modulesLoaded = pcall(function()
    Replion = require(replicatedStorage:WaitForChild("Packages"):WaitForChild("Replion"))
    Promise = require(replicatedStorage:WaitForChild("Packages"):WaitForChild("Promise"))
    ItemUtility = require(replicatedStorage:WaitForChild("Shared"):WaitForChild("ItemUtility"))
    ItemStringUtility = require(replicatedStorage:WaitForChild("Modules"):WaitForChild("ItemStringUtility"))
    PromptController = require(replicatedStorage:WaitForChild("Controllers"):WaitForChild("PromptController"))
end)
local oldFirePrompt
local AutoAcceptTrade
 AutoAcceptTrade  = getgenv().Tabs.PlayerSetTab:CreateToggle({
    Name = "Auto Confirm Trade",
    CurrentValue = false,
    Flag = "AutoConfirmTrade",
    Callback = function(value)
 
        if value then
            -- Aktifkan auto accept (tanpa prompt)
              if modulesLoaded and PromptController and Promise then
                if not oldFirePrompt then
                    oldFirePrompt = hookfunction(PromptController.FirePrompt, function(self, promptText, ...)
                        if type(promptText) == "string" and promptText:find("Accept") and  promptText:find("to give") then
                            return Promise.resolve(true)
                        end
                        return oldFirePrompt(self, promptText, ...)
                    end)
                end
            end

            
        else
            -- Kembalikan fungsi ke normal (dengan prompt)
            if oldFirePrompt then
                hookfunction(PromptController.FirePrompt, oldFirePrompt)
                oldFirePrompt = nil
            end
            
        end
    end
}) 
local autoAcceptPenerima = false
getgenv().Tabs.PlayerSetTab:CreateToggle({
    Name = "Auto Accept Trade",
    CurrentValue = false,
    Flag = "AutoAcceptTrade",
    Callback = function(value)
        autoAcceptPenerima = value
    end
}) 

local net = replicatedStorage:WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_net@0.2.0")
    :WaitForChild("net")local RFAwaitTradeResponse = net["RF/AwaitTradeResponse"] 
RFAwaitTradeResponse.OnClientInvoke = function(fromPlayer, timeNow)
    if autoAcceptPenerima then
        return true
    else
        return nil
    end
end
 

-- Hook metamethod global
getgenv().oldAFKScript = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
    local method = getnamecallmethod()

    if method == "FireServer" and tostring(self) == "ReconnectPlayer" then 
        return nil  
    end

    return getgenv().oldAFKScript(self, ...)
end))