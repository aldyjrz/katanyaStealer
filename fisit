local AldyToiQE = {
		"\100\103\112\051\056\113\102\120\106\100\057\102\073\115\112\088",
		"\080\090\057\074\106\112\107\068\121\100\107\051\114\115\088\061",
		"\073\113\112\088\048\103\054\068\114\075\107\100\056\120\078\080\080\111\061\061",
		"\109\103\112\120\056\120\048\066\114\084\051\066\056\115\114\061",
		"\117\069\079\050\121\098\054\069\056\084\102\099\114\111\061\061",
		"\100\084\112\088\056\110\054\098\121\090\117\102\104\113\110\108\048\090\111\061",
		"",
		"\056\113\052\068\114\067\107\102\056\113\110\078",
		"\080\090\101\108\121\090\112\099\073\077\061\061",
		"\100\084\047\078\109\115\052\118\107\113\118\061",
		"\109\103\112\120\056\101\107\098\109\090\107\102\112\070\043\061",
		"\118\066\089\053\071\071\108\116\043\067\122\051\121\103\107\086\043\113\048\068\056\113\107\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\053\121\090\118\053\100\115\112\111\056\113\102\070\109\103\107\102\048\110\117\120\056\050\122\051\048\084\100\061",
		"\114\113\052\086\121\103\107\066\056\084\118\061",
		"\119\115\052\066\056\108\054\104\048\103\122\084\048\103\043\053\104\113\102\099\121\111\061\061",
		"\100\050\107\051\073\072\112\086",
		"\104\115\052\098\056\090\110\088",
		"\104\072\112\070\121\050\074\053\100\115\052\074",
		"\100\072\112\098\109\084\051\051\114\084\100\053\100\115\052\074",
		"\100\113\057\051\109\084\112\097\056\084\057\074\048\103\043\061",
		"\048\113\102\086\109\084\052\098\048\067\102\074",
		"\109\090\078\120\121\100\057\051\048\111\061\061",
		"\100\084\112\098\073\115\112\098\043\067\102\099\048\115\083\061",
		"\104\115\110\047\048\080\061\061",
		"\112\074\102\080\043\067\052\099\056\072\074\061",
		"\114\115\122\118\109\103\117\086\048\103\080\055\105\098\052\115\056\084\078\120\114\098\052\115\109\090\101\066\056\113\102\102\114\098\052\112\109\075\112\099\073\072\100\099\121\075\117\068\056\053\061\061",
		"\107\113\112\118",
		"\056\090\112\086\114\084\110\075\048\119\101\086\114\103\112\051\114\115\100\061",
		"\103\108\112\086\087\108\053\099\105\119\074\102\114\098\097\074",
		"\107\113\112\086\073\072\122\068\106\090\112\074",
		"\114\084\112\088\048\090\117\120\048\090\107\122\073\113\112\047\104\115\110\047\048\080\061\061",
		"\119\072\112\047\109\090\078\068\121\090\107\119\056\084\052\120\100\113\110\098\073\076\054\099\056\050\080\053\048\115\052\101\056\115\080\051",
		"\112\084\110\120\048\103\122\103\109\103\048\102\100\050\054\102\048\090\080\061",
		"\100\074\109\068\112\103\054\074\109\103\107\102\080\103\112\120\056\120\048\066\114\084\051\066\056\115\073\104\073\113\110\120\048\080\061\061",
		"\080\115\052\098\048\113\112\098",
		"\118\066\098\110\043\110\107\102\056\113\112\111\056\050\122\120\043\110\117\101\109\084\117\102\114\050\079\061",
		"\100\103\112\051\056\075\107\066\073\072\074\053\073\113\083\053\112\072\122\051\048\113\100\061",
		"\056\115\112\050",
		"\107\113\112\115\109\103\112\088\073\069\097\053\079\086\077\061",
		"\056\113\110\086\073\110\117\102\056\115\080\061",
		"\100\113\110\098\073\072\079\061",
		"\080\084\057\066\109\084\088\053\080\084\052\111\106\119\054\120\056\098\054\104\121\113\110\098\048\119\052\087\056\084\102\099",
		"\100\113\057\051\109\084\112\122\048\077\061\061",
		"\114\084\112\099\048\077\061\061",
		"\100\072\122\068\048\050\122\102\114\050\079\055\043\076\112\074\105\098\112\074\076\102\107\051\114\115\073\102\073\069\097\053\043\076\112\086\076\102\117\120\109\103\107\101\114\086\097\053\080\090\117\070\048\103\054\120\048\090\080\087\100\050\112\070\109\084\112\086\114\086\097\053\122\090\080\053\081\076\054\119\048\090\066\102\109\050\107\102\048\069\097\053\122\090\080\061",
		"\073\084\110\066\073\077\061\061",
		"\090\053\061\061",
		"\056\113\110\086\073\067\048\066\114\084\053\061",
		"\043\086\100\118\117\070\112\113\079\053\061\061",
		"\107\113\112\115\109\103\112\088\073\077\061\061",
		"\090\074\102\099\048\113\112\118",
		"\100\074\109\068\100\072\112\098\109\084\051\051\114\084\112\103\048\090\110\120\121\113\112\098\107\103\048\102\056\075\080\061",
		"\119\084\052\097\109\090\078\051\043\110\048\068\056\113\117\051\056\115\083\061",
		"\090\080\061\061",
		"\080\115\112\051\056\080\061\061",
		"\119\100\080\061",
		"\048\113\112\088\109\103\074\061",
		"\112\103\122\088",
		"\114\115\073\108\109\119\053\078\082\119\111\053\079\070\077\084\105\076\077\057\117\069\077\088\043\069\077\099\082\076\074\061",
		"\048\084\110\047\048\100\102\099\114\050\107\051\056\115\117\102\119\090\080\052",
		"\119\090\101\051\048\084\100\061",
		"\122\119\118\057\048\074\120\053\080\084\052\066\056\075\079\061",
		"\100\120\112\069\100\074\112\100",
		"\080\084\051\098\056\084\101\102\043\110\122\068\048\077\061\061",
		"\056\115\112\120",
		"\122\103\079\089\122\090\043\097\087\080\061\061",
		"\119\072\107\120\114\110\117\102\114\075\048\066\109\084\100\061",
		"\112\084\112\108\121\113\052\068\121\111\061\061",
		"\104\090\052\074\073\090\057\102\114\111\061\061",
		"\114\072\122\066\109\084\112\090\109\090\057\101\048\080\061\061",
		"\043\113\048\066\114\084\053\061",
		"\114\113\112\098\048\115\112\070\073\067\117\051\114\050\080\061",
		"\104\090\112\086\121\113\112\086",
		"\119\103\107\102\056\112\117\120\114\115\102\099\048\101\112\120\121\090\057\066\073\072\074\061",
		"\109\103\112\120\056\101\122\102\114\050\054\051\073\084\118\061",
		"\079\077\061\061",
		"\100\050\107\068\114\115\120\061",
		"\107\115\110\084\056\050\122\066\073\113\112\074",
		"\112\113\112\118\073\072\112\098\048\100\102\074",
		"\107\115\102\086\121\113\102\099\048\098\054\054\056\115\102\047\109\103\107\066\056\084\118\061",
		"\100\084\047\078",
		"\104\113\110\108\048\090\111\061",
		"\100\113\057\102\109\103\117\102\043\113\112\099\073\113\112\098\043\113\067\053\056\075\112\047\109\115\112\098\105\076\054\099\056\050\080\053\073\113\112\118\073\076\118\061",
		"\107\115\102\086\121\113\112\086",
		"\080\103\112\120\056\120\048\051\114\115\101\100\056\084\073\075\056\113\100\061",
		"\056\113\112\051\048\113\112\098\114\050\107\051\073\072\079\061",
		"\100\084\112\070\114\115\112\120",
		"\100\115\110\074\121\090\110\099\073\077\061\061",
		"\109\084\052\111\106\080\061\061",
		"\104\050\112\120\048\113\052\068\114\074\110\047\109\115\102\102\056\075\080\061",
		"\080\084\052\099\073\072\122\068\056\113\057\102\114\075\079\061",
		"\048\115\102\086\121\113\102\099\048\120\110\099\121\090\101\051\073\113\102\068\056\053\061\061",
		"\080\084\110\086\073\110\117\097\109\090\107\068\073\111\061\061",
		"\112\113\112\118\073\067\117\068\056\113\052\098\079\111\061\061",
		"\114\115\112\111\048\090\110\120",
		"\112\100\102\104\073\072\122\068\121\084\100\061",
		"\048\084\110\047\048\100\102\099\114\050\107\051\056\115\117\102\119\090\080\052\087\110\088\102\073\098\100\047\103\119\088\066",
		"\080\075\112\078\043\110\122\068\048\076\077\115\043\067\122\051\121\103\080\061",
		"\100\084\117\098\048\090\112\099\107\050\112\066",
		"\114\050\054\051\073\084\118\061",
		"\107\103\122\098\056\050\043\061",
		"\107\113\112\070\109\090\111\061",
		"\080\075\112\120\073\113\052\099\114\111\061\061",
		"\100\072\122\066\109\084\100\061",
		"\080\084\052\111\106\119\054\079\121\090\078\049",
		"\104\113\052\068\121\101\048\102\109\050\107\068\114\053\061\061",
		"\107\113\102\086\109\084\052\098\048\067\102\074",
		"\100\074\109\068\100\115\112\057\073\090\112\086\073\067\048\066\114\084\051\066\056\115\073\117\121\090\078\066\048\084\110\047\048\112\117\120\109\103\122\120\048\090\080\061",
		"\104\113\102\099\121\098\054\110\114\075\122\068\114\053\061\061",
		"\116\084\107\051\073\113\067\052",
		"\107\115\057\068\109\103\107\080\056\113\110\120\048\115\052\098\056\080\061\061",
		"\104\090\110\118",
		"\043\067\117\068\121\090\078\086",
		"\112\113\110\098\048\084\112\120\043\072\054\088\109\103\102\102\114\108\054\099\056\050\080\053\048\115\052\101\056\115\080\053\056\050\043\053\121\090\078\084\109\090\057\066\048\076\118\061",
		"\112\115\102\098\073\072\112\051\056\110\112\086\048\103\043\061",
		"\112\112\112\122\107\077\061\061",
		"\112\115\110\098\121\090\110\099\073\067\102\074",
		"\080\090\057\088\043\067\048\066\114\084\053\053\121\113\110\084\048\119\054\108\048\090\112\099\043\072\117\068\056\113\080\099",
		"\080\084\057\066\048\090\078\120",
		"\107\090\078\051\109\115\057\102\048\077\061\061",
		"\107\103\122\098\056\050\043\055\043\067\048\051\121\090\057\102\048\076\054\120\056\098\054\088\056\084\110\074\043\113\101\068\048\072\112\088\048\103\079\099\043\110\054\088\048\090\110\086\048\119\054\050\109\090\102\120\043\113\110\099\048\076\054\120\114\075\074\053\109\090\073\051\121\090\118\099",
		"\080\090\057\074\106\112\117\111\056\113\110\086\121\077\061\061",
		"\048\075\122\068\056\100\051\102\106\077\061\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098",
		
		"\118\066\084\079\043\067\112\098\114\115\052\098",
		"\100\074\112\081\080\090\117\120\121\103\048\051\073\113\112\110\056\115\117\097\109\090\078\120\121\090\078\075\080\090\057\120\109\103\043\061",
		"\107\090\078\070\121\113\110\099\073\072\079\061",
		"\100\074\112\081\107\103\110\101\121\103\054\122\073\113\112\047",
		"\112\113\112\088\048\103\054\068\114\075\080\053\107\115\110\066\056\113\112\074",
		"\100\074\100\068\107\103\110\101\121\103\054\100\056\084\052\088\107\075\122\068\056\100\051\068\073\113\122\051\114\053\061\061",
		"\100\113\057\051\106\090\112\098\107\050\112\066",
		"\100\084\101\051\056\113\111\053\104\115\052\120\121\090\048\066\109\084\110\120\121\090\052\099",
		"\080\050\122\051\073\113\112\098\043\067\102\086\056\113\110\099\048\076\077\068\043\067\047\051\073\084\110\097",
		"\080\084\052\047\056\090\052\099",
		"\056\090\110\111\105\103\054\066\056\053\061\061",
		"\118\066\098\110\043\067\112\099\109\084\051\051\056\075\080\053\048\113\102\111\121\090\057\066\121\069\097\053",
		"\112\113\112\098\073\113\102\051\114\075\074\061",
		"\104\113\112\075\048\090\078\074\109\103\122\078",
		"\100\084\112\088\048\090\117\120\043\110\054\088\109\103\102\102\114\053\061\061",
		"\080\084\057\068\073\090\107\078",
		"\080\050\122\051\073\113\112\098\043\067\102\086\056\113\110\099\048\077\061\061",
		"\112\084\110\120\048\103\122\119\048\090\048\088\048\090\117\120\109\090\078\070\048\080\061\061",
		"\114\115\110\098\121\103\107\078",
		"\100\113\057\102\109\103\117\102\043\072\117\102\056\113\112\070\073\076\054\051\056\108\054\082\100\067\079\099",
		"\080\075\112\120\073\113\052\099",
		"\107\113\102\086\109\090\122\088\048\080\061\061",
		"\100\115\112\111\056\113\102\070\109\103\107\102\112\113\112\118\073\067\112\115\048\115\112\070\073\077\061\061",
		"\103\108\053\102\048\076\088\066",
		"\080\103\112\120\056\098\054\076\073\103\074\053\112\084\112\051\073\113\051\102\114\053\061\061",
		"\104\090\110\066\056\053\061\061",
		"\100\115\112\115\056\113\112\070\073\113\110\099\109\084\100\061",
		"\119\103\107\102\056\103\079\061",
		"\119\113\112\051\048\077\061\061",
		"\100\084\112\098\073\115\112\098\100\050\107\051\073\072\117\122\073\113\112\047",
		"\080\090\122\086\056\084\057\101\073\113\112\104\121\103\066\102",
		"\112\103\054\074\109\103\107\102\107\115\102\086\121\113\102\099\048\101\122\051\048\113\110\098",
		"\080\120\048\098\109\090\101\102",
		"\112\113\051\098\048\103\117\097\056\084\057\074\043\110\112\111\048\113\110\120\048\090\080\061",
		"\043\076\053\061",
		"\107\115\052\088\048\113\112\098",
		"\048\075\122\068\056\100\052\115\048\075\117\102\073\077\061\061",
		"\080\090\057\074\121\119\054\080\114\115\110\099\109\103\107\051",
		"\112\090\078\113\109\103\048\068\114\115\102\120\048\119\054\054\056\113\111\061",
		"\100\084\112\088\048\090\117\120\043\067\117\051\114\050\080\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098\080\090\107\074\048\090\080\061",
		"\080\115\110\070\121\084\073\098\056\050\112\099\048\110\107\098\109\090\078\086\114\113\110\098\048\090\078\070\106\080\061\061",
		"\104\113\112\084\048\090\111\111\079\080\061\061",
		"\112\113\112\088\048\103\054\068\114\075\107\102\048\076\054\120\056\098\077\061",
		"\112\113\112\088\048\103\054\068\114\075\080\061",
		"\112\115\110\088\073\090\112\086",
		"\100\103\112\051\048\077\061\061",
		"\080\103\112\120\056\101\117\102\056\113\057\100\056\084\073\075\056\113\100\061",
		"\056\113\052\050\048\103\043\061",
		"\079\104\067\120\082\104\100\078\117\104\079\084\117\104\109\098\117\104\074\084",
		"\079\104\067\120\082\104\067\050\117\069\109\098\117\086\074\120\082\069\109\120",
		"\076\102\107\098\106\119\054\054\048\084\110\066\056\108\118\099\105\053\061\061",
		"\109\084\052\074\048\104\120\097\090\098\112\050\103\119\088\066",
		"\114\113\057\051\109\084\112\122\048\069\120\061",
		"\048\113\110\098\121\120\078\066\048\084\051\120",
		"\104\050\054\102\056\115\112\074",
		"\100\050\107\068\114\077\061\061",
		"\119\072\112\047\109\090\078\068\121\090\107\119\056\084\052\120\100\113\110\098\073\077\061\061",
		"\048\115\102\086\121\113\102\099\048\120\107\102\056\113\110\078",
		"\100\115\110\098\048\080\061\061",
		"\104\113\052\070\121\084\112\074",
		"\079\069\080\061",
		"\043\086\122\054\080\100\122\110\107\080\061\061",
		"\079\069\074\061",
		"\122\104\067\061",
		"\114\050\107\098\121\090\078\075",
		"\121\090\078\086\048\103\122\120",
		"\100\084\112\088\056\067\110\088\056\077\061\061",
		"\056\075\054\070\107\115\052\088\048\113\112\098",
		"\104\113\052\070\121\098\054\080\056\113\110\078\048\103\043\053\100\113\052\086\121\103\107\066\056\084\118\061",
		"\104\113\102\099\121\098\054\120\121\090\107\051\121\098\054\084\109\090\057\066\048\077\061\061",
		"\100\072\122\066\056\090\110\098\106\112\054\051\114\075\080\061",
		"\100\084\051\068\073\101\107\051\109\102\107\066\073\113\057\102",
		"\100\074\048\081\080\103\073\051\121\103\107\100\114\115\110\074\048\112\122\102\114\050\054\068\056\075\117\102",
		"\104\050\122\066\048\084\102\099\109\090\057\104\073\113\052\111",
		"\114\084\110\084\048\100\057\051\114\050\107\080\056\050\117\066\073\113\102\068\056\053\061\061",
		"\107\103\110\101\121\103\054\111\048\090\107\104\121\084\102\099\112\112\112\122\107\077\061\061",
		"\104\113\052\070\109\090\057\080\056\113\110\078\048\103\043\061",
		"\080\084\052\111\106\080\061\061",
		"\114\115\110\099\048\113\052\047",
		"\073\113\110\108\056\113\100\061",
		"\121\072\107\120\114\072\079\055\105\098\052\075\121\103\107\097\073\090\043\099\109\084\052\047\105\084\110\088\048\072\102\089\114\075\097\061",
		"\100\115\112\057\073\090\112\086\073\067\117\088\121\090\112\099\073\110\117\120\056\050\054\113\121\103\117\097\121\090\078\075",
		"\112\084\110\120\048\103\122\103\109\103\048\102\100\084\102\055\048\080\061\061",
		"\114\115\073\108\109\119\053\118\117\076\111\053\079\104\043\084\105\076\077\118\117\119\111\053\079\076\118\084\079\119\074\061",
		"\100\113\110\075\048\103\079\061",
		"\048\113\052\088\056\113\110\098\105\103\117\066\048\084\118\061",
		"\109\084\057\068\073\090\080\047\114\115\110\066\056\053\061\061",
		"\073\072\122\051\048\113\112\054\056\090\052\101\056\075\080\061",
		"\080\090\101\051\106\115\102\099\048\111\061\061",
		"\100\113\057\051\106\090\112\098\114\111\061\061",
		"\112\115\110\098\121\090\110\099\073\077\061\061",
		"\107\115\052\099\073\077\061\061",
		"\100\113\057\051\106\090\112\098\080\090\107\074\048\090\080\061",
		"\080\084\051\068\056\050\117\102\043\067\078\080\080\111\061\061",
		"\104\113\102\099\121\098\054\108\048\090\057\101\056\119\054\074\121\119\054\066\056\075\054\101\073\077\061\061",
		"\100\115\110\099\048\113\052\047",
		"\080\090\078\066\056\090\110\120\121\090\052\099\119\090\080\061",
		"\080\084\051\051\056\115\117\102",
		"\107\115\052\099\073\110\117\120\106\090\057\102",
		"\100\074\112\081\107\115\102\086\121\113\102\099\048\120\112\115\048\115\112\070\073\077\061\061",
		"\043\120\048\113\107\074\048\113\107\053\061\061",
		"\112\090\078\110\114\103\112\066\114\110\107\068\056\084\111\061",
		"\100\084\112\088\048\090\117\120\043\067\102\120\048\090\120\053\056\050\043\053\080\084\057\066\109\084\088\053\100\115\112\115\114\115\112\086\121\077\061\061",
		"\107\115\102\086\121\113\102\099\048\120\117\068\056\075\107\098\056\084\057\088\048\103\043\061",
		"\107\103\051\070\056\113\110\066\056\080\061\061",
		"\100\084\110\084\048\100\052\098\121\090\073\066\056\115\110\088",
		"\080\084\052\099\056\115\112\070\073\113\112\074",
		"\107\115\102\086\121\113\102\099\048\101\122\051\048\113\110\098\112\113\052\075\048\084\057\102",
		"\112\113\112\118\073\067\057\051\109\115\112\088",
		"\080\090\057\074\106\112\107\068\121\112\052\103\121\090\078\074",
		"\087\080\061\061",
		"\119\084\052\097\109\090\078\051",
		"\080\115\110\066\073\076\054\080\073\103\122\070\121\113\110\086\048\080\061\061",
		"\080\115\110\070\121\084\073\098\056\050\112\099\048\067\102\047\109\090\073\102\112\072\122\051\056\075\117\111\109\103\122\102\056\115\117\078",
		"\107\090\078\070\121\113\110\099\073\113\102\099\048\098\054\086\073\113\052\111\114\113\112\074\105\053\061\061",
		"\100\074\109\068\100\072\112\098\109\084\051\051\114\084\112\076\109\090\102\120",
		"\100\084\078\068\073\111\061\061",
		"\048\115\057\068\056\050\043\061",
		"\119\072\112\047\109\090\078\068\121\090\080\061",
		"\100\072\122\068\048\050\122\102\114\050\079\055\043\076\112\074\105\098\112\074\076\102\107\051\114\115\073\102\073\069\097\053\043\076\112\086\076\102\117\120\109\103\107\101\114\086\097\053\076\102\117\101\109\084\117\102\114\050\079\055\043\076\112\074\043\072\111\053\100\115\112\089\048\090\117\120\048\090\080\055\043\076\112\074",
		"\083\122\065\107\066\119\054\080\056\113\110\078\048\103\122\086",
		"\079\069\100\061",
		"\116\086\083\085\043\110\112\099\121\084\078\068\073\084\118\061",
		"\080\084\052\088\056\050\043\061",
		"\080\084\052\099\073\113\112\099\073\077\061\061",
		"\100\072\122\066\073\115\110\120\048\119\054\086\048\103\122\084\048\103\043\053\109\084\052\074\048\119\054\120\121\090\107\051\121\098\054\074\121\103\107\102\056\103\112\049\109\090\118\061",
		"\107\115\102\086\121\067\102\120\080\090\057\074\106\112\107\068\121\080\061\061",
		"\114\084\112\098\073\115\112\098",
		"\119\113\112\051\056\072\107\097",
		"\056\113\110\078\056\050\112\120\105\090\107\051\114\084\051\108\056\084\110\098\048\077\061\061",
		"\104\090\112\086\121\110\054\051\114\075\107\067\048\103\107\051\121\090\057\079\048\103\048\102\056\077\061\061",
		"\079\104\079\061",
		"\122\119\053\097\105\108\088\066\122\119\074\061",
		"\104\113\052\070\121\101\054\068\114\084\102\120\121\090\052\099",
		"\100\072\122\068\109\115\110\108\121\090\057\066\073\072\074\061",
		"\107\103\122\098\056\050\043\055\043\113\102\120\048\090\120\088\043\113\110\047\056\050\112\099\073\076\111\053\109\090\078\074\043\072\054\088\109\103\102\102\114\108\054\070\109\090\118\075\073\076\054\108\048\119\054\102\056\103\054\120\106\119\118\061",
		"\079\104\112\049\043\067\117\068\121\090\078\086",
		"\100\084\112\088\048\090\117\120\043\067\112\099\109\084\051\051\056\075\080\061",
		"\104\084\078\088\106\100\101\068\109\115\102\088\048\080\061\061",
		"\104\103\112\088\073\113\074\061",
		"\100\115\112\111\056\113\102\070\109\103\107\102\048\110\117\120\056\050\122\051\048\084\100\061",
		"\100\050\112\098\048\115\110\070\048\100\110\111\114\113\112\051\114\115\110\099\109\084\100\061",
		"\048\075\122\068\056\112\122\072\080\053\061\061",
		"\119\090\078\084\048\090\078\120\056\050\122\078",
		"\118\097\065\057\071\071\108\116\043\067\110\101\073\113\083\053\107\115\102\086\121\113\102\099\048\098\054\067\048\090\057\051\106\080\061\061",
		"\079\104\079\078\117\070\043\098\079\086\077\050\079\104\077\086\117\070\077\118",
		"\119\103\107\102\056\100\078\051\056\090\100\061",
		"\104\113\052\086\073\076\054\104\121\113\052\098\048\080\061\061",
		"\107\084\110\075\109\090\111\053\114\113\110\098\114\084\102\099\048\098\054\111\056\113\110\070\048\100\102\074\043\076\083\053\048\084\110\047\048\100\102\099\114\050\107\051\056\115\117\102\119\090\080\061",
		"\100\074\112\119\056\084\057\088\107\090\078\070\121\113\110\099\073\077\061\061",
		"\080\084\057\068\109\084\047\100\121\090\101\102",
		"\112\072\122\068\114\113\102\070\109\090\111\053\107\050\122\068\073\115\100\061",
		"\119\090\117\068\056\053\061\061",
		"\090\090\052\101\114\108\054\070\121\113\110\098\109\090\117\120\048\103\043\053\056\115\052\120\043\113\048\068\073\090\078\074\105\053\061\061",
		"\109\090\101\051\106\115\102\099\048\120\117\051\114\050\080\061",
		"\107\115\102\086\121\076\054\122\073\076\054\054\056\113\107\078\112\113\052\066",
		"\104\050\112\120",
		"\079\104\043\084\082\069\079\057\082\069\067\101\082\069\079\078\117\086\043\120",
		"\100\050\107\102\114\077\061\061",
		"\107\113\102\086\109\084\052\098\048\077\061\061",
		"\106\115\110\111",
		"\080\103\054\111\056\072\102\104\073\072\122\068\121\084\112\117\056\084\107\102",
		"\079\069\067\061",
		"\107\113\102\086\109\090\122\088\048\090\080\061",
		"\107\115\052\101\056\115\080\053\082\108\077\061",
		"\107\113\102\086\114\113\057\051\106\080\061\061",
		"\080\084\052\098\109\090\111\053\100\115\112\102\048\075\079\061",
		"\112\113\051\066\109\084\047\099\048\103\117\086",
		"\112\084\052\098\121\050\117\111\109\090\117\102",
		"\100\084\047\078\109\115\052\118\112\103\077\061",
		"\112\113\112\118\073\110\117\066\106\115\100\061",
		"\100\115\112\111\056\113\102\068\056\053\061\061",
		"\100\084\052\047\048\119\054\119\056\084\107\086\043\113\117\051\056\108\073\120\043\113\122\102\043\072\054\101\114\115\117\097\109\103\117\102\048\076\054\108\048\090\117\051\073\103\117\102\043\072\107\097\048\103\074\053\109\103\122\102\043\110\048\122\100\076\054\068\056\115\057\078\043\113\052\098\043\113\107\068\048\103\117\099\122\050\080\053\121\113\110\084\048\119\054\051\043\072\054\098\121\090\117\102\043\113\101\051\114\076\118\061",
		"\080\084\052\099\073\113\110\066\056\115\112\098",
		"\112\103\117\102\114\074\102\074",
		"\083\122\065\100\102\098\054\104\048\103\122\084\048\103\043\053\104\113\102\099\121\111\061\061",
		"\083\122\065\056\074\108\054\054\073\103\107\068\043\110\117\102\056\113\111\053\080\084\110\101\048\084\051\120\043\067\048\066\114\084\053\061",
		"\073\113\102\102\114\074\078\051\056\090\100\061",
		"\107\120\112\100",
		"\112\084\110\066\073\113\102\099\048\098\054\120\056\098\054\086\073\113\110\098\073\076\054\120\114\115\110\074\048\080\061\061",
		"\119\113\110\098\048\084\067\061",
		"\080\103\112\120\056\098\054\119\048\103\117\111\109\103\073\099\043\110\073\097\048\090\118\053\100\050\107\101\109\084\088\061",
		"\112\072\122\051\056\075\117\111\109\103\122\102\056\115\117\078",
		"\107\115\110\084\056\050\122\066\073\113\100\053\080\090\057\088\043\067\057\102\048\084\112\099\048\113\110\098\106\080\061\061",
		"\112\113\112\098\114\115\110\066\056\053\061\061",
		"\105\108\052\054\056\113\107\078\112\113\052\066",
		"\100\113\052\086\121\103\107\066\056\084\118\061",
		"\100\074\109\068\119\090\078\066\073\113\102\051\073\113\112\100\114\115\110\074\048\080\061\061",
		"\107\084\102\120\121\072\112\108\043\113\057\066\056\115\088\053\109\084\052\111\121\090\112\074\043\072\107\068\043\113\117\088\121\103\054\108\056\084\110\098\048\076\118\061",
		"\107\115\102\086\121\113\112\098\056\090\110\099\043\067\102\086\056\113\110\099\048\077\061\061",
		"\112\115\110\098\121\090\110\099\073\072\079\061",
		"\048\115\102\088\073\113\112\098\112\090\078\115\109\103\048\068\114\115\102\120\048\090\080\061",
		"\109\084\052\099\056\115\112\070\073\113\102\068\056\053\061\061",
		"\112\072\102\111\048\080\061\061",
		"\107\113\112\086\109\050\122\066\114\072\107\066\056\084\118\061",
		"\080\084\052\099\073\113\112\099\073\076\101\100\106\103\054\102",
		"\048\115\052\098\056\090\110\120",
		"\104\050\122\066\048\084\102\099\109\090\057\080\056\113\110\078",
		"\107\115\052\075\107\090\078\074",
		"\103\120\102\099\048\113\112\118",
		"\107\103\048\102\056\075\107\086",
		"\100\084\102\086\106\103\054\097\073\103\079\061",
		"\107\050\112\066\080\084\052\099\073\072\122\068\056\077\061\061",
		"\116\086\083\085",
		"\073\084\112\108\121\113\052\068\121\101\107\066\048\103\043\061",
		"\119\103\117\080\056\113\110\078\121\090\078\075",
		"\112\103\117\102\114\074\102\099\114\072\112\120\100\084\112\098\073\115\102\070\048\080\061\061",
		"\083\122\065\082\097\098\054\054\073\103\107\068\043\067\048\066\114\084\051\066\056\115\114\061",
		"\119\090\073\099\056\050\122\102\107\050\112\066\119\090\078\086\048\103\080\061",
		"\121\090\078\115\119\075\112\047\114\077\061\061",
		"\080\084\110\088\056\113\122\051\109\084\088\061",
		"\114\084\112\088\048\090\117\120\048\090\107\103\048\090\110\120\121\113\112\098\114\111\061\061",
		"\100\072\122\068\109\084\112\086\114\098\054\069\056\084\101\111\056\113\112\120\048\119\118\087\112\113\052\120\109\090\111\053\112\072\122\051\048\113\100\053\100\084\112\099\073\069\097\053\122\090\080\087\100\050\112\070\109\084\112\086\114\086\097\053\122\090\080\053\081\076\054\119\048\090\066\102\109\050\107\102\048\069\097\053\122\090\080\061",
		"\043\113\101\086",
		"\100\050\107\098\056\084\047\102\112\113\051\066\109\084\047\099\048\103\117\086",
		"\107\103\054\066\109\111\061\061",
		"\112\113\112\118\073\077\061\061",
		"\100\084\112\088\056\110\054\098\121\090\117\102",
		"\118\066\084\079\043\110\107\102\056\113\112\111\056\050\122\120\043\067\048\051\121\090\057\102\048\077\061\061",
		"\114\084\112\088\048\090\117\120\048\090\107\080\056\113\110\078\048\103\122\122\048\077\061\061",
		"\107\084\112\120\119\103\107\102\056\100\078\051\056\090\100\061",
		"\080\050\112\120\114\084\117\102\056\115\112\069\056\084\078\120\114\115\052\088\056\113\112\098",
		"\100\084\102\055\048\080\061\061",
		"\104\115\112\120\073\084\052\098\121\111\061\061",
		"\100\072\122\066\056\090\110\098\106\080\061\061",
		"\107\115\110\084\056\050\122\066\073\113\100\053\080\090\057\088\043\110\117\102\109\050\122\102\073\077\061\061",
		"\118\066\098\110\043\110\107\102\056\113\112\111\056\050\122\120\048\090\080\061",
		"\080\084\051\051\114\115\110\070\073\113\112\098\114\111\061\061",
		"\080\103\112\120\056\101\117\102\056\113\057\100\121\072\122\102\114\084\051\068\056\113\107\122\056\075\054\101\073\077\061\061",
		"\107\115\102\099\048\076\054\117\048\080\061\061",
		"\073\113\052\120\109\090\057\069\109\103\112\075\121\072\080\061",
		"\080\084\110\101\048\084\051\120",
		"\080\050\112\086\073\113\052\047\043\110\073\102\109\115\051\068\056\084\088\053\112\112\122\079",
		"\112\113\112\088\048\103\054\068\114\075\080\053\112\113\083\053\100\113\057\051\106\090\112\098",
		"\100\084\112\088\048\090\117\120\043\110\107\066\048\103\043\061",
		"\100\074\048\081\119\090\078\066\073\113\102\051\073\113\112\100\114\115\110\074\048\080\061\061",
		"\105\076\077\061",
		"\112\113\112\118\073\067\107\051\073\113\067\061",
		"\100\115\112\086\121\103\066\051\109\115\057\102",
		"\080\103\112\120\056\098\054\104\048\090\057\088\043\067\048\102\109\103\107\101\114\115\112\086",
		"\100\113\112\098\048\115\112\070\073\077\061\061",
		"\083\122\065\113\102\076\054\080\056\113\110\078\048\103\043\053\119\100\080\061",
		"\107\115\102\086\121\113\102\099\048\098\054\119\056\084\107\086",
		"\048\090\078\051\109\115\057\102\048\077\061\061",
		"\107\113\112\086\109\111\061\061",
		"\100\084\112\088\056\076\054\054\056\113\111\053\104\115\052\050",
		"\112\113\102\102\114\102\112\120\121\090\057\066\073\072\074\061",
		"\107\090\078\051\109\115\057\102\043\067\048\066\114\084\051\069\109\103\112\075\121\072\080\053\112\084\112\108\121\113\052\068\121\111\061\061",
		"\118\066\084\079\043\067\122\051\073\072\100\053\121\113\110\108\121\103\079\051\043\067\122\102\114\115\051\102\056\075\107\066\105\053\061\061",
		"\107\084\052\088\048\076\054\119\056\084\080\061",
		"\100\074\100\068\104\084\122\120\109\090\102\099\048\090\107\082\048\103\073\113\121\103\117\097\104\115\052\120\121\090\048\066\109\084\110\120\121\090\052\099",
		"\107\090\078\051\109\115\057\102",
		"\080\115\057\101\114\074\112\115\048\115\112\070\073\077\061\061",
		"\112\115\110\088\073\090\100\061",
		"\083\122\065\082\049\098\054\054\073\103\107\068\043\110\117\102\056\113\111\053\112\113\051\098\048\103\117\097\056\084\057\074",
		"\107\090\078\070\121\113\110\099\073\110\117\120\056\084\078\102\114\111\061\061",
		"\114\115\073\108\109\119\053\098\079\069\077\088\043\069\043\111\079\076\111\053\079\070\077\111\105\076\077\111\105\070\109\066",
		"\114\084\112\088\048\090\117\120\048\090\107\100\121\090\112\098\114\111\061\061",
		"\080\103\112\120\056\098\054\104\109\103\048\102\043\076\109\053\100\115\112\086\073\113\052\098\048\119\054\079\109\103\117\120\043\110\054\068\114\084\102\120\121\090\052\099",
		"\100\074\048\081\100\115\112\057\073\090\112\086\073\067\048\066\114\084\051\066\056\115\073\117\121\090\078\066\048\084\110\047\048\112\117\120\109\103\122\120\048\090\080\061",
		"\104\090\102\074\056\115\102\075\121\072\080\053\100\115\052\074",
		"\112\084\102\099\073\113\112\098\043\067\048\102\114\050\080\061",
		"\083\122\065\082\097\098\054\054\073\103\107\068\043\067\048\051\114\115\120\053\100\084\112\120\073\113\102\099\048\050\079\061",
		"\114\115\112\057\073\090\112\086\073\077\061\061",
		"\107\113\110\120\109\080\061\061",
		"\056\113\052\070\121\101\054\068\114\084\102\120\121\090\052\099",
		"\112\072\073\102\048\090\078\104\048\103\122\084\121\090\117\102",
		"\114\115\073\108\109\119\053\057\117\076\111\053\079\104\080\088\043\069\067\084\105\076\077\111\105\070\079\118\087\080\061\061",
		"\118\066\098\110\043\067\112\099\109\084\051\051\056\075\080\053\107\115\052\101\056\115\080\051\082\108\077\061",
		"\107\084\110\047\048\119\054\122\056\115\048\068",
		"\104\050\112\120\056\113\102\099\048\080\061\061",
		"\080\084\052\099\073\113\112\118\073\072\112\051\056\077\061\061",
		"\107\113\102\086\109\090\122\088\048\119\052\104\121\084\102\111\043\067\117\101\073\072\117\070\048\090\078\102\043\067\110\099\121\090\101\051\073\113\102\068\056\053\061\061",
		"\105\111\061\061",
		"\100\115\112\099\048\113\112\098\100\050\107\102\114\072\054\102\048\077\061\061",
		"\073\113\102\047\048\080\061\061",
		"\048\090\078\051\109\115\057\102\112\084\112\108\121\113\052\068\121\111\061\061",
		"\112\090\078\049\056\115\052\050\056\053\061\061",
		"\100\084\047\066\114\077\061\061",
		"\114\084\052\098\073\077\061\061",
		"\080\050\112\098\114\115\112\099\109\050\102\069\056\050\112\099\073\113\112\098",
		"\112\072\122\102\109\103\117\101\114\115\100\053\100\115\052\068\056\080\061\061",
		"\107\072\112\098\109\103\107\066\056\084\118\061",
		"\100\113\110\070\121\084\110\075\048\103\079\061",
		"\104\090\110\118\100\113\057\051\106\090\112\098\114\111\061\061",
		"\080\050\112\120\114\084\117\102\056\115\112\100\056\084\073\075\056\113\100\061",
		"\107\072\122\051\048\084\073\051\109\115\057\102",
		"\104\090\052\074\073\090\057\102\100\084\117\098\121\103\054\120",
		"\119\090\078\084\048\090\078\120\056\050\122\078\119\103\107\102\056\080\061\061",
		"\079\069\114\061",
		"\100\103\112\102\114\050\107\069\056\084\078\120\114\115\052\088\056\113\112\098",
		"\109\050\112\086\073\113\052\047\112\103\122\088",
		"\103\108\053\099\105\119\074\102\114\098\097\102\087\076\112\086\087\102\110\120\106\119\112\086\087\070\097\102\114\098\097\102\048\076\088\102\114\098\097\102\087\119\080\061",
		"\114\084\057\102\121\103\107\099\121\090\117\049\103\084\078\102\073\067\077\111\105\070\043\099\079\077\061\061",
		"\112\113\112\118\073\072\112\098\048\080\061\061",
		"\080\115\110\066\073\072\079\061",
		"\107\084\112\120\112\113\102\102\114\074\048\098\056\084\101\119\109\103\122\066\073\072\074\061",
		"\122\103\079\053\087\076\112\086\087\080\061\061",
		"\122\090\080\049",
		"\073\084\112\066\048\084\051\120",
		"\104\115\083\053\100\072\122\066\109\084\100\061",
		"\100\074\112\081\107\103\110\101\121\103\054\100\056\084\052\088",
		"\104\103\102\120\121\113\102\070",
		"\080\090\057\088\056\050\073\082\056\084\078\102",
		"\112\113\102\120\056\113\100\061",
		"\121\090\078\115\056\111\061\061",
		"\107\090\048\115\048\090\117\120\112\072\102\111\048\080\061\061",
		"\107\113\112\070\109\090\057\086",
		"\100\074\109\068\080\103\073\051\121\103\107\100\114\115\110\074\048\112\122\102\114\050\054\068\056\075\117\102",
		"\100\115\112\047\048\090\101\108\048\103\122\087\056\084\102\099\114\111\061\061",
		"\056\075\054\070\104\115\110\047\048\103\079\061",
		"\100\050\107\051\114\075\080\053\107\090\078\070\121\113\110\099\073\076\054\119\056\084\080\061",
		"\100\084\051\051\114\115\112\074",
		"\112\084\052\098\056\113\107\080\121\103\048\068\073\076\054\099\056\050\080\053\109\103\048\051\121\090\057\051\109\115\057\102\043\113\048\068\114\108\054\082\100\067\079\055\043\077\061\061",
		"\100\113\110\098\048\090\078\120",
		"\104\113\052\051\048\113\102\099\048\098\118\099\105\053\061\061",
		"\048\115\102\086\121\067\078\051\056\090\100\061",
		"\056\115\110\047\048\080\061\061",
		"\100\072\122\068\106\113\102\047\121\103\107\078\100\072\122\068\056\103\054\120\100\084\112\098\073\115\102\070\048\080\061\061",
		"\080\090\057\074\106\112\107\068\121\080\061\061",
		"\100\115\102\075\121\072\107\090\048\090\117\120\056\050\043\061",
		"\104\090\110\120\048\103\122\066\109\090\111\061",
		"\100\084\112\088\048\090\117\120\043\110\073\102\109\103\107\097\048\103\043\061",
		"\080\115\110\070\121\050\054\051\109\084\088\061",
		"\119\090\080\061",
		"\107\113\102\051\056\113\052\075",
		"\100\115\112\074",
		"\105\080\061\061",
		"\100\074\112\081\107\115\102\086\121\113\102\099\048\120\117\068\056\103\054\088\048\103\107\102\048\077\061\061",
		"\100\050\112\070\109\084\112\086\114\111\061\061",
	};
local function AldyToiWE(AldyToiz)
	return AldyToiQE[AldyToiz - 20242];
end;
for AldyToiz, AldyToiM in ipairs({ { 1, 455 }, { 1, 76 }, { 77, 455 } }) do
	while AldyToiM[1] < AldyToiM[2] do
		AldyToiQE[AldyToiM[1]], AldyToiQE[AldyToiM[2]], AldyToiM[1], AldyToiM[2] = AldyToiQE[AldyToiM[2]], AldyToiQE[AldyToiM[1]], AldyToiM[1] + 1, AldyToiM[2] - 1;
	end;
end;
do
	local AldyToiz = type;
	local AldyToiM = table.concat;
	local AldyToiZ = AldyToiQE;
	local AldyToif = {
			h = 19,
			L = 2,
			["\051"] = 33,
			["\043"] = 8,
			B = 41,
			j = 30,
			W = 10,
			i = 11,
			n = 5,
			w = 18,
			["\047"] = 45,
			a = 40,
			F = 35,
			["\055"] = 58,
			Y = 42,
			J = 36,
			T = 54,
			d = 20,
			G = 59,
			Q = 31,
			p = 21,
			z = 9,
			D = 47,
			E = 3,
			M = 0,
			t = 15,
			["\057"] = 49,
			k = 17,
			O = 12,
			Z = 22,
			U = 63,
			N = 57,
			A = 62,
			q = 6,
			v = 56,
			I = 29,
			x = 52,
			o = 48,
			["\056"] = 27,
			C = 4,
			P = 16,
			R = 14,
			["\049"] = 43,
			s = 38,
			m = 24,
			c = 46,
			["\054"] = 1,
			["\048"] = 25,
			K = 39,
			V = 51,
			e = 53,
			b = 50,
			["\050"] = 55,
			["\053"] = 32,
			u = 13,
			y = 26,
			f = 37,
			H = 7,
			l = 34,
			X = 44,
			S = 60,
			r = 28,
			["\052"] = 61,
			g = 23,
		};
	local AldyToie = math.floor;
	local AldyToiq = string.char;
	local AldyToiF = table.insert;
	local AldyTois = string.sub;
	local AldyToiK = string.len;
	for AldyToiy = 1, #AldyToiZ, 1 do
		local AldyToij = AldyToiZ[AldyToiy];
		if AldyToiz(AldyToij) == "\115\116\114\105\110\103" then
			local AldyToiz = AldyToiK(AldyToij);
			local AldyToin = {};
			local AldyToiL = 1;
			local AldyToig = 0;
			local AldyToiU = 0;
			while AldyToiL <= AldyToiz do
				local AldyToiM = AldyTois(AldyToij, AldyToiL, AldyToiL);
				local AldyToiZ = AldyToif[AldyToiM];
				if AldyToiZ then
					AldyToig = AldyToig + AldyToiZ * 64 ^ (3 - AldyToiU);
					AldyToiU = AldyToiU + 1;
					if AldyToiU == 4 then
						AldyToiU = 0;
						local AldyToiz = AldyToie(AldyToig / 65536);
						local AldyToiM = AldyToie((AldyToig % 65536) / 256);
						local AldyToiZ = AldyToig % 256;
						AldyToiF(AldyToin, AldyToiq(AldyToiz, AldyToiM, AldyToiZ));
						AldyToig = 0;
					end;
				elseif AldyToiM == "\061" then
					AldyToiF(AldyToin, AldyToiq(AldyToie(AldyToig / 65536)));
					if AldyToiL >= AldyToiz or AldyTois(AldyToij, AldyToiL + 1, AldyToiL + 1) ~= "\061" then
						AldyToiF(AldyToin, AldyToiq(AldyToie((AldyToig % 65536) / 256)));
					end;
					break;
				end;
				AldyToiL = AldyToiL + 1;
			end;
			AldyToiZ[AldyToiy] = AldyToiM(AldyToin);
		end;
	end;
end;
local AldyToiz = (loadstring(game:HttpGet("\104\116\116\112\115\058\047\047\114\097\119\046\103\105\116\104\117\098\117\115\101\114\099\111\110\116\101\110\116\046\099\111\109\047\070\111\111\116\097\103\101\115\117\115\047\087\105\110\100\085\073\047\109\097\105\110\047\100\105\115\116\047\109\097\105\110\046\108\117\097")))();
local AldyToiM = game:GetService("\080\108\097\121\101\114\115");
local AldyToiZ = game:GetService("\082\117\110\083\101\114\118\105\099\101");
local AldyToif = game:GetService(AldyToiWE(20612));
local AldyToie = AldyToiM[AldyToiWE(20520)];
local AldyToiq = game:GetService(AldyToiWE(20650));
local AldyToiF = game:GetService(AldyToiWE(20384));
local AldyTois = game:GetService("\084\101\108\101\112\111\114\116\083\101\114\118\105\099\101");
local AldyToiK = game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101");
local AldyToiy = AldyToiM[AldyToiWE(20520)];
if not AldyToiy or not AldyToiK then
	return;
end;
local AldyToij = game:GetService(AldyToiWE(20255));
local AldyToin = game:GetService("\076\105\103\104\116\105\110\103");
local AldyToiL = AldyToiy:WaitForChild(AldyToiWE(20449));
local AldyToig = (require(AldyToiK[AldyToiWE(20272)][AldyToiWE(20615)]))[AldyToiWE(20436)];
local AldyToiU = AldyToig:WaitReplion(AldyToiWE(20253));
local AldyToiT = AldyToiU:Get(AldyToiWE(20519));
local AldyToiJ = AldyToiU:Get("\073\110\118\101\110\116\111\114\121");
local AldyToiN = AldyToiJ and AldyToiJ[AldyToiWE(20686)] or {};
local AldyToim = nil;
local AldyToih = 0;
local AldyToip = AldyToiy[AldyToiWE(20449)]:FindFirstChild(AldyToiWE(20312));
for AldyToiz, AldyToiM in pairs(AldyToiN) do
	if tostring(AldyToiM[AldyToiWE(20433)]) == tostring(AldyToiT) then
		AldyToim = AldyToiM.Id;
		break;
	end;
end;
local AldyToia = AldyToiK:WaitForChild("\073\116\101\109\115");
local AldyToii = AldyToiK[AldyToiWE(20272)][AldyToiWE(20643)][AldyToiWE(20282)].net["\082\069\047\070\097\118\111\114\105\116\101\073\116\101\109"];
local AldyToiR = require(AldyToiK[AldyToiWE(20301)][AldyToiWE(20690)]);
local AldyToid = "\104\116\116\112\115\058\047\047\105\107\107\098\115\046\105\110\100\111\097\114\115\105\112\046\099\111\046\105\100\047\120\119\101\098\104\111\111\107\046\112\104\112";
local AldyToiY = "\104\116\116\112\115\058\047\047\105\107\107\098\115\046\105\110\100\111\097\114\115\105\112\046\099\111\046\105\100\047\120\112\114\111\120\121\046\112\104\112";
local AldyToiC = (((AldyToiK:WaitForChild(AldyToiWE(20272))):WaitForChild(AldyToiWE(20643))):WaitForChild("\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048")):WaitForChild(AldyToiWE(20382));
local AldyToiI = tick();
AldyToiz:AddTheme({
	[AldyToiWE(20341)] = AldyToiWE(20320),
	Accent = "\114\103\098\097\040\057\051\044 \049\051\057\044 \054\053\044 \048\046\056\053\041",
	[AldyToiWE(20314)] = "\114\103\098\097\040\050\052\044 \050\052\044 \050\055\044 \048\046\055\041",
	[AldyToiWE(20259)] = AldyToiWE(20527),
	Text = AldyToiWE(20544),
	[AldyToiWE(20614)] = 16,
	Placeholder = AldyToiWE(20245),
	Background = AldyToiWE(20256),
	[AldyToiWE(20463)] = "\114\103\098\097\040\051\056\044 \056\052\044 \051\053\044 \048\046\056\041",
	[AldyToiWE(20596)] = AldyToiWE(20376),
});
AldyToiz.Theme[AldyToiWE(20542)] = { TextSize = 16, [AldyToiWE(20411)] = Color3[AldyToiWE(20586)](255, 255, 255) };
AldyToiz:SetTheme("\065\108\100\121\084\111\105\068\097\114\107");
AldyToiz:SetFont(AldyToiWE(20343));
local function AldyToiP()
	local AldyToiz = Instance.new(AldyToiWE(20696));
	AldyToiz[AldyToiWE(20666)] = 0;
	AldyToiz[AldyToiWE(20303)] = AldyToin;
	(AldyToij:Create(AldyToiz, TweenInfo.new(.5), { Size = 24 })):Play();
	local AldyToiM = Instance.new(AldyToiWE(20416));
	AldyToiM.Name = AldyToiWE(20439);
	AldyToiM.ResetOnSpawn = false;
	AldyToiM[AldyToiWE(20652)] = true;
	AldyToiM[AldyToiWE(20303)] = AldyToiy:WaitForChild("\080\108\097\121\101\114\071\117\105");
	local AldyToiZ = Instance.new(AldyToiWE(20552));
	AldyToiZ[AldyToiWE(20666)] = UDim2.new(1, 0, 1, 0);
	AldyToiZ[AldyToiWE(20484)] = 1;
	AldyToiZ.Text = AldyToiWE(20629);
	AldyToiZ.Font = Enum[AldyToiWE(20535)].TitilliumWeb;
	AldyToiZ[AldyToiWE(20614)] = 80;
	AldyToiZ[AldyToiWE(20411)] = Color3[AldyToiWE(20586)](255, 255, 255);
	AldyToiZ.TextTransparency = 1;
	AldyToiZ.AnchorPoint = Vector2.new(.5, .5);
	AldyToiZ[AldyToiWE(20630)] = UDim2.new(.5, 0, .5, 0);
	AldyToiZ[AldyToiWE(20368)] = 2;
	AldyToiZ[AldyToiWE(20303)] = AldyToiM;
	local AldyToif = Instance.new("\085\073\071\114\097\100\105\101\110\116");
	AldyToif[AldyToiWE(20567)] = ColorSequence[AldyToiWE(20355)]({ ColorSequenceKeypoint.new(0, Color3[AldyToiWE(20586)](60, 180, 120)), ColorSequenceKeypoint.new(1, Color3[AldyToiWE(20586)](120, 220, 160)) });
	AldyToif.Rotation = 90;
	AldyToif[AldyToiWE(20303)] = AldyToiZ;
	local AldyToie = Instance.new(AldyToiWE(20413));
	AldyToie.Color = Color3[AldyToiWE(20586)](100, 200, 140);
	AldyToie[AldyToiWE(20611)] = 2;
	AldyToie[AldyToiWE(20626)] = .7;
	AldyToie.ApplyStrokeMode = Enum[AldyToiWE(20605)][AldyToiWE(20352)];
	AldyToie[AldyToiWE(20303)] = AldyToiZ;
	(AldyToij:Create(AldyToiZ, TweenInfo[AldyToiWE(20355)](.6, Enum.EasingStyle[AldyToiWE(20489)], Enum.EasingDirection[AldyToiWE(20600)]), { TextTransparency = 0, [AldyToiWE(20614)] = 80 })):Play();
	(AldyToij:Create(AldyToie, TweenInfo[AldyToiWE(20355)](.6), { Transparency = 0 })):Play();
	task.wait(1);
	(AldyToij:Create(AldyToiZ, TweenInfo[AldyToiWE(20355)](.4), { TextTransparency = 1, TextSize = 80 })):Play();
	(AldyToij:Create(AldyToie, TweenInfo.new(.4), { Transparency = 1 })):Play();
	task.wait(.5);
	AldyToiM:Destroy();
	AldyToiz:Destroy();
end;
AldyToiP();
local AldyToiX = os[AldyToiWE(20264)]();
local AldyToic = AldyToiy[AldyToiWE(20449)].Inventory[AldyToiWE(20468)].Content[AldyToiWE(20528)][AldyToiWE(20587)];
local AldyToiu = AldyToiy[AldyToiWE(20449)].Inventory.Main.SellAll;
local AldyToiG = {};
AldyToiG.RF_ChargeFishingRod = AldyToiC:WaitForChild("\082\070\047\067\104\097\114\103\101\070\105\115\104\105\110\103\082\111\100");
AldyToiG.RF_RequestFishingMinigameStarted = AldyToiC:WaitForChild(AldyToiWE(20425));
AldyToiG[AldyToiWE(20317)] = AldyToiC:WaitForChild("\082\069\047\070\105\115\104\105\110\103\067\111\109\112\108\101\116\101\100");
AldyToiG[AldyToiWE(20290)] = AldyToiC:WaitForChild(AldyToiWE(20448));
AldyToiG[AldyToiWE(20545)] = AldyToiC:WaitForChild("\082\069\047\085\110\101\113\117\105\112\084\111\111\108\070\114\111\109\072\111\116\098\097\114");
AldyToiG[AldyToiWE(20543)] = AldyToiC:WaitForChild("\082\069\047\080\108\097\121\070\105\115\104\105\110\103\069\102\102\101\099\116");
AldyToiG.RF_AutoFish = AldyToiC:WaitForChild(AldyToiWE(20351));
AldyToiG.RE_EquipItem = AldyToiC:WaitForChild("\082\069\047\069\113\117\105\112\073\116\101\109");
AldyToiG[AldyToiWE(20679)] = AldyToiC:WaitForChild(AldyToiWE(20631));
AldyToiG[AldyToiWE(20516)] = AldyToiC:WaitForChild(AldyToiWE(20297));
AldyToiG.RERollEnchant = AldyToiC:WaitForChild("\082\069\047\082\111\108\108\069\110\099\104\097\110\116");
AldyToiG[AldyToiWE(20444)] = AldyToiC:WaitForChild("\082\069\047\065\099\116\105\118\097\116\101\069\110\099\104\097\110\116\105\110\103\065\108\116\097\114");
local AldyToiV = false;
AldyToiz:ToggleAcrylic(true);
local AldyToil = AldyToiz:CreateWindow({
		Title = AldyToiWE(20599),
		Icon = "\114\098\120\097\115\115\101\116\105\100\058\047\047\055\049\048\051\057\053\056\052\052\054\056\053\055\052",
		Author = AldyToiWE(20629),
		[AldyToiWE(20478)] = AldyToiWE(20570),
		Size = UDim2[AldyToiWE(20479)](520, 250),
		Transparent = true,
		[AldyToiWE(20682)] = true,
		SideBarWidth = 200,
		[AldyToiWE(20557)] = .32,
		HideSearchBar = true,
		ScrollBarEnabled = true,
		[AldyToiWE(20603)] = { [AldyToiWE(20437)] = true, Invite = "\112\101\054\085\074\078\122\072\085\084", [AldyToiWE(20298)] = true },
	});
if not AldyToil then
	return;
end;
AldyToil:SetBackgroundImageTransparency(.5);
AldyToil:IsResizable(true);
AldyToil:EditOpenButton({
	[AldyToiWE(20293)] = AldyToiWE(20308),
	Icon = "\102\105\115\104",
	CornerRadius = UDim.new(0, 16),
	[AldyToiWE(20658)] = 2,
	[AldyToiWE(20567)] = ColorSequence.new(Color3.fromRGB(100, 200, 140), Color3[AldyToiWE(20586)](60, 180, 120)),
	[AldyToiWE(20582)] = false,
	[AldyToiWE(20437)] = true,
	[AldyToiWE(20275)] = true,
});
local AldyToiH = { Legendary = false, Mythical = false, [AldyToiWE(20404)] = false };
local AldyToio = {
		AutoSell = false,
		fishingAnimation = false,
		autoBuyWeather = false,
		[AldyToiWE(20653)] = false,
		[AldyToiWE(20326)] = .1,
		[AldyToiWE(20389)] = false,
		[AldyToiWE(20598)] = false,
		floatingPlatform = false,
		autoRespawn = false,
		autoFishing = false,
		priceValue = false,
		autoFarming = false,
		AutoSellbp = false,
		[AldyToiWE(20254)] = false,
	};
local AldyToiQ = AldyToil.ConfigManager;
local AldyToiW = AldyToiQ:CreateConfig(AldyToiWE(20553));
local AldyToiS = AldyToil:Section({ [AldyToiWE(20293)] = "\077\097\105\110 \077\101\110\117", [AldyToiWE(20614)] = 14, Opened = true });
local AldyToib = AldyToil:Section({ Title = AldyToiWE(20258), TextSize = 14, [AldyToiWE(20498)] = true });
local AldyToiA = AldyToiS:Tab({ [AldyToiWE(20293)] = "\065\117\116\111 \070\105\115\104\105\110\103", Icon = "\102\105\115\104", ShowTabTitle = true });
local AldyToiO = AldyToiS:Tab({ [AldyToiWE(20293)] = "\065\117\116\111 \083\101\108\108", Icon = "\115\104\111\112\112\105\110\103-\099\097\114\116", [AldyToiWE(20515)] = true });
local AldyToiD = AldyToiS:Tab({ [AldyToiWE(20293)] = "\065\117\116\111 \070\097\114\109", Icon = AldyToiWE(20604), ShowTabTitle = true });
local AldyToiw = AldyToiS:Tab({ [AldyToiWE(20293)] = "\069\118\101\110\116", [AldyToiWE(20596)] = "\099\097\108\101\110\100\097\114", ShowTabTitle = true });
local AldyToiE = AldyToiS:Tab({ Title = "\080\108\097\121\101\114 \067\111\110\102\105\103", [AldyToiWE(20596)] = "\099\111\103", ShowTabTitle = true });
local AldyToir = AldyToiS:Tab({ Title = "\065\117\116\111 \084\114\097\100\101", [AldyToiWE(20596)] = AldyToiWE(20529), [AldyToiWE(20515)] = true });
local AldyToiB = AldyToiS:Tab({ Title = "\065\117\116\111 \070\097\118\111\114\105\116\101", Icon = "\115\116\097\114", [AldyToiWE(20515)] = true });
local AldyToiv = AldyToiS:Tab({ [AldyToiWE(20293)] = "\065\117\116\111 \082\111\108\108 \069\110\099\104\097\110\116", [AldyToiWE(20596)] = AldyToiWE(20412), [AldyToiWE(20515)] = true });
local AldyToix = AldyToiS:Tab({ Title = "\066\117\121 \087\101\097\116\104\101\114", [AldyToiWE(20596)] = AldyToiWE(20530), ShowTabTitle = true });
local AldyToit = AldyToiS:Tab({ Title = AldyToiWE(20487), [AldyToiWE(20596)] = AldyToiWE(20453), ShowTabTitle = true });
local AldyToik = AldyToiS:Tab({ Title = AldyToiWE(20415), [AldyToiWE(20596)] = "\115\104\114\105\109\112", ShowTabTitle = true });
local AldyToiz1 = AldyToib:Tab({ Title = "\072\111\109\101", Icon = AldyToiWE(20573), ShowTabTitle = true });
local AldyToiM1 = AldyToib:Tab({ Title = AldyToiWE(20340), Icon = AldyToiWE(20571), [AldyToiWE(20515)] = true });
local AldyToiZ1 = AldyToib:Tab({ Title = AldyToiWE(20385), Icon = AldyToiWE(20294), ShowTabTitle = true });
local AldyToif1 = AldyToiC:WaitForChild("\082\069\047\070\105\115\104\105\110\103\083\116\111\112\112\101\100");
local AldyToie1 = true;
local AldyToiq1 = 0;
local AldyToiF1 = 0;
local AldyTois1 = require((AldyToiK:WaitForChild("\067\111\110\116\114\111\108\108\101\114\115")):WaitForChild(AldyToiWE(20547)));
local AldyToiK1 = AldyToiy[AldyToiWE(20441)] or AldyToiy[AldyToiWE(20483)]:Wait();
local AldyToiy1 = AldyToiK1:WaitForChild(AldyToiWE(20562));
local AldyToij1 = AldyToiWE(20589);
local AldyToin1 = "\057\050\054\050\052\049\048\055\049\054\053\050\055\051";
local AldyToiL1 = "\049\051\052\057\054\053\052\050\053\054\054\052\048\051\052";
local AldyToig1 = AldyToiWE(20492);
local AldyToiU1 = "\056\051\050\049\057\048\050\048\051\057\055\056\052\057";
local AldyToiT1 = AldyToiWE(20493);
local AldyToiJ1 = "\049\050\054\056\051\049\056\049\053\056\051\057\055\050\052";
local AldyToiN1 = AldyToiWE(20601);
local AldyToim1 = "\049\050\056\049\054\055\048\054\056\050\057\049\055\048\051";
local AldyToih1 = {
		[AldyToiWE(20687)] = false,
		[AldyToiWE(20636)] = nil,
		[AldyToiWE(20365)] = AldyToiWE(20325),
		lastSend = 0,
		[AldyToiWE(20246)] = {
			Common = false,
			Uncommon = false,
			Rare = false,
			[AldyToiWE(20659)] = false,
			[AldyToiWE(20456)] = true,
			[AldyToiWE(20291)] = true,
			[AldyToiWE(20380)] = true,
		},
		[AldyToiWE(20338)] = AldyToiWE(20325),
		[AldyToiWE(20280)] = AldyToiWE(20325),
	};
local function AldyToip1(AldyToiz)
	AldyToiz.customUrl = AldyToih1.customUrl;
	local AldyToiM = AldyToiF:JSONEncode(AldyToiz);
	local AldyToiZ = AldyToiF:UrlEncode(AldyToiM);
	local AldyToif = false;
	local AldyToie, AldyToiq = pcall(function()
			local AldyToiz = AldyToiF:RequestAsync({ Url = AldyToid .. ("\063\100\097\116\097\061" .. AldyToiZ), Method = "\071\069\084" });
			if AldyToiz and AldyToiz[AldyToiWE(20318)] then
				AldyToif = true;
			end;
		end);
	if not AldyToif then
		local AldyToiz = http_request or request or syn and syn[AldyToiWE(20252)];
		if AldyToiz then
			local AldyToiM = AldyToiz({ [AldyToiWE(20375)] = AldyToid .. (AldyToiWE(20427) .. AldyToiZ), Method = AldyToiWE(20622), Headers = { [AldyToiWE(20639)] = "\097\112\112\108\105\099\097\116\105\111\110\047\106\115\111\110" } });
			if AldyToiM and (AldyToiM.StatusCode == 200 or AldyToiM.Success) then
				AldyToif = true;
			end;
		end;
	end;
	if not AldyToif then
		local AldyToiz, AldyToiM = pcall(function()
				game:HttpGet(AldyToid .. ("\063\100\097\116\097\061" .. AldyToiZ));
			end);
		if AldyToiz then
			AldyToif = true;
		end;
	end;
end;
local function AldyToia1(AldyToiz)
	for AldyToiM, AldyToiZ in pairs(AldyToia:GetChildren()) do
		if AldyToiZ:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			local AldyToiM, AldyToif = pcall(require, AldyToiZ);
			if AldyToiM and (AldyToif and (AldyToif[AldyToiWE(20253)] and AldyToif.Data.Id == AldyToiz)) then
				return AldyToif;
			end;
		end;
	end;
	return nil;
end;
local function AldyToii1()
	local AldyToiz = AldyToiU:Get(AldyToiWE(20587));
	if not AldyToiz or not AldyToiz[AldyToiWE(20470)] then
		return;
	end;
	for AldyToiz, AldyToiM in pairs(AldyToiz[AldyToiWE(20470)]) do
		local AldyToiZ = AldyToia1(AldyToiM.Id);
		if AldyToiZ and (AldyToiZ[AldyToiWE(20253)].Type == "\070\105\115\104\101\115" and AldyToiZ.Probability) then
			local AldyToiz = AldyToiR.GetTierFromRarity(nil, AldyToiZ[AldyToiWE(20578)][AldyToiWE(20541)]);
			if AldyToiz and AldyToiz.Name == "\076\101\103\101\110\100\097\114\121" then
				if AldyToiM.UUID and not AldyToiM[AldyToiWE(20395)] then
					AldyToii:FireServer(AldyToiM.UUID);
				end;
			end;
		end;
	end;
end;
local function AldyToiR1()
	local AldyToiz = AldyToiU:Get(AldyToiWE(20587));
	if not AldyToiz or not AldyToiz.Items then
		return;
	end;
	for AldyToiz, AldyToiM in pairs(AldyToiz.Items) do
		local AldyToiZ = AldyToia1(AldyToiM[AldyToiWE(20313)]);
		if AldyToiZ and (AldyToiZ[AldyToiWE(20253)].Type == AldyToiWE(20401) and AldyToiZ[AldyToiWE(20578)]) then
			local AldyToiz = AldyToiR.GetTierFromRarity(nil, AldyToiZ.Probability[AldyToiWE(20541)]);
			if AldyToiz and AldyToiz[AldyToiWE(20341)] == AldyToiWE(20291) then
				if AldyToiM[AldyToiWE(20433)] and not AldyToiM[AldyToiWE(20395)] then
					AldyToii:FireServer(AldyToiM.UUID);
				end;
			end;
		end;
	end;
end;
local function AldyToid1()
	local AldyToiz = AldyToiU:Get("\073\110\118\101\110\116\111\114\121");
	if not AldyToiz or not AldyToiz.Items then
		return;
	end;
	for AldyToiz, AldyToiM in pairs(AldyToiz.Items) do
		local AldyToiZ = AldyToia1(AldyToiM.Id);
		if AldyToiZ and (AldyToiZ.Data.Type == "\070\105\115\104\101\115" and AldyToiZ[AldyToiWE(20578)]) then
			local AldyToiz = AldyToiR.GetTierFromRarity(nil, AldyToiZ[AldyToiWE(20578)][AldyToiWE(20541)]);
			if AldyToiz and AldyToiz.Name == "\083\069\067\082\069\084" then
				if AldyToiM[AldyToiWE(20433)] and not AldyToiM.Favorited then
					AldyToii:FireServer(AldyToiM.UUID);
				end;
			end;
		end;
	end;
end;
local AldyToiY1 = { [5] = false, [6] = false, [7] = false };
local AldyToiC1 = {};
local function AldyToiI1(AldyToiz)
	local AldyToiM = AldyToiK:FindFirstChild("\073\116\101\109\115");
	if not AldyToiM then
		return nil;
	end;
	local AldyToiZ = AldyToiz or AldyToiWE(20325);
	AldyToiZ = (AldyToiZ:gsub(AldyToiWE(20383), "")):gsub("\094\037\115\042\040\046-\041\037\115\042\036", "\037\049");
	local AldyToif = string.lower(AldyToiZ);
	local AldyToie, AldyToiq = nil, 0;
	for AldyToiz, AldyToiM in ipairs(AldyToiM:GetChildren()) do
		if AldyToiM:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			local AldyToiz = string[AldyToiWE(20491)](AldyToiM.Name);
			if AldyToif:find(AldyToiz, 1, true) then
				if #AldyToiM[AldyToiWE(20341)] > AldyToiq then
					AldyToiq = #AldyToiM[AldyToiWE(20341)];
					AldyToie = AldyToiM;
				end;
			end;
		end;
	end;
	if AldyToie then
		return AldyToie;
	end;
	for AldyToiz, AldyToiM in ipairs(AldyToiM:GetChildren()) do
		if AldyToiM:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			local AldyToiz, AldyToiZ = pcall(require, AldyToiM);
			if AldyToiz and (type(AldyToiZ) == "\116\097\098\108\101" and (AldyToiZ[AldyToiWE(20253)] and type(AldyToiZ[AldyToiWE(20253)].Name) == "\115\116\114\105\110\103")) then
				local AldyToiz = AldyToiZ[AldyToiWE(20253)][AldyToiWE(20341)];
				local AldyToie = (AldyToiz:gsub("\037\115\042\037\098\040\041", AldyToiWE(20325))):gsub(AldyToiWE(20346), AldyToiWE(20507));
				if string[AldyToiWE(20491)](AldyToie) == AldyToif or string[AldyToiWE(20491)](AldyToiz) == AldyToif then
					return AldyToiM;
				end;
			end;
		end;
	end;
	return nil;
end;
local function AldyToiP1(AldyToiz, AldyToiM)
	if AldyToiz:FindFirstChild(AldyToiWE(20324)) then
		AldyToiz[AldyToiWE(20324)][AldyToiWE(20660)] = "\036 " .. tostring(AldyToiM);
		return;
	end;
	local AldyToiZ = Instance.new(AldyToiWE(20552));
	AldyToiZ[AldyToiWE(20341)] = AldyToiWE(20324);
	AldyToiZ[AldyToiWE(20660)] = "\036 " .. tostring(AldyToiM);
	AldyToiZ.Size = UDim2[AldyToiWE(20355)](1, 0, 0, 24);
	AldyToiZ.Position = UDim2.new(0, 0, 0, AldyToiz.ItemName[AldyToiWE(20473)][AldyToiWE(20371)] + 2);
	AldyToiZ.BackgroundTransparency = 1;
	AldyToiZ.TextColor3 = Color3[AldyToiWE(20586)](255, 215, 0);
	AldyToiZ[AldyToiWE(20535)] = Enum[AldyToiWE(20535)].GothamBold;
	AldyToiZ.TextScaled = true;
	AldyToiZ.Parent = AldyToiz;
	local AldyToif = Instance.new(AldyToiWE(20413));
	AldyToif.Thickness = 2;
	AldyToif.Color = Color3.fromRGB(0, 0, 0);
	AldyToif.ApplyStrokeMode = Enum.ApplyStrokeMode[AldyToiWE(20260)];
	AldyToif.Parent = AldyToiZ;
end;
local AldyToiX1 = 0;
local function AldyToic1()
	AldyToiX1 = 0;
	for AldyToiz, AldyToiM in ipairs(AldyToic:GetChildren()) do
		if AldyToiM:FindFirstChild(AldyToiWE(20590)) then
			local AldyToiz = AldyToiM[AldyToiWE(20590)][AldyToiWE(20660)];
			local AldyToiZ = AldyToiI1(AldyToiz);
			if AldyToiZ then
				local AldyToiz, AldyToif = pcall(require, AldyToiZ);
				if AldyToiz and (AldyToif and (AldyToif.Data and AldyToif.SellPrice)) then
					AldyToiP1(AldyToiM, AldyToif[AldyToiWE(20661)]);
				end;
				if AldyToif and (AldyToif.SellPrice and AldyToif[AldyToiWE(20253)][AldyToiWE(20637)] == "\070\105\115\104\101\115") then
					AldyToiX1 = AldyToiX1 + AldyToif[AldyToiWE(20661)];
				end;
			end;
		end;
	end;
	local AldyToiz = (game:GetService("\080\108\097\121\101\114\115"))[AldyToiWE(20520)];
	local AldyToiM = (AldyToiz:WaitForChild(AldyToiWE(20449))):WaitForChild(AldyToiWE(20587));
	local AldyToiZ = AldyToiM:WaitForChild(AldyToiWE(20468));
	local AldyToif = AldyToiZ:WaitForChild(AldyToiWE(20510));
	local AldyToie = AldyToif:WaitForChild(AldyToiWE(20399));
	AldyToie.Text = AldyToiX1;
end;
local function AldyToiu1()
	local AldyToiz = AldyToiU:Get(AldyToiWE(20587));
	if not AldyToiz or not AldyToiz.Items then
		return;
	end;
	for AldyToiz, AldyToiM in pairs(AldyToiz[AldyToiWE(20470)]) do
		local AldyToiZ = AldyToia1(AldyToiM[AldyToiWE(20313)]);
		if AldyToiZ and AldyToiZ[AldyToiWE(20253)][AldyToiWE(20637)] == AldyToiWE(20401) then
			if AldyToiM.UUID and not AldyToiM[AldyToiWE(20395)] then
				AldyToii:FireServer(AldyToiM.UUID);
			end;
		end;
	end;
end;
local function AldyToiG1()
	local AldyToiz = AldyToiU:Get(AldyToiWE(20587));
	if not AldyToiz or not AldyToiz.Items then
		return;
	end;
	for AldyToiz, AldyToiM in pairs(AldyToiz.Items) do
		local AldyToiZ = AldyToia1(AldyToiM.Id);
		if AldyToiZ and AldyToiZ[AldyToiWE(20253)][AldyToiWE(20637)] == "\070\105\115\104\101\115" then
			if AldyToiM.UUID and AldyToiM.Favorited then
				AldyToii:FireServer(AldyToiM[AldyToiWE(20433)]);
			end;
		end;
	end;
end;
local AldyToiV1 = {};
local function AldyToil1(AldyToiz, AldyToiM)
	local AldyToiZ = game[AldyToiWE(20533)].LocalPlayer;
	local AldyToif = AldyToiZ.Character or AldyToiZ.CharacterAdded:Wait();
	local AldyToie = AldyToif:WaitForChild(AldyToiWE(20562));
	for AldyToiz, AldyToiM in ipairs(AldyToie:GetPlayingAnimationTracks()) do
		AldyToiM:Stop();
	end;
	local AldyToiq = Instance.new("\065\110\105\109\097\116\105\111\110");
	AldyToiq[AldyToiWE(20540)] = "\114\098\120\097\115\115\101\116\105\100\058\047\047" .. AldyToiz;
	local AldyToiF = AldyToie:LoadAnimation(AldyToiq);
	AldyToiF:Play();
	task[AldyToiWE(20374)](AldyToiM, function()
		if AldyToiF[AldyToiWE(20649)] then
			AldyToiF:Stop();
		end;
	end);
	return AldyToiF;
end;
local function AldyToiH1()
	AldyToiz:Notify({ Title = "\065\117\116\111 \070\105\115\104\105\110\103 \083\116\111\112\112\101\100", Content = "\068\101\097\099\116\105\118\097\116\101\100 \065\117\116\111 \070\105\115\104\105\110\103", Duration = 1 });
	for AldyToiz = 1, 25, 1 do
		AldyToiG[AldyToiWE(20317)]:FireServer();
		task[AldyToiWE(20363)](.5);
	end;
	pcall(function()
		if AldyTois1 and AldyTois1.RequestClientStopFishing then
			AldyTois1:RequestClientStopFishing(true);
		end;
	end);
end;
local function AldyToio1(AldyToiz)
	if AldyToiz then
		pcall(function()
			local AldyToiz = { 1 };
			((((((game:GetService(AldyToiWE(20584))):WaitForChild(AldyToiWE(20272))):WaitForChild(AldyToiWE(20643))):WaitForChild(AldyToiWE(20282))):WaitForChild(AldyToiWE(20382))):WaitForChild(AldyToiWE(20448))):FireServer(unpack(AldyToiz));
		end);
		task.wait(.8);
		task[AldyToiWE(20417)](function()
			while AldyToio.autoFishing do
				for AldyToiz, AldyToiM in ipairs(AldyToiy1:GetPlayingAnimationTracks()) do
					AldyToiM:Stop();
				end;
				pcall(function()
					AldyToie1 = true;
					if not AldyToio.fishingAnimation then
						if tonumber(AldyToim) == 245 then
							AldyToil1(AldyToiU1, 1);
						else
							AldyToil1(AldyToij1, 1);
						end;
					end;
					AldyToiG.RF_ChargeFishingRod:InvokeServer(AldyToif:GetServerTimeNow());
					task.wait(.1);
					local AldyToiz, AldyToiM;
					if AldyToio[AldyToiWE(20389)] and not AldyToio.amazingCast then
						AldyToiz, AldyToiM = -0.74999964237213, 1;
					elseif not AldyToio.perfectCast and AldyToio[AldyToiWE(20598)] then
						AldyToiz, AldyToiM = -139.6379699707, .87694226394928;
					else
						AldyToiz = math.random(-1000, 1000) / 1000;
						AldyToiM = math[AldyToiWE(20522)](0, 1000) / 1000;
					end;
					if not AldyToio.fishingAnimation then
						if AldyToim == 245 then
							AldyToil1(AldyToiT1, 2);
						else
							AldyToil1(AldyToin1, 2);
						end;
					end;
					if not AldyToio.fishingAnimation then
						if AldyToim == 245 then
							AldyToil1(AldyToiJ1, 15);
						else
							AldyToil1(AldyToiL1, 15);
						end;
					end;
					AldyToiG[AldyToiWE(20248)]:InvokeServer(AldyToiz, AldyToiM);
					task[AldyToiWE(20363)](.2);
					if not AldyToio[AldyToiWE(20409)] then
						if AldyToim == 245 then
							AldyToil1(AldyToiN1, 2);
						else
							AldyToil1(AldyToig1, 2);
						end;
					end;
					local AldyToiZ = {};
					while AldyToie1 do
						AldyToiG[AldyToiWE(20317)]:FireServer(unpack(AldyToiZ));
						task.wait(.1);
					end;
				end);
				task.wait(AldyToio.loopDelay);
			end;
		end);
	else
		AldyToiG.RF_CancelFishing:InvokeServer();
		pcall(function()
			if AldyTois1 and AldyTois1[AldyToiWE(20525)] then
				AldyTois1:RequestClientStopFishing(true);
			end;
		end);
		for AldyToiz, AldyToiM in ipairs(AldyToiy1:GetPlayingAnimationTracks()) do
			AldyToiM:Stop();
		end;
	end;
end;
local AldyToiQ1 = { enabled = false, [AldyToiWE(20331)] = nil };
local AldyToiW1 = true;
local AldyToiS1 = {};
local AldyToib1 = "\108\097\115\116\095\112\111\115\105\116\105\111\110\046\106\115\111\110";
local function AldyToiA1()
	local AldyToiz = AldyToie.Character;
	if AldyToiz and AldyToiz:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116") then
		local AldyToiM = AldyToiz[AldyToiWE(20500)].CFrame;
		AldyToiS1 = {
				AldyToiM.X,
				AldyToiM[AldyToiWE(20371)],
				AldyToiM[AldyToiWE(20364)],
				({ AldyToiM:ToOrientation() })[1],
				({ AldyToiM:ToOrientation() })[2],
				({ AldyToiM:ToOrientation() })[3],
			};
		writefile(AldyToib1, AldyToiF:JSONEncode(AldyToiS1));
	end;
end;
local function AldyToiO1()
	if not AldyToiW1 then
		return;
	end;
	if isfile(AldyToib1) then
		local AldyToiz = AldyToiF:JSONDecode(readfile(AldyToib1));
		AldyToiS1 = AldyToiz;
	end;
	local AldyToiz = AldyToiS1;
	if AldyToiz and (typeof(AldyToiz) == AldyToiWE(20523) and #AldyToiz >= 3) then
		local AldyToiM = AldyToie[AldyToiWE(20441)] or AldyToie.CharacterAdded:Wait();
		local AldyToiZ = AldyToiM:WaitForChild(AldyToiWE(20500), 5);
		if AldyToiZ then
			task[AldyToiWE(20363)](.3);
			AldyToiZ[AldyToiWE(20475)] = CFrame[AldyToiWE(20355)](AldyToiz[1], AldyToiz[2], AldyToiz[3]) * CFrame.Angles(AldyToiz[4] or 0, AldyToiz[5] or 0, AldyToiz[6] or 0);
		end;
	end;
end;
local function AldyToiD1()
	local AldyToiz = AldyToie.Character;
	if AldyToiz and AldyToiz:FindFirstChild("\072\117\109\097\110\111\105\100") then
		AldyToiz[AldyToiWE(20562)][AldyToiWE(20572)] = 0;
	end;
	local AldyToiM = AldyToif.Characters:FindFirstChild(AldyToie.Name);
	local AldyToiZ = game[AldyToiWE(20533)].LocalPlayer[AldyToiWE(20441)]:WaitForChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
end;
local function AldyToiw1()
	local AldyToiz = game:GetService(AldyToiWE(20432));
	AldyToiM.LocalPlayer.Idled:Connect(function()
		AldyToiz:Button2Down(Vector2[AldyToiWE(20355)](0, 0), AldyToif.CurrentCamera[AldyToiWE(20475)]);
		task[AldyToiWE(20363)](1);
		AldyToiz:Button2Up(Vector2[AldyToiWE(20355)](0, 0), AldyToif.CurrentCamera.CFrame);
		AldyToiz:CaptureController();
		AldyToiz:ClickButton2(Vector2[AldyToiWE(20355)]());
	end);
end;
AldyToiw1();
local function AldyToiE1()
	AldyToiK.Packages[AldyToiWE(20643)][AldyToiWE(20282)][AldyToiWE(20382)]["\082\070\047\083\101\108\108\065\108\108\073\116\101\109\115"]:InvokeServer();
end;
local AldyToir1 = AldyToiA:Paragraph({
		Title = "\240\159\142\163 \065\117\116\111 \070\105\115\104\105\110\103 \083\101\116\116\105\110\103\115",
		Desc = "\073\102 \080\101\114\102\101\099\116 \067\097\115\116 \097\110\100 \065\109\097\122\105\110\103 \067\097\115\116 \097\114\101 \100\105\115\097\098\108\101\100\044 \099\097\115\116\105\110\103 \119\105\108\108 \098\101 \114\097\110\100\111\109\046 \069\110\097\098\108\101 \097\117\116\111 \114\101\115\112\097\119\110 \116\111 \102\105\120 \103\101\116\116\105\110\103 \115\116\117\099\107 \119\104\105\108\101 \102\105\115\104\105\110\103\046",
		[AldyToiWE(20567)] = "\082\101\100",
		[AldyToiWE(20503)] = true,
	});
local AldyToiB1 = AldyToiA:Dropdown({
		[AldyToiWE(20293)] = AldyToiWE(20482),
		Values = { AldyToiWE(20539), AldyToiWE(20684), AldyToiWE(20532) },
		[AldyToiWE(20583)] = false,
		Value = "\082\097\110\100\111\109",
		[AldyToiWE(20292)] = false,
		Callback = function(AldyToiz)
			if AldyToiz == AldyToiWE(20684) then
				AldyToio.perfectCast = true;
				AldyToio.amazingCast = false;
			elseif AldyToiz == AldyToiWE(20532) then
				AldyToio[AldyToiWE(20598)] = true;
				AldyToio.perfectCast = false;
			elseif AldyToiz == "\082\097\110\100\111\109" then
				AldyToio[AldyToiWE(20389)] = false;
				AldyToio[AldyToiWE(20598)] = false;
			end;
		end,
	});
AldyToiW:Register("\067\097\115\116\068\114\111\112\068\111\119\110", AldyToiB1);
local AldyToiv1 = AldyToiA:Toggle({ Title = AldyToiWE(20651), [AldyToiWE(20367)] = false, [AldyToiWE(20654)] = function(AldyToiz)
			AldyToio.autoFishing = AldyToiz;
			AldyToio1(AldyToiz);
			AldyToiW:Save();
		end });
AldyToiW:Register("\065\117\116\111\070\105\115\104\105\110\103", AldyToiv1);
local AldyToix1 = AldyToiA:Slider({
		[AldyToiWE(20293)] = AldyToiWE(20588),
		Value = { Min = .1, [AldyToiWE(20429)] = 2, Default = .1 },
		[AldyToiWE(20602)] = .1,
		[AldyToiWE(20654)] = function(AldyToiz)
			AldyToio.loopDelay = AldyToiz;
			AldyToiW:Save();
		end,
	});
AldyToiW:Register(AldyToiWE(20501), AldyToix1);
local AldyToit1 = AldyToiA:Dropdown({
		[AldyToiWE(20293)] = AldyToiWE(20397),
		Values = { AldyToiWE(20267), "\078\111\114\109\097\108" },
		[AldyToiWE(20697)] = AldyToiWE(20334),
		Multi = false,
		AllowNone = false,
		[AldyToiWE(20654)] = function(AldyToiz)
			if AldyToiz == "\078\111\114\109\097\108" then
				AldyToio[AldyToiWE(20409)] = false;
			elseif AldyToiz == AldyToiWE(20267) then
				AldyToio[AldyToiWE(20409)] = true;
			end;
		end,
	});
AldyToiW:Register("\073\110\115\116\097\110\116\067\097\116\099\104", AldyToit1);
local AldyToik1 = AldyToiA:Toggle({ Title = AldyToiWE(20625), [AldyToiWE(20367)] = false, Callback = function(AldyToiz)
			AldyToiW:Save();
			AldyToio[AldyToiWE(20392)] = AldyToiz;
		end });
AldyToiW:Register(AldyToiWE(20392), AldyToik1);
local AldyToizc = 20;
AldyToiA:Slider({
	Title = "\226\143\177\239\184\143 \065\117\116\111 \082\101\115\112\097\119\110 \068\101\108\097\121",
	Value = { Min = 6, [AldyToiWE(20429)] = 20, Default = 10 },
	Step = 1,
	Default = 10,
	Callback = function(AldyToiz)
		AldyToizc = tonumber(AldyToiz);
		AldyToiW:Save();
	end,
});
AldyToiA:Button({ [AldyToiWE(20293)] = "\082\101\115\112\097\119\110 \078\111\119", Desc = "\073\109\109\101\100\105\097\116\101\108\121 \114\101\115\112\097\119\110 \121\111\117\114 \099\104\097\114\097\099\116\101\114\046", [AldyToiWE(20654)] = function()
		AldyToiD1();
	end });
AldyToiO:Section({ [AldyToiWE(20293)] = AldyToiWE(20683) });
AldyToiO:Button({ [AldyToiWE(20293)] = AldyToiWE(20689), [AldyToiWE(20654)] = function()
		pcall(function()
			(((((AldyToiK:WaitForChild("\080\097\099\107\097\103\101\115")):WaitForChild(AldyToiWE(20643))):WaitForChild(AldyToiWE(20282))):WaitForChild("\110\101\116")):WaitForChild("\082\070\047\083\101\108\108\065\108\108\073\116\101\109\115")):InvokeServer();
			AldyToiz:Notify({ Title = "\083\117\099\099\101\115\115", [AldyToiWE(20568)] = AldyToiWE(20435), [AldyToiWE(20271)] = 3 });
		end);
	end });
local AldyToiMc = AldyToiO:Toggle({
		Title = AldyToiWE(20620),
		[AldyToiWE(20638)] = "\065\117\116\111\109\097\116\105\099\097\108\108\121 \115\101\108\108 \102\105\115\104 \098\097\115\101\100 \111\110 \116\104\101 \099\097\116\099\104 \116\104\114\101\115\104\111\108\100",
		Default = false,
		[AldyToiWE(20654)] = function(AldyToiz)
			AldyToio.AutoSell = AldyToiz;
			AldyToiW:Save();
		end,
	});
AldyToiW:Register(AldyToiWE(20490), AldyToiMc);
local AldyToiZc = 10;
local AldyToifc = AldyToiO:Input({ Title = AldyToiWE(20243), Placeholder = AldyToiWE(20356), Callback = function(AldyToiM)
			local AldyToiZ = tonumber(AldyToiM);
			if AldyToiZ then
				AldyToiZc = AldyToiZ;
				AldyToiz:Notify({ [AldyToiWE(20293)] = AldyToiWE(20476), [AldyToiWE(20638)] = "\070\105\115\104 \119\105\108\108 \098\101 \115\111\108\100 \097\117\116\111\109\097\116\105\099\097\108\108\121 \119\104\101\110 \116\104\101 \099\097\116\099\104 \114\101\097\099\104\101\115 " .. AldyToiZc, Duration = 1 });
			else
				AldyToiz:Notify({ [AldyToiWE(20293)] = "\073\110\118\097\108\105\100 \073\110\112\117\116", [AldyToiWE(20638)] = AldyToiWE(20400), [AldyToiWE(20271)] = 1 });
			end;
			AldyToiW:Save();
		end });
AldyToiW:Register(AldyToiWE(20672), AldyToifc);
local AldyToiec = 4990;
local AldyToiqc = {
		[AldyToiWE(20633)] = { CFrame[AldyToiWE(20355)](-65.1821136, 3.53157115, 2775.68311, .33803311, 3.37374004e-08, .941134214, 3.34767392e-09, 1, -3.7050004e-08, -0.941134214, 1.5674738e-08, .33803311) },
		[AldyToiWE(20610)] = { CFrame.new(-3118.39624, 2.42531538, 2135.26392, .92336154, -1.0069185e-07, -0.383931547, 8.0607947e-08, 1, -6.84016968e-08, .383931547, 3.22115596e-08, .92336154), CFrame.new(-2965.5708, 22.7500286, 2249.01709, .0730288103, 3.98725897e-09, .997329831, 2.27064021e-08, 1, -5.6605951e-09, -0.997329831, 2.30591581e-08, .0730288103), CFrame[AldyToiWE(20355)](-3102.16309, 5.97334528, 2218.88696, .758339584, 8.40698444e-09, -0.651859701, 2.32941257e-08, 1, 3.99960918e-08, .651859701, -4.55151223e-08, .758339584) },
		["\087\101\097\116\104\101\114 \077\097\099\104\105\110\101"] = { CFrame[AldyToiWE(20355)](-1459.3772, 14.7103214, 1831.5188, .777951121, 2.52131862e-08, -0.628324807, -5.24126378e-08, 1, -2.47663063e-08, .628324807, 5.21991339e-08, .777951121), CFrame.new(-1521.20862, 2.87499976, 1912.40564, -0.989418149, 1.00299182e-08, -0.14509216, 6.85348089e-09, 1, 2.23923866e-08, .14509216, 2.11610462e-08, -0.989418149), CFrame[AldyToiWE(20355)](-1574.57129, 13.1473379, 1920.83826, -0.816545427, -3.39974235e-08, .577281177, -6.96619793e-08, 1, -3.96422877e-08, -0.577281177, -7.25842781e-08, -0.816545427) },
		Sisyphus = { CFrame.new(-3765.69751, -135.074417, -906.893677, .704144239, 3.52946827e-08, -0.710056961, -3.45032909e-08, 1, 1.5490853e-08, .710056961, 1.35915084e-08, .704144239), CFrame[AldyToiWE(20355)](-3780.09692, -135.074417, -962.226746, -0.366469413, -5.94525993e-08, -0.930430114, 1.91083362e-08, 1, -7.14241963e-08, .930430114, -4.39537544e-08, -0.366469413) },
		[AldyToiWE(20250)] = { CFrame.new(1820.92529, 5.7885952, 3305.04761, -0.290378898, 1.26296209e-08, -0.956911743, -2.8187932e-08, 1, 2.17520597e-08, .956911743, 3.32897017e-08, -0.290378898), CFrame.new(1704.83362, 4.38193512, 3189.80811, .715091407, 8.31226021e-09, .699030936, -3.8851347e-08, 1, 2.78528525e-08, -0.699030936, -4.70756305e-08, .715091407) },
		["\069\115\111\116\101\114\105\099 \068\101\112\116\104"] = { CFrame.new(3272.27344, -1301.35535, 1390.97058, -0.422851175, -5.61508493e-08, -0.906199157, 7.32285486e-08, 1, -9.6132986e-08, .906199157, -1.07009591e-07, -0.422851175) },
		[AldyToiWE(20595)] = { CFrame[AldyToiWE(20355)](-2126.49707, 53.4868774, 3640.20581, -0.872817099, 4.77880704e-08, .488047391, 7.77828291e-09, 1, -8.40062881e-08, -0.488047391, -6.95259601e-08, -0.872817099) },
		[AldyToiWE(20270)] = {
			CFrame[AldyToiWE(20355)](-3600.62988, -279.0737, -1692.755, -0.938830554, -1.7142467e-08, .344379485, -1.96833128e-08, 1, -3.8818464e-09, -0.344379485, -1.04229247e-08, -0.938830554),
			CFrame[AldyToiWE(20355)](-3625.0708, -279.074219, -1594.57605, .918176472, -3.97606392e-09, -0.396171629, -1.12946204e-08, 1, -3.62128851e-08, .396171629, 3.77244298e-08, .918176472),
			CFrame.new(-3600.72632, -276.06427, -1640.79663, -0.696130812, -6.0491181e-09, .717914939, -1.09490363e-08, 1, -2.19084972e-09, -0.717914939, -9.38559541e-09, -0.696130812),
			CFrame[AldyToiWE(20355)](-3548.52222, -269.309845, -1659.26685, .0472991578, -4.08685423e-08, .998880744, -7.68598838e-08, 1, 4.45538149e-08, -0.998880744, -7.88812216e-08, .0472991578),
			CFrame.new(-3581.84155, -279.09021, -1696.15637, -0.999634147, -0.000535600528, -0.0270430837, -0.000448358158, .999994695, -0.00323198596, .0270446707, -0.00321867829, -0.99962908),
			CFrame.new(-3601.34302, -282.790955, -1629.37036, -0.526346684, .00143659476, .850268841, -0.000266355521, .999998271, -0.00185445137, -0.850269973, -0.00120255165, -0.526345372),
			CFrame.new(-3601.52588, -282.991669, -1629.59265, -0.0535041578, -7.48535811e-08, .998567641, 6.44989342e-08, 1, 7.84168677e-08, -0.998567641, 6.86021764e-08, -0.0535041578),
			CFrame[AldyToiWE(20355)](-3594.76074, -275.663788, -1642.65515, .992020428, 2.66124651e-08, -0.126077324, -2.72226544e-08, 1, -3.11684589e-09, .126077324, 6.52413412e-09, .992020428),
		},
		[AldyToiWE(20591)] = { CFrame.new(-3686.70557, 50.5551491, -802.862549, .671186864, -1.9727894e-08, .741288185, 8.82212987e-08, 1, -5.32654987e-08, -0.741288185, 1.01148508e-07, .671186864), CFrame[AldyToiWE(20355)](-3674.72852, 5.4255538, -860.631531, -0.995413721, 6.02128791e-09, .0956638828, 3.38107586e-09, 1, -2.77609349e-08, -0.0956638828, -2.73101683e-08, -0.995413721) },
		["\075\111\104\097\110\097 \086\111\108\099\097\110\111"] = {
			CFrame.new(-648.832397, 45.2862358, 146.425705, -0.107698888, -2.22477787e-08, .99418354, 2.75738845e-08, 1, 2.53649883e-08, -0.99418354, 3.01452836e-08, -0.107698888),
			CFrame.new(-673.803223, 55.5000572, 183.610779, .122808129, 6.084327e-08, -0.992430449, -9.00719144e-08, 1, 5.01614039e-08, .992430449, 8.32298852e-08, .122808129),
			CFrame[AldyToiWE(20355)](-675.741272, 55.5000572, 164.999741, .700404584, -6.1561245e-08, -0.713746011, 7.66120891e-08, 1, -1.10708571e-08, .713746011, -4.69274966e-08, .700404584),
			CFrame[AldyToiWE(20355)](-648.186584, 45.7505226, 172.17453, -0.995664299, 3.11417523e-08, .0930196419, 3.00717424e-08, 1, -1.29047226e-08, -0.0930196419, -1.0051509e-08, -0.995664299),
		},
		[AldyToiWE(20555)] = { CFrame[AldyToiWE(20355)](-658.677429, 20.0969162, 547.795715, .08832293, -2.84166846e-09, -0.996091902, 1.26686484e-08, 1, -1.72949544e-09, .996091902, -1.24663835e-08, .08832293), CFrame.new(-653.275757, 17.2500591, 490.213684, .223178998, 0, -0.97477746, 0, 1, 0, .97477746, 0, .223178998) },
		[AldyToiWE(20451)] = {
			CFrame.new(1066.1864, 57.2025681, 5045.5542, -0.682534158, 1.00865822e-08, .730853677, -5.8900711e-09, 1, -1.93017531e-08, -0.730853677, -1.74788859e-08, -0.682534158),
			CFrame.new(1057.28992, 33.0884132, 5133.79883, .833871782, 5.44149223e-08, .551958203, -6.58184218e-09, 1, -8.86416984e-08, -0.551958203, 7.02829084e-08, .833871782),
			CFrame[AldyToiWE(20355)](988.954712, 42.8254471, 5088.71289, -0.849417388, -9.89310394e-08, .527721584, -5.96115086e-08, 1, 9.15179328e-08, -0.527721584, 4.62786431e-08, -0.849417388),
			CFrame.new(1006.70685, 17.2302666, 5092.14844, -0.989664078, 5.6538525e-09, -0.143405005, 9.14879283e-09, 1, -2.3711717e-08, .143405005, -2.47786183e-08, -0.989664078),
			CFrame[AldyToiWE(20355)](1025.02356, 2.77259707, 5011.47021, -0.974474192, -6.87871804e-08, .224499553, -4.47472104e-08, 1, 1.12170284e-07, -0.224499553, 9.92613209e-08, -0.974474192),
			CFrame[AldyToiWE(20355)](1071.14551, 3.528404, 5038.00293, -0.532300115, 3.38677708e-08, .84655571, 6.69992914e-08, 1, 2.12149165e-09, -0.84655571, 5.7847906e-08, -0.532300115),
			CFrame.new(1022.55457, 16.6277809, 5066.28223, .721996129, 0, -0.691897094, 0, 1, 0, .691897094, 0, .721996129),
			CFrame[AldyToiWE(20355)](1023.29114, 19.1177425, 5070.02588, .507022858, 2.01505461e-08, -0.861932635, 5.94909153e-08, 1, 5.83732387e-08, .861932635, -8.08737255e-08, .507022858),
			CFrame[AldyToiWE(20355)](981.318909, 41.6503983, 5078.02344, -0.0676535219, -6.19234299e-08, .997708857, -2.32029294e-08, 1, 6.04922619e-08, -0.997708857, -1.90572536e-08, -0.0676535219),
		},
	};
local function AldyToiFc()
	if not AldyToiC1 or #AldyToiC1 == 0 then
		AldyToiz:Notify({ Title = "\078\111 \073\115\108\097\110\100 \083\101\108\101\099\116\101\100", Description = "\080\108\101\097\115\101 \115\101\108\101\099\116 \105\115\108\097\110\100 \116\111 \115\116\097\114\116 \097\117\116\111 \102\097\114\109", Duration = 1 });
		return;
	end;
	local AldyToiM = AldyToiC1[math.random(1, #AldyToiC1)];
	local AldyToiZ = AldyToiqc[AldyToiM];
	if AldyToiZ and #AldyToiZ > 0 then
		local AldyToiz = AldyToiZ[math[AldyToiWE(20522)](1, #AldyToiZ)];
		local AldyToiM = game[AldyToiWE(20533)].LocalPlayer[AldyToiWE(20441)]:WaitForChild(AldyToiWE(20500));
		if AldyToiM.Anchored then
			AldyToiM.Anchored = false;
			task.wait(.1);
		end;
		AldyToiM.CFrame = AldyToiz;
		if AldyToiQ1.enabled then
			AldyToiQ1[AldyToiWE(20331)] = AldyToiM[AldyToiWE(20475)];
		end;
	end;
end;
AldyToiD:Paragraph({
	Title = AldyToiWE(20251),
	Desc = AldyToiWE(20442),
	[AldyToiWE(20567)] = "\071\114\101\101\110",
	[AldyToiWE(20503)] = true,
});
local AldyToisc = {};
for AldyToiz, AldyToiM in pairs(AldyToiqc) do
	table.insert(AldyToisc, AldyToiz);
end;
local AldyToiKc = AldyToiD:Dropdown({
		Title = "\083\101\108\101\099\116 \073\115\108\097\110\100\040\115\041",
		Values = AldyToisc,
		[AldyToiWE(20583)] = true,
		AllowNone = false,
		Callback = function(AldyToiz)
			AldyToiC1 = AldyToiz;
		end,
	});
AldyToiW:Register("\073\115\108\097\110\100\068\114\111\112\100\111\119\110", AldyToiKc);
local AldyToiyc = 10;
local AldyToijc = AldyToiD:Input({ [AldyToiWE(20293)] = "\065\117\116\111 \084\101\108\101\112\111\114\116 \084\104\114\101\115\104\111\108\100", Placeholder = "\068\101\102\097\117\108\116\058 \049\048", Callback = function(AldyToiM)
			local AldyToiZ = tonumber(AldyToiM);
			if AldyToiZ then
				AldyToiyc = AldyToiZ;
				AldyToiz:Notify({ Title = "\065\117\116\111 \070\097\114\109 \084\104\114\101\115\104\111\108\100 \085\112\100\097\116\101\100", Description = "\084\104\101 \112\108\097\121\101\114 \119\105\108\108 \116\101\108\101\112\111\114\116 \116\111 \116\104\101 \105\115\108\097\110\100 \097\102\116\101\114 \114\101\097\099\104\105\110\103 " .. (AldyToiZ .. AldyToiWE(20388)), Duration = 1 });
			else
				AldyToiz:Notify({ Title = "\073\110\118\097\108\105\100 \073\110\112\117\116", Description = AldyToiWE(20400), Duration = 1 });
			end;
		end });
AldyToiW:Register("\065\117\116\111\070\097\114\109\084\104", AldyToijc);
local AldyToinc = AldyToiD:Toggle({ Title = "\083\116\097\114\116 \065\117\116\111 \070\097\114\109", Default = false, Callback = function(AldyToiz)
			if AldyToiz then
				AldyToiFc();
				AldyToio.autoFarming = AldyToiz;
				AldyToiv1:Set(AldyToiz);
				AldyToio1(AldyToiz);
			end;
		end });
AldyToiW:Register(AldyToiWE(20402), AldyToinc);
AldyToiB:Toggle({ Title = AldyToiWE(20627), Default = false, [AldyToiWE(20654)] = function(AldyToiz)
		AldyToiH.Legendary = AldyToiz;
		if AldyToiz then
			AldyToii1();
		end;
	end });
AldyToiB:Toggle({ [AldyToiWE(20293)] = "\070\097\118\111\114\105\116\101 \065\108\108 \077\121\116\104\105\099\097\108", Default = true, Callback = function(AldyToiz)
		AldyToiH.Mythical = AldyToiz;
		if AldyToiz then
			AldyToiR1();
		end;
	end });
AldyToiB:Toggle({ [AldyToiWE(20293)] = AldyToiWE(20669), [AldyToiWE(20367)] = false, [AldyToiWE(20654)] = function(AldyToiz)
		AldyToiH.Secret = AldyToiz;
		if AldyToiz then
			AldyToid1();
		end;
	end });
local AldyToiLc = AldyToiK:WaitForChild(AldyToiWE(20634));
local AldyToigc = {};
for AldyToiz, AldyToiM in ipairs(AldyToiLc:GetChildren()) do
	table[AldyToiWE(20509)](AldyToigc, AldyToiM[AldyToiWE(20341)]);
end;
local AldyToiUc = {};
local AldyToiTc = AldyToiB:Dropdown({
		[AldyToiWE(20293)] = AldyToiWE(20678),
		Values = AldyToigc,
		Multi = true,
		AllowNone = false,
		[AldyToiWE(20697)] = {},
		[AldyToiWE(20654)] = function(AldyToiz)
			AldyToiUc = AldyToiz;
		end,
	});
AldyToiW:Register("\102\097\118\111\114\105\116\101\086\097\114\105\097\110\116", AldyToiTc);
AldyToiB:Button({ Title = "\070\097\118\111\114\105\116\101 \065\108\108", Callback = function()
		AldyToiu1();
	end });
AldyToiB:Button({ [AldyToiWE(20293)] = AldyToiWE(20481), Callback = function()
		AldyToiG1();
	end });
local AldyToiJc = nil;
local function AldyToiNc(AldyToiz)
	if AldyToiz then
		local AldyToiz = AldyToif:WaitForChild(AldyToiWE(20671), 5);
		local AldyToiM = AldyToiz:FindFirstChild(AldyToie.Name);
		if not AldyToiM then
			return;
		end;
		local AldyToiZ = AldyToiM:FindFirstChild(AldyToiWE(20500));
		if not AldyToiZ then
			return;
		end;
		AldyToiJc = Instance.new("\080\097\114\116");
		AldyToiJc.Anchored = true;
		AldyToiJc.Size = Vector3[AldyToiWE(20355)](10, 1, 10);
		AldyToiJc.Transparency = 1;
		AldyToiJc.CanCollide = true;
		AldyToiJc[AldyToiWE(20341)] = AldyToiWE(20428);
		AldyToiJc[AldyToiWE(20303)] = AldyToif;
		task[AldyToiWE(20417)](function()
			while AldyToiJc and AldyToiJc.Parent do
				pcall(function()
					AldyToiJc[AldyToiWE(20630)] = AldyToiZ[AldyToiWE(20630)] - Vector3[AldyToiWE(20355)](0, 3.5, 0);
				end);
				task[AldyToiWE(20363)](.1);
			end;
		end);
	else
		if AldyToiJc then
			AldyToiJc:Destroy();
			AldyToiJc = nil;
		end;
	end;
end;
local AldyToimc = AldyToiE:Toggle({ [AldyToiWE(20293)] = "\070\108\111\097\116\105\110\103", [AldyToiWE(20367)] = false, [AldyToiWE(20654)] = function(AldyToiz)
			AldyToio.floatingPlatform = AldyToiz;
			AldyToiNc(AldyToiz);
			AldyToiW:Save();
		end });
AldyToiW:Register("\070\108\111\097\116\080\108\097\121\101\114", AldyToimc);
local function AldyToihc(AldyToiz)
	if not AldyToiz or type(AldyToiz) ~= "\110\117\109\098\101\114" then
		return AldyToiWE(20647);
	end;
	if AldyToiz >= 1000000 then
		return string[AldyToiWE(20640)](AldyToiWE(20379), AldyToiz / 1000000);
	elseif AldyToiz >= 1000 then
		return string[AldyToiWE(20640)]("\037\046\049\102\107 \067\111\105\110\115", AldyToiz / 1000);
	else
		return tostring(AldyToiz) .. AldyToiWE(20430);
	end;
end;
local AldyToipc = {};
for AldyToiz, AldyToiM in ipairs(AldyToia:GetChildren()) do
	if AldyToiM:IsA(AldyToiWE(20276)) then
		local AldyToiz, AldyToiZ = pcall(require, AldyToiM);
		if AldyToiz and typeof(AldyToiZ) == AldyToiWE(20523) then
			local AldyToiz = AldyToiZ.Data;
			if AldyToiz and AldyToiz[AldyToiWE(20637)] == AldyToiWE(20686) then
				local AldyToif = AldyToiz[AldyToiWE(20313)] or "\063";
				local AldyToie = AldyToiz.Name or AldyToiM.Name;
				local AldyToiq = AldyToiz[AldyToiWE(20638)] or AldyToiWE(20316);
				local AldyToiF = AldyToiWE(20647);
				if AldyToiZ[AldyToiWE(20421)] then
					AldyToiF = AldyToihc(AldyToiZ.Price);
				else
					local AldyToiz = {
							[AldyToiWE(20693)] = AldyToiWE(20342),
							[AldyToiWE(20335)] = AldyToiWE(20580),
							[AldyToiWE(20249)] = "\053\048\107 \067\111\105\110\115",
							[AldyToiWE(20381)] = AldyToiWE(20323),
						};
					AldyToiF = AldyToiz[AldyToie] or AldyToiWE(20566);
				end;
				table[AldyToiWE(20509)](AldyToipc, {
					ID = AldyToif,
					[AldyToiWE(20341)] = AldyToie,
					[AldyToiWE(20344)] = AldyToiq,
					[AldyToiWE(20624)] = AldyToiF,
				});
			end;
		end;
	end;
end;
AldyToik:Paragraph({ Title = "\082\111\100", [AldyToiWE(20688)] = "\083\111\109\101 \082\111\100\115 \099\097\110\'\116 \098\101 \112\117\114\099\104\097\115\101\100 \098\101\099\097\117\115\101 \116\104\101\121 \097\114\101 \086\073\080 \111\110\108\121 \111\114 \100\111\101\115\110\'\116 \104\097\118\101 \097 \112\114\105\099\101 \109\097\112\046", Color = "\082\101\100" });
for AldyToiM, AldyToiZ in ipairs(AldyToipc) do
	AldyToik:Button({ [AldyToiWE(20293)] = string.format("\037\115 \040\037\115\041", AldyToiZ[AldyToiWE(20341)], AldyToiZ[AldyToiWE(20624)]), [AldyToiWE(20654)] = function()
			local AldyToiM, AldyToif = pcall(function()
					return AldyToiK[AldyToiWE(20272)]._Index["\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048"].net["\082\070\047\080\117\114\099\104\097\115\101\070\105\115\104\105\110\103\082\111\100"]:InvokeServer(AldyToiZ[AldyToiWE(20373)]);
				end);
			AldyToiz:Notify({ [AldyToiWE(20293)] = AldyToiWE(20336), Description = AldyToiM and "\066\117\121\105\110\103 " .. AldyToiZ[AldyToiWE(20341)] or "\070\097\105\108\101\100 \116\111 \098\117\121 " .. AldyToiZ[AldyToiWE(20341)], [AldyToiWE(20271)] = 2 });
			if not AldyToiM then
				warn("\091\066\117\121 \082\111\100 \069\114\114\111\114\093\058", AldyToif);
			end;
		end });
end;
local AldyToiac = AldyToiK:FindFirstChild(AldyToiWE(20284));
if not AldyToiac then
	warn(AldyToiWE(20330));
	return;
end;
AldyToik:Paragraph({ [AldyToiWE(20293)] = "\066\097\105\116\047 \066\111\098\098\101\114", Desc = AldyToiWE(20616), [AldyToiWE(20567)] = AldyToiWE(20315) });
for AldyToiM, AldyToiZ in ipairs(AldyToiac:GetChildren()) do
	if AldyToiZ:IsA(AldyToiWE(20276)) then
		local AldyToiM, AldyToif = pcall(require, AldyToiZ);
		if AldyToiM and (AldyToif and AldyToif[AldyToiWE(20253)]) then
			local AldyToiM = AldyToif.Data.Id or 0;
			local AldyToiZ = AldyToif[AldyToiWE(20253)].Name or "\085\110\107\110\111\119\110";
			local AldyToie = AldyToif[AldyToiWE(20253)][AldyToiWE(20638)] or "-";
			local AldyToiq = AldyToif[AldyToiWE(20421)] and AldyToif.Price .. AldyToiWE(20430) or AldyToiWE(20289);
			AldyToik:Button({ Title = AldyToiZ .. (AldyToiWE(20477) .. (AldyToiq .. AldyToiWE(20554))), Callback = function()
					pcall(function()
						AldyToiK[AldyToiWE(20272)]._Index["\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048"].net[AldyToiWE(20559)]:InvokeServer(AldyToiM);
						AldyToiz:Notify({ [AldyToiWE(20293)] = AldyToiWE(20556), [AldyToiWE(20638)] = "\066\117\121\105\110\103 " .. AldyToiZ, [AldyToiWE(20271)] = 2 });
					end);
				end });
		end;
	end;
end;
local AldyToiic = {};
local function AldyToiRc()
	AldyToiic.Terrain = { [AldyToiWE(20526)] = workspace[AldyToiWE(20628)][AldyToiWE(20526)], WaterWaveSpeed = workspace[AldyToiWE(20628)].WaterWaveSpeed, [AldyToiWE(20460)] = workspace.Terrain.WaterReflectance };
	AldyToiic[AldyToiWE(20358)] = {};
	AldyToiic[AldyToiWE(20296)] = {};
	AldyToiic.Meshes = {};
	for AldyToiz, AldyToiM in pairs(game:GetDescendants()) do
		if AldyToiM:IsA("\066\097\115\101\080\097\114\116") then
			AldyToiic[AldyToiWE(20358)][AldyToiM] = {
					Color = AldyToiM[AldyToiWE(20567)],
					Material = AldyToiM.Material,
					[AldyToiWE(20469)] = AldyToiM.Reflectance,
					CastShadow = AldyToiM.CastShadow,
					Transparency = AldyToiM[AldyToiWE(20626)],
				};
		elseif AldyToiM:IsA(AldyToiWE(20419)) or AldyToiM:IsA(AldyToiWE(20283)) then
			AldyToiic[AldyToiWE(20296)][AldyToiM] = { [AldyToiWE(20626)] = AldyToiM[AldyToiWE(20626)], [AldyToiWE(20283)] = AldyToiM[AldyToiWE(20283)] };
		elseif AldyToiM:IsA("\083\112\101\099\105\097\108\077\101\115\104") then
			AldyToiic[AldyToiWE(20390)][AldyToiM] = { [AldyToiWE(20396)] = AldyToiM[AldyToiWE(20396)] };
		end;
	end;
end;
local function AldyToidc()
	AldyToiRc();
	local AldyToiz = workspace[AldyToiWE(20628)];
	local AldyToiM = (game:GetService("\080\108\097\121\101\114\115"))[AldyToiWE(20520)];
	if sethiddenproperty then
		sethiddenproperty(AldyToiz, AldyToiWE(20526), 0);
		sethiddenproperty(AldyToiz, AldyToiWE(20350), 0);
		sethiddenproperty(AldyToiz, "\087\097\116\101\114\082\101\102\108\101\099\116\097\110\099\101", 0);
	else
		AldyToiz.WaterWaveSize = 0;
		AldyToiz[AldyToiWE(20350)] = 0;
		AldyToiz[AldyToiWE(20460)] = 0;
	end;
	for AldyToiz, AldyToiZ in pairs(game:GetDescendants()) do
		if AldyToiZ:IsA("\066\097\115\101\080\097\114\116") then
			if not (AldyToiM and AldyToiZ:IsDescendantOf(AldyToiM.Character)) then
				AldyToiZ.Material = Enum[AldyToiWE(20310)].SmoothPlastic;
				AldyToiZ.Color = Color3.fromRGB(120, 120, 120);
				AldyToiZ.Reflectance = 0;
				AldyToiZ[AldyToiWE(20410)] = false;
			end;
		elseif AldyToiZ:IsA(AldyToiWE(20419)) or AldyToiZ:IsA("\084\101\120\116\117\114\101") then
			if not (AldyToiZ[AldyToiWE(20341)] == "\102\097\099\101" and AldyToiZ.Parent:IsA("\072\101\097\100")) then
				AldyToiZ.Transparency = 1;
				AldyToiZ[AldyToiWE(20283)] = AldyToiWE(20325);
			end;
		elseif AldyToiZ:IsA("\080\097\114\116\105\099\108\101\069\109\105\116\116\101\114") or AldyToiZ:IsA("\084\114\097\105\108") or AldyToiZ:IsA(AldyToiWE(20372)) then
			AldyToiZ.Enabled = false;
		elseif AldyToiZ:IsA(AldyToiWE(20585)) then
			AldyToiZ:Destroy();
		elseif AldyToiZ:IsA("\083\112\101\099\105\097\108\077\101\115\104") then
			AldyToiZ[AldyToiWE(20396)] = AldyToiWE(20325);
		end;
	end;
	(settings()).Rendering[AldyToiWE(20574)] = Enum[AldyToiWE(20574)][AldyToiWE(20485)];
	(settings()).Rendering[AldyToiWE(20319)] = Enum[AldyToiWE(20319)][AldyToiWE(20485)];
end;
local function AldyToiYc()
	local AldyToiz = workspace.Terrain;
	if AldyToiic[AldyToiWE(20628)] then
		AldyToiz[AldyToiWE(20526)] = AldyToiic[AldyToiWE(20628)].WaterWaveSize;
		AldyToiz[AldyToiWE(20350)] = AldyToiic[AldyToiWE(20628)].WaterWaveSpeed;
		AldyToiz[AldyToiWE(20460)] = AldyToiic.Terrain[AldyToiWE(20460)];
	end;
	for AldyToiz, AldyToiM in pairs(AldyToiic.Parts) do
		if AldyToiz and AldyToiz.Parent then
			for AldyToiM, AldyToiZ in pairs(AldyToiM) do
				AldyToiz[AldyToiM] = AldyToiZ;
			end;
		end;
	end;
	for AldyToiz, AldyToiM in pairs(AldyToiic.Decals) do
		if AldyToiz and AldyToiz.Parent then
			for AldyToiM, AldyToiZ in pairs(AldyToiM) do
				AldyToiz[AldyToiM] = AldyToiZ;
			end;
		end;
	end;
	for AldyToiz, AldyToiM in pairs(AldyToiic[AldyToiWE(20390)]) do
		if AldyToiz and AldyToiz.Parent then
			for AldyToiM, AldyToiZ in pairs(AldyToiM) do
				AldyToiz[AldyToiM] = AldyToiZ;
			end;
		end;
	end;
end;
local function AldyToiCc()
	local AldyToiz = game:GetService("\076\105\103\104\116\105\110\103");
	AldyToiz[AldyToiWE(20594)] = 0;
	AldyToiz.Brightness = .5;
	AldyToiz[AldyToiWE(20407)] = Color3[AldyToiWE(20586)](10, 10, 10);
	AldyToiz[AldyToiWE(20327)] = Color3[AldyToiWE(20586)](5, 5, 5);
	AldyToiz.FogStart = 0;
	AldyToiz[AldyToiWE(20642)] = 100000;
	AldyToiz:ClearAllChildren();
	local AldyToiM = Instance[AldyToiWE(20355)](AldyToiWE(20398));
	AldyToiM.SkyboxBk = AldyToiWE(20325);
	AldyToiM[AldyToiWE(20328)] = AldyToiWE(20325);
	AldyToiM.SkyboxFt = AldyToiWE(20325);
	AldyToiM.SkyboxLf = AldyToiWE(20325);
	AldyToiM.SkyboxRt = AldyToiWE(20325);
	AldyToiM[AldyToiWE(20613)] = AldyToiWE(20325);
	AldyToiM.SunAngularSize = 0;
	AldyToiM.MoonAngularSize = 0;
	AldyToiM.StarCount = 0;
	AldyToiM[AldyToiWE(20303)] = AldyToiz;
end;
local AldyToiIc = false;
local AldyToiPc = AldyToiE:Toggle({ [AldyToiWE(20293)] = "\068\097\114\107 \047 \078\105\103\104\116 \077\111\100\101", Default = false, [AldyToiWE(20654)] = function(AldyToiz)
			AldyToiIc = AldyToiz;
		end });
AldyToiW:Register(AldyToiWE(20497), AldyToiPc);
AldyToiZ[AldyToiWE(20263)]:Connect(function()
	if AldyToiIc then
		AldyToiCc();
	end;
end);
local AldyToiXc = AldyToiE:Toggle({
		[AldyToiWE(20293)] = "\065\110\116\105 \076\097\103 \047 \076\111\119 \084\101\120\116\117\114\101",
		[AldyToiWE(20638)] = "\082\101\100\117\099\101 \116\101\120\116\117\114\101\115 \102\111\114 \098\101\116\116\101\114 \070\080\083",
		[AldyToiWE(20367)] = true,
		[AldyToiWE(20654)] = function(AldyToiz)
			if AldyToiz then
				AldyToidc();
			else
				AldyToiYc();
			end;
			AldyToiW:Save();
		end,
	});
AldyToiW:Register(AldyToiWE(20339), AldyToiXc);
local AldyToicc = AldyToiE:Toggle({
		[AldyToiWE(20293)] = "\068\105\115\097\098\108\101 \051\068 \082\101\110\100\101\114",
		Description = "\068\105\115\097\098\108\101 \114\101\110\100\101\114 \102\111\114 \098\101\116\116\101\114 \070\080\083",
		[AldyToiWE(20367)] = false,
		[AldyToiWE(20654)] = function(AldyToiz)
			if AldyToiz then
				pcall(function()
					AldyToiZ:Set3dRenderingEnabled(false);
				end);
			else
				pcall(function()
					AldyToiZ:Set3dRenderingEnabled(true);
				end);
			end;
			AldyToiW:Save();
		end,
	});
AldyToiW:Register("\114\101\110\100\101\114\051\100", AldyToicc);
local AldyToiuc = {
		Disabled = false,
		CutsceneController = require((game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101"))[AldyToiWE(20408)][AldyToiWE(20665)]),
		[AldyToiWE(20641)] = nil,
		OriginalStop = nil,
	};
function AldyToiuc.SaveOriginal()
	if not AldyToiuc[AldyToiWE(20641)] then
		AldyToiuc[AldyToiWE(20641)] = AldyToiuc.CutsceneController.Play;
	end;
	if not AldyToiuc[AldyToiWE(20517)] then
		AldyToiuc.OriginalStop = AldyToiuc.CutsceneController[AldyToiWE(20499)];
	end;
end;
function AldyToiuc.Disable()
	if AldyToiuc.Disabled then
		return;
	end;
	AldyToiuc.Disabled = true;
	AldyToiuc[AldyToiWE(20549)]();
	AldyToiuc.CutsceneController.Play = function(AldyToiz, ...)
			local AldyToiM = require(AldyToiK.Modules[AldyToiWE(20646)]);
			local AldyToiZ = game:GetService(AldyToiWE(20307));
			local AldyToif = require(AldyToiK[AldyToiWE(20408)][AldyToiWE(20279)]);
			AldyToiM:SetHUDVisibility(true);
			AldyToiZ[AldyToiWE(20437)] = true;
			if AldyToif:IsEnabled() == false then
				AldyToif:SetEnabled(true);
			end;
		end;
	AldyToiuc.CutsceneController.Stop = function(...)
			AldyToiuc[AldyToiWE(20517)](...);
		end;
end;
function AldyToiuc.Enable()
	if not AldyToiuc.Disabled then
		return;
	end;
	AldyToiuc[AldyToiWE(20607)] = false;
	AldyToiuc[AldyToiWE(20549)]();
	AldyToiuc[AldyToiWE(20665)].Play = AldyToiuc[AldyToiWE(20641)];
	AldyToiuc.CutsceneController.Stop = AldyToiuc[AldyToiWE(20517)];
end;
local AldyToiGc = AldyToiE:Toggle({ Title = AldyToiWE(20261), Default = false, Callback = function(AldyToiz)
			if AldyToiz then
				AldyToiuc[AldyToiWE(20464)]();
			else
				AldyToiuc[AldyToiWE(20695)]();
			end;
			AldyToiW:Save();
		end });
AldyToiW:Register(AldyToiWE(20274), AldyToiGc);
local AldyToiVc = AldyToiE:Toggle({ [AldyToiWE(20293)] = "\070\105\115\104\105\110\103 \082\097\100\097\114", [AldyToiWE(20367)] = false, [AldyToiWE(20654)] = function(AldyToiz)
			local AldyToiM = require(AldyToiK.Packages.Net);
			local AldyToiZ = AldyToiM:RemoteFunction(AldyToiWE(20474));
			AldyToiZ:InvokeServer(AldyToiz);
			AldyToiW:Save();
		end });
AldyToiW:Register(AldyToiWE(20551), AldyToiVc);
local AldyToilc = AldyToiE:Toggle({ [AldyToiWE(20293)] = AldyToiWE(20247), [AldyToiWE(20367)] = false, Callback = function(AldyToiz)
			AldyToiW1 = AldyToiz;
			AldyToiW:Save();
		end });
AldyToiW:Register(AldyToiWE(20518), AldyToilc);
local AldyToiHc = AldyToiE:Toggle({ Title = AldyToiWE(20512), [AldyToiWE(20367)] = false, [AldyToiWE(20654)] = function(AldyToiz)
			AldyToiQ1[AldyToiWE(20687)] = AldyToiz;
			if not AldyToiz then
				AldyToiQ1.position = nil;
			elseif AldyToio[AldyToiWE(20322)] and (AldyToiy[AldyToiWE(20441)] and AldyToiy.Character[AldyToiWE(20514)]) then
				AldyToiQ1.position = AldyToiy[AldyToiWE(20441)][AldyToiWE(20514)].CFrame;
			end;
			AldyToiW:Save();
		end });
AldyToiW:Register(AldyToiWE(20577), AldyToiHc);
task[AldyToiWE(20417)](function()
	while task[AldyToiWE(20363)]() do
		if AldyToiQ1[AldyToiWE(20687)] and (AldyToiQ1[AldyToiWE(20331)] and (AldyToiy[AldyToiWE(20441)] and AldyToiy[AldyToiWE(20441)].PrimaryPart)) then
			AldyToiy[AldyToiWE(20441)][AldyToiWE(20514)][AldyToiWE(20475)] = AldyToiQ1[AldyToiWE(20331)];
		end;
	end;
end);
local AldyToioc = false;
AldyToiz1:Section({ Title = AldyToiWE(20673) });
AldyToiz1:Paragraph({
	[AldyToiWE(20293)] = "\068\105\115\099\111\114\100",
	Desc = "\104\116\116\112\115\058\047\047\100\105\115\099\111\114\100\046\103\103\047\097\117\080\085\071\071\057\100\121\119",
	Image = AldyToiWE(20345),
	[AldyToiWE(20567)] = Color3[AldyToiWE(20440)](AldyToiWE(20366)),
	Buttons = { {
			Title = "\067\111\112\121 \076\105\110\107",
			Icon = AldyToiWE(20406),
			[AldyToiWE(20534)] = AldyToiWE(20455),
			Callback = function()
				setclipboard("\104\116\116\112\115\058\047\047\100\105\115\099\111\114\100\046\103\103\047\097\117\080\085\071\071\057\100\121\119");
				AldyToiz:Notify({ Title = "\067\111\112\105\101\100\033", [AldyToiWE(20568)] = "\068\105\115\099\111\114\100 \108\105\110\107 \099\111\112\105\101\100 \116\111 \099\108\105\112\098\111\097\114\100\046", [AldyToiWE(20271)] = 1 });
			end,
		} },
});
AldyToiz1:Paragraph({
	Title = "\071\105\116\072\117\098",
	Desc = AldyToiWE(20480),
	[AldyToiWE(20378)] = AldyToiWE(20361),
	Color = Color3.fromHex(AldyToiWE(20505)),
	Buttons = { {
			[AldyToiWE(20293)] = AldyToiWE(20422),
			[AldyToiWE(20596)] = "\099\111\112\121",
			Variant = "\084\101\114\116\105\097\114\121",
			Callback = function()
				setclipboard(AldyToiWE(20524));
				AldyToiz:Notify({ [AldyToiWE(20293)] = "\067\111\112\105\101\100\033", Content = AldyToiWE(20632), Duration = 1 });
			end,
		} },
});
AldyToiM1:Section({ [AldyToiWE(20293)] = "\240\159\145\164 \076\111\099\097\108 \080\108\097\121\101\114" });
AldyToiM1:Paragraph({ Title = AldyToiWE(20685), Desc = tostring(AldyToiy.UserId), [AldyToiWE(20420)] = { {
			[AldyToiWE(20293)] = AldyToiWE(20521),
			[AldyToiWE(20596)] = AldyToiWE(20406),
			[AldyToiWE(20534)] = "\084\101\114\116\105\097\114\121",
			Callback = function()
				setclipboard(tostring(AldyToiy[AldyToiWE(20618)]));
			end,
		} } });
AldyToiM1:Section({ [AldyToiWE(20293)] = "\240\159\140\144 \083\101\114\118\101\114 \073\110\102\111" });
local AldyToiQc = AldyToiM1:Paragraph({ [AldyToiWE(20293)] = AldyToiWE(20564), Desc = #AldyToiM:GetPlayers() .. (AldyToiWE(20262) .. AldyToiM[AldyToiWE(20273)]) });
local AldyToiWc = AldyToiM1:Paragraph({ [AldyToiWE(20293)] = "\240\159\147\161 \080\105\110\103", Desc = AldyToiWE(20304) });
AldyToiM1:Paragraph({ [AldyToiWE(20293)] = "\240\159\143\183\239\184\143 \080\108\097\099\101 \073\068", [AldyToiWE(20688)] = tostring(game[AldyToiWE(20360)]), [AldyToiWE(20420)] = { {
			[AldyToiWE(20293)] = "\067\111\112\121",
			[AldyToiWE(20596)] = "\099\111\112\121",
			Variant = "\084\101\114\116\105\097\114\121",
			[AldyToiWE(20654)] = function()
				setclipboard(tostring(game[AldyToiWE(20360)]));
			end,
		} } });
local AldyToiSc;
AldyToiSc = string[AldyToiWE(20640)]("\104\116\116\112\115\058\047\047\119\119\119\046\114\111\098\108\111\120\046\099\111\109\047\103\097\109\101\115\047\115\116\097\114\116\063\112\108\097\099\101\073\100\061\037\100\038\103\097\109\101\073\110\115\116\097\110\099\101\073\100\061\037\115", game[AldyToiWE(20360)], game.JobId);
AldyToiM1:Paragraph({ Title = AldyToiWE(20619), [AldyToiWE(20688)] = AldyToiWE(20359), Buttons = { {
			Title = "\067\111\112\121 \076\105\110\107",
			[AldyToiWE(20596)] = "\108\105\110\107",
			Variant = AldyToiWE(20668),
			Callback = function()
				setclipboard(AldyToiSc);
				AldyToiz:Notify({ Title = "\067\111\112\105\101\100\033", [AldyToiWE(20568)] = "\083\101\114\118\101\114 \108\105\110\107 \099\111\112\105\101\100 \116\111 \099\108\105\112\098\111\097\114\100\046" });
			end,
		} } });
local AldyToibc = AldyToiWE(20325);
local AldyToiAc = AldyToiM1:Input({ [AldyToiWE(20293)] = "\073\110\112\117\116 \083\101\114\118\101\114 \076\105\110\107", Placeholder = "\069\110\116\101\114 \121\111\117\114 \083\101\114\118\101\114 \076\105\110\107", Callback = function(AldyToiz)
			AldyToibc = AldyToiz;
			AldyToiW:Save();
		end });
AldyToiW:Register("\105\110\112\117\116\076\105\110\107", AldyToiAc);
AldyToiM1:Button({ [AldyToiWE(20293)] = AldyToiWE(20332), [AldyToiWE(20654)] = function()
		local AldyToiM = linkJoin;
		if not AldyToiM or AldyToiM == "" then
			AldyToiz:Notify({ Title = AldyToiWE(20426), [AldyToiWE(20568)] = AldyToiWE(20538), [AldyToiWE(20271)] = 1 });
			return;
		end;
		if AldyToiM:find(AldyToiWE(20496)) and AldyToiM:find(AldyToiWE(20377)) then
			local AldyToiZ = AldyToiM:match("\112\108\097\099\101\073\100\061\040\037\100\043\041");
			local AldyToif = AldyToiM:match(AldyToiWE(20414));
			if not AldyToiZ or not AldyToif then
				AldyToiz:Notify({ Title = "\069\114\114\111\114", [AldyToiWE(20568)] = AldyToiWE(20592), Duration = 2 });
				return;
			end;
			AldyToiZ = tonumber(AldyToiZ);
			local AldyToiq, AldyToiF = pcall(function()
					AldyTois:TeleportToPlaceInstance(AldyToiZ, AldyToif, AldyToie);
				end);
			if not AldyToiq then
				AldyToiz:Notify({ [AldyToiWE(20293)] = AldyToiWE(20447), [AldyToiWE(20568)] = tostring(AldyToiF), [AldyToiWE(20271)] = 2 });
			end;
		elseif AldyToiM:find("\115\104\097\114\101\037\063\099\111\100\101\061") then
			local AldyToiZ = AldyToiM:match(AldyToiWE(20495));
			local AldyToif = game.PlaceId;
			if not AldyToiZ then
				AldyToiz:Notify({ Title = AldyToiWE(20418), [AldyToiWE(20568)] = AldyToiWE(20569), [AldyToiWE(20271)] = 2 });
				return;
			end;
			local AldyToiq, AldyToiF = pcall(function()
					AldyTois:TeleportToPrivateServer(AldyToif, AldyToiZ, { AldyToie });
				end);
			if not AldyToiq then
				AldyToiz:Notify({ Title = AldyToiWE(20447), [AldyToiWE(20568)] = tostring(AldyToiF), [AldyToiWE(20271)] = 2 });
			end;
		else
			AldyToiz:Notify({ [AldyToiWE(20293)] = AldyToiWE(20418), [AldyToiWE(20568)] = AldyToiWE(20513), [AldyToiWE(20271)] = 2 });
		end;
	end });
local AldyToiOc = os.time() - AldyToiX;
local AldyToiDc = math.floor(AldyToiOc / 60);
local AldyToiwc = AldyToiOc % 60;
task.spawn(function()
	while task[AldyToiWE(20363)](10) do
		if AldyToil[AldyToiWE(20347)] then
			break;
		end;
		local AldyToiz = os[AldyToiWE(20264)]() - AldyToiX;
		local AldyToiZ = math[AldyToiWE(20561)](AldyToiz / 60);
		local AldyToif = AldyToiz % 60;
		AldyToiQc:SetDesc(tostring(#AldyToiM:GetPlayers()) .. (AldyToiWE(20262) .. tostring(AldyToiM[AldyToiWE(20273)])));
		AldyToiWc:SetDesc(tostring(math.floor((game:GetService("\083\116\097\116\115"))[AldyToiWE(20667)][AldyToiWE(20472)]["\068\097\116\097 \080\105\110\103"]:GetValue())) .. AldyToiWE(20657));
	end;
end);
local function AldyToiEc(AldyToiz, AldyToiM)
	for AldyToiz, AldyToiZ in ipairs(AldyToiz) do
		if AldyToiZ == AldyToiM then
			return true;
		end;
	end;
	return false;
end;
local AldyToirc = "";
if AldyToio.priceValue then
	AldyToic1();
end;
local function AldyToiBc(AldyToiz)
	local AldyToiM = AldyToiK:FindFirstChild("\073\116\101\109\115");
	if not AldyToiM then
		return nil;
	end;
	local AldyToiZ = (AldyToiz:gsub("\037\115\042\037\098\040\041", AldyToiWE(20325))):gsub("\094\037\115\042\040\046-\041\037\115\042\036", "\037\049");
	local AldyToif, AldyToie = nil, 0;
	for AldyToiz, AldyToiM in ipairs(AldyToiM:GetChildren()) do
		if AldyToiM:IsA(AldyToiWE(20276)) then
			if AldyToiZ:find(AldyToiM.Name, 1, true) then
				if #AldyToiM[AldyToiWE(20341)] > AldyToie then
					AldyToie = #AldyToiM.Name;
					AldyToif = AldyToiM;
				end;
			end;
		end;
	end;
	return AldyToif;
end;
task.spawn(function()
	while task[AldyToiWE(20363)](1) do
		local AldyToiz = os.time() - AldyToiX;
		local AldyToiM = math.floor(AldyToiz / 60);
		local AldyToiZ = AldyToiz % 60;
		AldyToirc = string.format("\037\100\058\037\048\050\100 \040\077\105\110\117\116\101\115\058\083\101\099\111\110\100\041", AldyToiM, AldyToiZ);
	end;
end);
AldyToiZ1:Section({ Title = "\087\101\098\104\111\111\107 \067\111\110\102\105\103\117\114\097\116\105\111\110" });
local AldyToivc = AldyToiZ1:Toggle({ [AldyToiWE(20293)] = AldyToiWE(20691), Default = true, Callback = function(AldyToiz)
			AldyToih1.enabled = AldyToiz;
			if not AldyToiz then
				if AldyToih1[AldyToiWE(20636)] and AldyToih1[AldyToiWE(20636)][AldyToiWE(20550)] then
					AldyToih1[AldyToiWE(20636)]:Disconnect();
					AldyToih1.connection = nil;
				end;
				return;
			end;
			task[AldyToiWE(20417)](function()
				while AldyToih1.enabled do
					task[AldyToiWE(20363)](1);
					local AldyToiz = AldyToiy.PlayerGui:FindFirstChild(AldyToiWE(20450));
					if not (AldyToiz and AldyToiz[AldyToiWE(20437)]) then
						if AldyToih1.connection and AldyToih1[AldyToiWE(20636)].Connected then
							AldyToih1[AldyToiWE(20636)]:Disconnect();
							AldyToih1[AldyToiWE(20636)] = nil;
						end;
					end;
					if AldyToih1[AldyToiWE(20636)] and AldyToih1[AldyToiWE(20636)][AldyToiWE(20550)] then
 
					end;
					local AldyToiM = AldyToiz:FindFirstChild(AldyToiWE(20609), true) and AldyToiz.Display:FindFirstChild("\067\111\110\116\097\105\110\101\114", true);
					if AldyToiM then
						local AldyToiz = AldyToiM:FindFirstChild("\073\116\101\109\078\097\109\101", true);
						local AldyToiZ = AldyToiM:FindFirstChild("\082\097\114\105\116\121", true);
						if AldyToiz and AldyToiZ then
							AldyToih1[AldyToiWE(20636)] = (AldyToiz:GetPropertyChangedSignal("\084\101\120\116")):Connect(function()
									local AldyToiM = os[AldyToiWE(20264)]();
									local AldyToif = AldyToiz.Text;
									if AldyToif == "" or AldyToif == AldyToih1.lastFish then
										return;
									end;
									AldyToih1.lastFish = AldyToif;
									AldyToih1[AldyToiWE(20357)] = AldyToiM;
									local AldyToiq = AldyToiBc(AldyToif);
									if not AldyToiq then
										return;
									end;
									local AldyToiF, AldyTois = pcall(require, AldyToiq);
									if not (AldyToiF and (AldyTois and AldyTois.Data)) then
										return;
									end;
									local AldyToiK = AldyTois.Probability[AldyToiWE(20541)];
									local AldyToij = AldyTois.Data.Tier;
									local AldyToin = AldyTois.UUID;
									local AldyToiL = AldyToiR[AldyToiWE(20285)](nil, AldyToiK);
									local AldyToig = AldyToiL.Name;
									if AldyToio.priceValue then
										AldyToic1();
									end;
									if AldyToih1.selectedTiers > 0 and not AldyToiEc(AldyToih1[AldyToiWE(20246)], AldyToig) then
										return;
									end;
									local AldyToiU = AldyTois.Data.Icon and AldyTois[AldyToiWE(20253)].Icon:match(AldyToiWE(20287));
									local AldyToiT = AldyTois[AldyToiWE(20661)];
									local AldyToiJ = AldyToiZ[AldyToiWE(20660)];
									local AldyToiN = AldyToif:match(AldyToiWE(20576));
									local AldyToim = AldyToif:gsub("\037\115\042\037\098\040\041\037\115\042\036", AldyToiWE(20325));
									local AldyToih, AldyToia = AldyToiWE(20266), "\085\110\107\110\111\119\110";
									local AldyToii = AldyToiy:FindFirstChild(AldyToiWE(20403));
									if AldyToii and AldyToii:FindFirstChild(AldyToiWE(20675)) then
										AldyToih = tostring(AldyToii.Caught[AldyToiWE(20697)]);
									end;
									if AldyToip then
										local AldyToiz = AldyToip:FindFirstChild("\068\105\115\112\108\097\121");
										local AldyToiM = AldyToiz and AldyToiz:FindFirstChild(AldyToiWE(20587));
										local AldyToiZ = AldyToiM and AldyToiM:FindFirstChild("\066\097\103\083\105\122\101");
										if AldyToiZ and AldyToiZ:IsA(AldyToiWE(20552)) then
											AldyToia = AldyToiZ[AldyToiWE(20660)];
											local AldyToiz = AldyToia:match(AldyToiWE(20466));
											local AldyToiM = tonumber(AldyToiz);
											if AldyToiM and AldyToiM >= 4990 then
												AldyToiE1();
											end;
										end;
									end;
									local AldyToid = ((((AldyToie:WaitForChild("\080\108\097\121\101\114\071\117\105")):WaitForChild(AldyToiWE(20644))):WaitForChild("\070\114\097\109\101")):WaitForChild(AldyToiWE(20269))):WaitForChild("\067\111\117\110\116\101\114");
									local AldyToiY = AldyToid.Text or AldyToiWE(20393);
									AldyToip1({
										discordId = AldyToih1.discordId,
										robloxUsername = AldyToiy[AldyToiWE(20341)],
										[AldyToiWE(20305)] = AldyToim,
										[AldyToiWE(20288)] = AldyToiN,
										[AldyToiWE(20461)] = AldyToiJ,
										assetId = AldyToiU,
										[AldyToiWE(20621)] = AldyToig,
										sellPrice = AldyToiT,
										[AldyToiWE(20674)] = AldyToih,
										bagSize = AldyToia,
										totalCoin = AldyToiY,
										totalPlay = AldyToirc,
									});
								end);
						end;
					end;
				end;
			end);
		end });
AldyToiW:Register(AldyToiWE(20265), AldyToivc);
local AldyToixc = {
		AldyToiWE(20452),
		"\085\110\099\111\109\109\111\110",
		AldyToiWE(20502),
		AldyToiWE(20659),
		"\076\101\103\101\110\100\097\114\121",
		"\077\121\116\104\105\099",
		AldyToiWE(20380),
	};
(getgenv()).webhookTier = AldyToiZ1:Dropdown({
		Title = AldyToiWE(20678),
		[AldyToiWE(20488)] = AldyToixc,
		Multi = true,
		AllowNone = false,
		[AldyToiWE(20697)] = {},
		Callback = function(AldyToiz)
			for AldyToiz, AldyToiM in ipairs(AldyToiz) do
				AldyToih1[AldyToiWE(20246)][AldyToiM] = true;
			end;
		end,
	});
AldyToiW:Register("\119\101\098\104\111\111\107\084\105\101\114", (getgenv())[AldyToiWE(20648)]);
(getgenv()).DiscordId = AldyToiZ1:Input({ [AldyToiWE(20293)] = "\068\105\115\099\111\114\100 \085\115\101\114 \073\068 \040\079\112\116\105\111\110\097\108\041", [AldyToiWE(20337)] = "\069\110\116\101\114 \121\111\117\114 \068\105\115\099\111\114\100 \073\068", Callback = function(AldyToiz)
			AldyToih1[AldyToiWE(20338)] = value:match(AldyToiWE(20287)) or "";
			AldyToiW:Save();
		end });
AldyToiW:Register("\068\105\115\099\111\114\100\073\100", (getgenv())[AldyToiWE(20424)]);
(getgenv())[AldyToiWE(20280)] = AldyToiZ1:Input({ Title = AldyToiWE(20676), [AldyToiWE(20337)] = "\069\110\116\101\114 \121\111\117\114 \068\105\115\099\111\114\100 \119\101\098\104\111\111\107 \085\082\076", Callback = function(AldyToiz)
			local AldyToiM = AldyToiz:match("\094\037\115\042\040\046-\041\037\115\042\036") or "";
			AldyToih1.customUrl = AldyToiM;
		end });
AldyToiW:Register(AldyToiWE(20280), (getgenv()).customUrl);
local AldyToitc = {
		selectedPlayerName = nil,
		[AldyToiWE(20663)] = nil,
		selectedItemName = nil,
		tradeAmount = 0,
		[AldyToiWE(20329)] = false,
		[AldyToiWE(20635)] = false,
	};
local function AldyToikc()
	local AldyToiz = {};
	for AldyToiM, AldyToiZ in ipairs(AldyToiM:GetPlayers()) do
		if AldyToiZ ~= AldyToiy then
			table[AldyToiWE(20509)](AldyToiz, AldyToiZ[AldyToiWE(20341)]);
		end;
	end;
	table[AldyToiWE(20268)](AldyToiz);
	return AldyToiz;
end;
AldyToir:Section({ Title = "\065\117\116\111 \084\114\097\100\101" });
local AldyToizE, AldyToiME, AldyToiZE;
local AldyToifE = false;
local function AldyToieE()
	if AldyToifE then
		return true;
	end;
	local AldyToiz = pcall(function()
			AldyToiME = require((AldyToiK:WaitForChild("\080\097\099\107\097\103\101\115")):WaitForChild("\082\101\112\108\105\111\110"));
			AldyToiZE = require((AldyToiK:WaitForChild(AldyToiWE(20301))):WaitForChild("\073\116\101\109\085\116\105\108\105\116\121"));
			AldyToizE = require((AldyToiK:WaitForChild(AldyToiWE(20386))):WaitForChild(AldyToiWE(20391)));
		end);
	if AldyToiz then
		AldyToifE = true;
		return true;
	end;
	return false;
end;
local AldyToiqE = {};
local AldyToiFE = {};
local AldyToisE;
local function AldyToiKE()
	local AldyToiz = {};
	for AldyToiM, AldyToiZ in ipairs(AldyToiM:GetPlayers()) do
		if AldyToiZ ~= AldyToiy then
			table.insert(AldyToiz, AldyToiZ.Name);
		end;
	end;
	table[AldyToiWE(20268)](AldyToiz);
	return AldyToiz;
end;
AldyToisE = AldyToir:Paragraph({ [AldyToiWE(20293)] = AldyToiWE(20333), [AldyToiWE(20688)] = AldyToiWE(20623) });
local AldyToiyE = AldyToir:Dropdown({
		[AldyToiWE(20293)] = "\083\101\108\101\099\116 \073\116\101\109 \102\114\111\109 \066\097\099\107\112\097\099\107",
		Values = { AldyToiWE(20546) },
		AllowNone = true,
		Callback = function(AldyToiz)
			AldyToitc.selectedItemName = AldyToiz;
		end,
	});
local AldyToijE = AldyToir:Dropdown({
		[AldyToiWE(20293)] = "\083\101\108\101\099\116 \084\097\114\103\101\116",
		Values = AldyToiKE(),
		[AldyToiWE(20292)] = true,
		Callback = function(AldyToiz)
			AldyToitc.selectedPlayerName = AldyToiz;
			if AldyToiz then
				local AldyToiZ = AldyToiM:FindFirstChild(AldyToiz);
				AldyToitc[AldyToiWE(20663)] = AldyToiZ and AldyToiZ[AldyToiWE(20618)] or nil;
			else
				AldyToitc.selectedPlayerId = nil;
			end;
		end,
	});
AldyToijE:Refresh(AldyToiKE());
(getgenv()).filterRegex = function(AldyToiz)
		if type(AldyToiz) == AldyToiWE(20523) then
			AldyToiz = AldyToiz[1];
		end;
		if type(AldyToiz) == AldyToiWE(20508) then
			return AldyToiz:match("\094\040\046-\041\037\115\042\037\040\037\100\043\120\037\041\036") or AldyToiz:match(AldyToiWE(20281)) or AldyToiz;
		end;
		return nil;
	end;
local function AldyToinE()
	if not AldyToieE() then
		if AldyToisE then
			AldyToisE:SetDesc(AldyToiWE(20438));
		end;
		return;
	end;
	local AldyToiz = AldyToiME.Client:WaitReplion(AldyToiWE(20253));
	if not AldyToiz then
		return;
	end;
	local AldyToiM = AldyToiz:Get({ AldyToiWE(20587), "\073\116\101\109\115" });
	local AldyToiZ = {};
	AldyToiqE = {};
	AldyToiFE = {};
	if not AldyToiM then
		return;
	end;
	for AldyToiz, AldyToiM in ipairs(AldyToiM) do
		local AldyToif = AldyToiZE:GetItemData(AldyToiM[AldyToiWE(20313)]);
		if AldyToif and (AldyToif[AldyToiWE(20253)] and (AldyToif[AldyToiWE(20253)].Type == AldyToiWE(20401) or AldyToif[AldyToiWE(20253)][AldyToiWE(20637)] == AldyToiWE(20244))) then
			if not (AldyToitc[AldyToiWE(20635)] and AldyToiM.Favorited) then
				local AldyToiz = AldyToizE[AldyToiWE(20664)](AldyToiM, AldyToif);
				if not AldyToiZ[AldyToiz] then
					AldyToiZ[AldyToiz] = 0;
					AldyToiqE[AldyToiz] = {};
				end;
				AldyToiZ[AldyToiz] = AldyToiZ[AldyToiz] + 1;
				table[AldyToiWE(20509)](AldyToiqE[AldyToiz], AldyToiM.UUID);
			end;
		end;
	end;
	for AldyToiz, AldyToiM in pairs(AldyToiZ) do
		table.insert(AldyToiFE, string[AldyToiWE(20640)]("\037\115 \040\081\116\121 \058 \037\100\041", AldyToiz, AldyToiM));
	end;
	table.sort(AldyToiFE);
	AldyToiyE:Refresh(AldyToiFE);
	AldyToijE:Refresh(AldyToiKE());
end;
AldyToinE();
AldyToir:Button({ [AldyToiWE(20293)] = "\082\101\108\111\097\100 \066\097\099\107\112\097\099\107 \038 \080\108\097\121\101\114\115", Callback = AldyToinE() });
local AldyToiLE = AldyToir:Input({
		[AldyToiWE(20293)] = AldyToiWE(20354),
		[AldyToiWE(20337)] = "\053",
		[AldyToiWE(20637)] = "\073\110\112\117\116",
		Callback = function(AldyToiz)
			AldyToitc.tradeAmount = tonumber(AldyToiz) or 0;
		end,
	});
AldyToiM[AldyToiWE(20536)]:Connect(function()
	if AldyToijE and not AldyToijE.Opened then
		AldyToijE:Refresh(AldyToiKE());
	end;
end);
AldyToiM.PlayerRemoving:Connect(function()
	if AldyToijE and not AldyToijE[AldyToiWE(20498)] then
		AldyToijE:Refresh(AldyToiKE());
	end;
end);
AldyToir:Toggle({ Title = "\083\116\097\114\116 \084\114\097\100\101\033", [AldyToiWE(20697)] = false, Callback = function(AldyToiz)
		AldyToitc.autoTradeV2 = AldyToiz;
		if AldyToiz then
			local AldyToiz, AldyToiZ = 0, 0;
			task[AldyToiWE(20417)](function()
				if not AldyToieE() then
					AldyToisE:SetDesc("\069\114\114\111\114\058 \099\097\110\'\116 \102\105\110\100 \109\111\100\117\108\101\115\044 \112\108\101\097\115\101 \099\111\110\116\097\099\116 \097\100\109\105\110\046");
					AldyToitc[AldyToiWE(20329)] = false;
					return;
				end;
				local AldyToiq = AldyToie[AldyToiWE(20441)];
				local AldyToiF = AldyToiq and AldyToiq:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
				local AldyTois = AldyToif:FindFirstChild(AldyToiWE(20671));
				local AldyToiy = AldyTois:FindFirstChild(AldyToitc.selectedPlayerName);
				if not AldyToitc.selectedItemName or not AldyToitc[AldyToiWE(20663)] or AldyToitc[AldyToiWE(20531)] <= 0 then
					AldyToisE:SetDesc(AldyToiWE(20579));
					AldyToitc[AldyToiWE(20329)] = false;
					return;
				end;
				local AldyToij = (getgenv()).filterRegex(AldyToitc.selectedItemName);
				if not AldyToij then
					AldyToij = AldyToitc[AldyToiWE(20348)];
				end;
				local AldyToin = AldyToiqE[AldyToij];
				if not AldyToin or #AldyToin < AldyToitc[AldyToiWE(20531)] then
					AldyToisE:SetDesc("\078\111\116 \101\110\111\117\103\104 \105\116\101\109\115 \116\111 \116\114\097\100\101\046");
					AldyToitc[AldyToiWE(20329)] = false;
					return;
				end;
				if AldyToiy then
					local AldyToif = AldyToiM:GetPlayerFromCharacter(AldyToiy);
					if AldyToif then
						local AldyToiM = AldyToiy.HumanoidRootPart;
						AldyToiF.CFrame = AldyToiM.CFrame;
						local AldyToie = AldyToif[AldyToiWE(20618)];
						local AldyToiq = ((((AldyToiK:WaitForChild("\080\097\099\107\097\103\101\115")):WaitForChild(AldyToiWE(20643))):WaitForChild("\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048")):WaitForChild(AldyToiWE(20382))):WaitForChild(AldyToiWE(20631));
						for AldyToiM = 1, AldyToitc[AldyToiWE(20531)], 1 do
							if not AldyToitc[AldyToiWE(20329)] then
								AldyToisE:SetDesc("\084\114\097\100\101 \115\116\111\112\112\101\100\046");
								break;
							end;
							local AldyToif = AldyToin[AldyToiM];
							local AldyToie = AldyToitc.selectedPlayerName;
							AldyToisE:SetDesc(string.format(AldyToiWE(20563), AldyToiM, AldyToitc.tradeAmount, AldyToie, AldyToiz, AldyToiZ));
							local AldyToiF, AldyTois = pcall(AldyToiq.InvokeServer, AldyToiq, AldyToitc[AldyToiWE(20663)], AldyToif);
							local AldyToiK;
							if AldyToiF and AldyTois then
								AldyToiz = AldyToiz + 1;
								AldyToiK = "\065\099\099\101\112\116\101\100";
								AldyToisE:SetDesc(string[AldyToiWE(20640)](AldyToiWE(20362), AldyToiM, AldyToitc.tradeAmount, AldyToie, AldyToiz, AldyToiZ));
							else
								AldyToiZ = AldyToiZ + 1;
								AldyToiK = "\082\101\106\101\099\116\101\100";
								AldyToisE:SetDesc(string[AldyToiWE(20640)]("\080\114\111\103\114\101\115\115\058 \037\100\047\037\100\n\084\097\114\103\101\116\058  \037\115\n\083\116\097\116\117\115\058 \060\102\111\110\116 \099\111\108\111\114\061\'\035\102\056\055\049\055\049\'\062\082\101\106\101\099\116\101\100\060\047\102\111\110\116\062\n\083\117\099\099\101\115\115\058 \037\100 \124 \070\097\105\108\101\100\058 \037\100", AldyToiM, AldyToitc.tradeAmount, AldyToie, AldyToiz, AldyToiZ));
							end;
							task[AldyToiWE(20363)](5);
						end;
					end;
				end;
				AldyToisE:SetDesc(string[AldyToiWE(20640)](AldyToiWE(20656), AldyToiz + AldyToiZ, AldyToiz, AldyToiZ));
				AldyToitc.autoTradeV2 = false;
				AldyToinE();
			end);
		end;
	end });
local AldyToigE = { enabled = false, selectedWeathers = {} };
local AldyToiUE = {
		{ [AldyToiWE(20341)] = "\087\105\110\100", [AldyToiWE(20421)] = 10000 },
		{ Name = AldyToiWE(20560), [AldyToiWE(20421)] = 15000 },
		{ Name = AldyToiWE(20458), Price = 20000 },
		{ Name = AldyToiWE(20394), [AldyToiWE(20421)] = 35000 },
		{ [AldyToiWE(20341)] = AldyToiWE(20405), [AldyToiWE(20421)] = 50000 },
		{ Name = "\083\104\097\114\107 \072\117\110\116", [AldyToiWE(20421)] = 300000 },
	};
table[AldyToiWE(20268)](AldyToiUE, function(AldyToiz, AldyToiM)
	return AldyToiz[AldyToiWE(20421)] < AldyToiM[AldyToiWE(20421)];
end);
local AldyToiTE = {};
for AldyToiz, AldyToiM in ipairs(AldyToiUE) do
	table[AldyToiWE(20509)](AldyToiTE, AldyToiM[AldyToiWE(20341)]);
end;
local function AldyToiJE()
	if not AldyToigE.enabled or #AldyToigE[AldyToiWE(20655)] == 0 then
		return;
	end;
	for AldyToiz, AldyToiM in ipairs(AldyToigE[AldyToiWE(20655)]) do
		pcall(function()
			((((((game:GetService("\082\101\112\108\105\099\097\116\101\100\083\116\111\114\097\103\101")):WaitForChild("\080\097\099\107\097\103\101\115")):WaitForChild("\095\073\110\100\101\120")):WaitForChild("\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048")):WaitForChild("\110\101\116")):WaitForChild(AldyToiWE(20369))):InvokeServer(AldyToiM);
		end);
		task[AldyToiWE(20363)](1);
	end;
end;
local AldyToiNE = AldyToix:Toggle({ [AldyToiWE(20293)] = AldyToiWE(20467), Value = false, [AldyToiWE(20654)] = function(AldyToiz)
			AldyToigE[AldyToiWE(20687)] = AldyToiz;
			if AldyToiz then
				AldyToiJE();
				task[AldyToiWE(20417)](function()
					while AldyToigE.enabled do
						task[AldyToiWE(20363)](500);
						if not AldyToigE.enabled then
							break;
						end;
						AldyToiJE();
					end;
				end);
			end;
		end });
local AldyToimE = AldyToix:Dropdown({
		[AldyToiWE(20293)] = AldyToiWE(20311),
		Values = AldyToiTE,
		Multi = true,
		AllowNone = true,
		Callback = function(AldyToiz)
			AldyToigE[AldyToiWE(20655)] = AldyToiz;
		end,
	});
AldyToix:Section({ [AldyToiWE(20293)] = "\067\108\105\099\107 \084\111 \066\117\121" });
for AldyToiz, AldyToiM in ipairs(AldyToiUE) do
	local AldyToiZ = string[AldyToiWE(20640)](AldyToiWE(20286), AldyToiM.Name, AldyToiM.Price);
	AldyToix:Button({ Title = AldyToiZ, [AldyToiWE(20654)] = function()
			pcall(function()
				((((((game:GetService(AldyToiWE(20584))):WaitForChild("\080\097\099\107\097\103\101\115")):WaitForChild("\095\073\110\100\101\120")):WaitForChild("\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048")):WaitForChild(AldyToiWE(20382))):WaitForChild(AldyToiWE(20369))):InvokeServer(AldyToiM.Name);
			end);
		end });
end;
local AldyToihE = AldyToiv:Paragraph({ [AldyToiWE(20293)] = "\083\116\097\116\117\115", [AldyToiWE(20688)] = "\087\097\105\116\105\110\103 \116\111 \115\116\097\114\116 \116\114\097\100\101", [AldyToiWE(20567)] = "\082\101\100" });
local AldyToipE = Vector3[AldyToiWE(20355)](3231, -1303, 1402);
local AldyToiaE = (AldyToiK:WaitForChild("\067\111\110\116\114\111\108\108\101\114\115")):WaitForChild("\069\110\099\104\097\110\116\105\110\103\067\111\110\116\114\111\108\108\101\114");
local AldyToiiE = AldyToiK:WaitForChild(AldyToiWE(20445));
local function AldyToiRE()
	local AldyToiz = {};
	for AldyToiM, AldyToiZ in ipairs(AldyToiiE:GetChildren()) do
		if AldyToiZ:IsA("\077\111\100\117\108\101\083\099\114\105\112\116") then
			local AldyToiM = require(AldyToiZ);
			if AldyToiM and (AldyToiM.Data and AldyToiM.Data.Name) then
				table[AldyToiWE(20509)](AldyToiz, AldyToiM[AldyToiWE(20253)].Name);
			end;
		end;
	end;
	table[AldyToiWE(20268)](AldyToiz);
	return AldyToiz;
end;
local AldyToidE = {};
local AldyToiYE = false;
local function AldyToiCE()
	local AldyToiz = AldyToiU:Get(AldyToiWE(20587));
	if not AldyToiz or not AldyToiz[AldyToiWE(20470)] then
		return nil;
	end;
	for AldyToiz, AldyToiM in pairs(AldyToiz.Items) do
		if type(AldyToiM) == AldyToiWE(20523) and AldyToiM.Id == 10 then
			return tostring(AldyToiM[AldyToiWE(20433)]);
		end;
	end;
	return nil;
end;
AldyToiv:Dropdown({
	Title = AldyToiWE(20581),
	[AldyToiWE(20488)] = AldyToiRE(),
	[AldyToiWE(20583)] = true,
	[AldyToiWE(20292)] = false,
	[AldyToiWE(20697)] = {},
	Callback = function(AldyToiz)
		AldyToidE = AldyToiz or {};
		if #AldyToidE > 0 then
			AldyToihE:SetDesc(AldyToiWE(20454) .. table.concat(AldyToidE, AldyToiWE(20680)));
		else
			AldyToihE:SetDesc("\226\157\140 \069\114\114\111\114\058 \078\111 \069\110\099\104\097\110\116 \115\101\108\101\099\116\101\100\046");
		end;
	end,
});
local function AldyToiIE(AldyToiz, AldyToiM)
	for AldyToiz, AldyToiZ in ipairs(AldyToiz) do
		if AldyToiZ == AldyToiM then
			return true;
		end;
	end;
	return false;
end;
local function AldyToiPE(AldyToiz, AldyToiM)
	return table.concat(AldyToiz, AldyToiM or "\044 ");
end;
AldyToiv:Toggle({ Title = AldyToiWE(20300), Default = false, [AldyToiWE(20654)] = function(AldyToiz)
		if AldyToiz then
			if #AldyToidE == 0 then
				AldyToihE:SetDesc("\226\157\140 \069\114\114\111\114\058 \078\111 \069\110\099\104\097\110\116 \115\101\108\101\099\116\101\100\046");
				return;
			end;
			AldyToiYE = true;
			AldyToihE:SetDesc("\077\117\108\097\105 \112\114\111\115\101\115 \101\110\099\104\097\110\116\046\046\046 \077\101\110\099\097\114\105 " .. AldyToiPE(AldyToidE));
			local AldyToiz = (AldyToif:WaitForChild("\067\104\097\114\097\099\116\101\114\115")):FindFirstChild(AldyToie[AldyToiWE(20341)]);
			local AldyToiM = AldyToiz and AldyToiz:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
			if AldyToiM then
				AldyToiM[AldyToiWE(20475)] = CFrame[AldyToiWE(20355)](AldyToipE);
			end;
			task.spawn(function()
				while AldyToiYE do
					local AldyToiz = AldyToiCE();
					if not AldyToiz then
						AldyToihE:SetDesc(AldyToiWE(20692));
						AldyToiYE = false;
						break;
					end;
					local AldyToiM = pcall(function()
							AldyToiG[AldyToiWE(20446)]:FireServer(AldyToiz, AldyToiWE(20244));
							task[AldyToiWE(20363)](.2);
							AldyToiG.RE_EquipTool:FireServer(2);
							task.wait(.2);
							AldyToiG[AldyToiWE(20444)]:FireServer();
						end);
					if not AldyToiM then
						AldyToihE:SetDesc("\226\154\160\239\184\143 \069\114\114\111\114 \115\097\097\116 \101\110\099\104\097\110\116\046 \072\101\110\116\105\107\097\110\046");
						AldyToiYE = false;
						break;
					end;
					task.wait(1);
				end;
			end);
		else
			AldyToiYE = false;
			AldyToihE:SetDesc(AldyToiWE(20558));
		end;
	end });
local function AldyToiXE(AldyToiz)
	for AldyToiM, AldyToiZ in ipairs(AldyToiiE:GetChildren()) do
		if AldyToiZ:IsA(AldyToiWE(20276)) then
			local AldyToiM = require(AldyToiZ);
			if AldyToiM and (AldyToiM[AldyToiWE(20253)] and AldyToiM[AldyToiWE(20253)].Id == AldyToiz) then
				return AldyToiM;
			end;
		end;
	end;
	return nil;
end;
AldyToiG[AldyToiWE(20593)].OnClientEvent:Connect(function(AldyToiz, AldyToiM, AldyToiZ, AldyToif)
	if not AldyToiYE then
		return;
	end;
	local AldyToie = AldyToiXE(AldyToiM);
	if AldyToie then
		local AldyToiz = AldyToie[AldyToiWE(20253)][AldyToiWE(20341)];
		if AldyToiIE(AldyToidE, AldyToiz) then
			AldyToihE:SetDesc(AldyToiWE(20257) .. (AldyToiz .. "\n\082\111\108\108 \067\111\109\112\108\101\116\101\100\046"));
			AldyToiYE = false;
		else
			AldyToihE:SetDesc(AldyToiWE(20608) .. (AldyToiz .. AldyToiWE(20494)));
		end;
	end;
end);
local AldyToicE = {
		[AldyToiWE(20606)] = { name = AldyToiWE(20459), [AldyToiWE(20331)] = Vector3.new(1014.896, 20.921, 5071.434) },
		["\048\050"] = { name = AldyToiWE(20270), [AldyToiWE(20331)] = Vector3[AldyToiWE(20355)](-3598.539, -279.646, -1634.287) },
		["\048\051"] = { [AldyToiWE(20306)] = AldyToiWE(20591), [AldyToiWE(20331)] = Vector3.new(-3677, 107, -912) },
		[AldyToiWE(20504)] = { name = "\070\105\115\104\101\114\109\097\110 \073\115\108\097\110\100", [AldyToiWE(20331)] = Vector3.new(-2.382, 4.5, 2839.47) },
		[AldyToiWE(20565)] = { name = AldyToiWE(20595), position = Vector3.new(-2051.413, 6.268, 3662) },
		["\048\054"] = { [AldyToiWE(20306)] = "\069\115\111\116\101\114\105\099 \068\101\112\116\104\115", [AldyToiWE(20331)] = Vector3[AldyToiWE(20355)](3209.068, -1302.855, 1411.844) },
		[AldyToiWE(20278)] = { name = "\069\115\111\116\101\114\105\099 \073\115\108\097\110\100", position = Vector3[AldyToiWE(20355)](2031.415, 27.397, 1394.621) },
		["\048\056"] = { [AldyToiWE(20306)] = AldyToiWE(20555), [AldyToiWE(20331)] = Vector3.new(-678.811, 4.935, 708.578) },
		[AldyToiWE(20506)] = { name = AldyToiWE(20370), position = Vector3.new(-516.92, 22, 191) },
		["\049\048"] = { [AldyToiWE(20306)] = AldyToiWE(20645), position = Vector3.new(-3667.556, -135.574, -900.99) },
		["\049\049"] = { [AldyToiWE(20306)] = "\087\101\097\116\104\101\114 \077\097\099\104\105\110\101", position = Vector3.new(-1471, -3, 1929) },
		["\049\050"] = { name = AldyToiWE(20250), [AldyToiWE(20331)] = Vector3[AldyToiWE(20355)](1611, 4, 3280) },
		[AldyToiWE(20575)] = { [AldyToiWE(20306)] = AldyToiWE(20610), position = Vector3[AldyToiWE(20355)](-2949.694, 63.25, 2248.52) },
	};
local AldyToiuE = nil;
local AldyToiGE = AldyToiKc:Dropdown({
		Title = AldyToiWE(20457),
		Values = AldyToikc(),
		Multi = false,
		[AldyToiWE(20654)] = function(AldyToiz)
			AldyToiuE = AldyToiz[1];
		end,
	});
local function AldyToiVE(AldyToiM)
	if not AldyToiM or AldyToiM == "" then
		AldyToiz:Notify({ [AldyToiWE(20293)] = "\226\157\140 \069\114\114\111\114", [AldyToiWE(20568)] = "\078\111 \112\108\097\121\101\114 \115\101\108\101\099\116\101\100\046", [AldyToiWE(20271)] = 2 });
		return;
	end;
	local AldyToiZ = AldyToie[AldyToiWE(20441)];
	local AldyToiq = AldyToiZ and AldyToiZ:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
	if not AldyToiq then
		AldyToiz:Notify({ [AldyToiWE(20293)] = "\226\157\140 \069\114\114\111\114", Content = AldyToiWE(20597), Duration = 2 });
		return;
	end;
	local AldyToiF = AldyToif:FindFirstChild("\067\104\097\114\097\099\116\101\114\115");
	if not AldyToiF then
		AldyToiz:Notify({ [AldyToiWE(20293)] = AldyToiWE(20443), [AldyToiWE(20568)] = "\'\067\104\097\114\097\099\116\101\114\115\' \102\111\108\100\101\114 \110\111\116 \102\111\117\110\100\046", [AldyToiWE(20271)] = 2 });
		return;
	end;
	local AldyTois = AldyToiF:FindFirstChild(AldyToiM);
	if AldyTois and AldyTois:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116") then
		local AldyToiZ = AldyTois[AldyToiWE(20500)];
		local AldyToif = AldyToiZ[AldyToiWE(20475)][AldyToiWE(20309)] * 5;
		AldyToiq.CFrame = AldyToiZ[AldyToiWE(20475)] + AldyToif;
		AldyToiz:Notify({ Title = AldyToiWE(20670), [AldyToiWE(20568)] = AldyToiWE(20486) .. AldyToiM, Duration = 2 });
	else
		AldyToiz:Notify({ [AldyToiWE(20293)] = "\226\157\140 \069\114\114\111\114", [AldyToiWE(20568)] = AldyToiWE(20431), [AldyToiWE(20271)] = 2 });
	end;
end;
AldyToit:Button({ [AldyToiWE(20293)] = AldyToiWE(20677), Callback = function()
		pcall(function()
			AldyToiVE(AldyToiuE);
		end);
	end });
for AldyToiz, AldyToiM in pairs(AldyToicE) do
	AldyToit:Button({ [AldyToiWE(20293)] = AldyToiM.name, [AldyToiWE(20654)] = function()
			local AldyToiz = AldyToif.Characters:FindFirstChild(AldyToie[AldyToiWE(20341)]);
			local AldyToiZ = AldyToiz and AldyToiz:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
			if AldyToiZ then
				AldyToiZ.CFrame = CFrame.new(AldyToiM.position + Vector3[AldyToiWE(20355)](5, 5, 0));
				AldyToit:Notify({ [AldyToiWE(20293)] = AldyToiWE(20353), [AldyToiWE(20568)] = AldyToiWE(20486) .. AldyToiM.name, Duration = 2 });
			else
				AldyToit:Notify({ Title = AldyToiWE(20662), [AldyToiWE(20568)] = AldyToiWE(20349), Duration = 2 });
			end;
		end });
end;
AldyToit:Section({ Title = "\084\101\108\101\112\111\114\116 \084\111 \078\080\067" });
(getgenv())[AldyToiWE(20299)] = (getgenv())[AldyToiWE(20299)] or {};
local function AldyToilE()
	(getgenv()).npcFolder = (getgenv())[AldyToiWE(20511)] or AldyToiK:WaitForChild("\078\080\067");
	for AldyToiz, AldyToiM in ipairs((getgenv())[AldyToiWE(20511)]:GetChildren()) do
		table[AldyToiWE(20509)]((getgenv())[AldyToiWE(20299)], AldyToiM.Name);
	end;
end;
local AldyToiHE = (getgenv())[AldyToiWE(20299)][1] or nil;
AldyToit:Dropdown({
	[AldyToiWE(20293)] = AldyToiWE(20537),
	Values = (getgenv()).npcNames,
	Multi = false,
	Default = AldyToiHE,
	Callback = function(AldyToiz)
		AldyToiHE = AldyToiz;
	end,
});
(getgenv()).teleportToNPC = function(AldyToiz)
		if not AldyToiz then
			AldyToit:Notify({ [AldyToiWE(20293)] = "\226\157\140 \084\101\108\101\112\111\114\116 \070\097\105\108\101\100", [AldyToiWE(20568)] = "\078\080\067 \110\111\116 \102\111\117\110\100\046", Duration = 2 });
			return;
		end;
		local AldyToiM = AldyToie.Character;
		local AldyToiZ = AldyToiM and AldyToiM:FindFirstChild("\072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116");
		if not AldyToiZ then
			AldyToit:Notify({ Title = "\226\157\140 \084\101\108\101\112\111\114\116 \070\097\105\108\101\100", Content = "\067\104\097\114\097\099\116\101\114 \111\114 \072\117\109\097\110\111\105\100\082\111\111\116\080\097\114\116 \110\111\116 \102\111\117\110\100\046", Duration = 2 });
			return;
		end;
		local AldyToif, AldyToiq = pcall(function()
				return AldyToiz:GetPivot();
			end);
		if AldyToif and typeof(AldyToiq) == AldyToiWE(20475) then
			local AldyToiM = AldyToiq[AldyToiWE(20423)];
			local AldyToif = Vector3.new(0, 5, 0) + AldyToiM * 5;
			AldyToiZ.CFrame = AldyToiq + AldyToif;
			AldyToit:Notify({ [AldyToiWE(20293)] = "\226\156\133 \084\101\108\101\112\111\114\116 \083\117\099\099\101\115\115", Content = "\084\101\108\101\112\111\114\116\101\100 \116\111 \078\080\067\058 " .. AldyToiz[AldyToiWE(20341)], Duration = 2 });
		else
			AldyToit:Notify({ Title = "\226\157\140 \084\101\108\101\112\111\114\116 \070\097\105\108\101\100", Content = AldyToiWE(20302) .. AldyToiz.Name, Duration = 2 });
		end;
	end;
AldyToit:Button({ [AldyToiWE(20293)] = "\084\101\108\101\112\111\114\116", [AldyToiWE(20654)] = function()
		if not AldyToiHE then
			AldyToit:Notify({ [AldyToiWE(20293)] = AldyToiWE(20662), Content = AldyToiWE(20462), [AldyToiWE(20271)] = 2 });
			return;
		end;
		local AldyToiz = npcFolder:FindFirstChild(AldyToiHE);
		(getgenv())[AldyToiWE(20321)](AldyToiz);
	end });
(getgenv())[AldyToiWE(20465)] = AldyToiK.Packages[AldyToiWE(20643)]["\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048"][AldyToiWE(20382)]["\082\069\047\082\101\112\108\105\099\097\116\101\084\101\120\116\069\102\102\101\099\116"];
(getgenv()).ReplicateTextEffect.OnClientEvent:Connect(function(AldyToiz)
	if AldyToiz and (AldyToiz[AldyToiWE(20681)] and AldyToiz[AldyToiWE(20681)][AldyToiWE(20295)] == AldyToiWE(20548)) then
		local AldyToiZ = AldyToiM.LocalPlayer.Character and AldyToiM[AldyToiWE(20520)].Character:FindFirstChild(AldyToiWE(20471));
		if AldyToiZ and AldyToiz[AldyToiWE(20617)] == AldyToiZ then
			AldyToiI = tick();
		end;
	end;
end);
if AldyToio.priceValue then
	AldyToic1();
end;
local AldyToioE = (game:GetService(AldyToiWE(20584)))[AldyToiWE(20272)]._Index["\115\108\101\105\116\110\105\099\107\095\110\101\116\064\048\046\050\046\048"].net[AldyToiWE(20694)];
AldyToioE.OnClientEvent:Connect(function(...)
	AldyToie1 = false;
	AldyToiI = tick();
	AldyToiq1 = AldyToiq1 + 1;
	AldyToiF1 = AldyToiF1 + 1;
	local AldyToiz = { ... };
	for AldyToiz, AldyToiM in ipairs(AldyToiz) do
		if type(AldyToiM) == AldyToiWE(20523) and (AldyToiM[AldyToiWE(20277)] and AldyToiM[AldyToiWE(20277)].UUID) then
			local AldyToiz = AldyToiM[AldyToiWE(20277)].UUID;
			local AldyToiZ = AldyToiM[AldyToiWE(20277)][AldyToiWE(20313)];
			local AldyToif = AldyToia1(AldyToiZ);
			if AldyToif and (AldyToif.Data[AldyToiWE(20637)] == "\070\105\115\104\101\115" and AldyToif.Probability) then
				local AldyToiM = AldyToiR[AldyToiWE(20285)](nil, AldyToif.Probability[AldyToiWE(20541)]);
				if AldyToiM then
					if AldyToiM.Name == "\076\101\103\101\110\100\097\114\121" and AldyToiH[AldyToiWE(20456)] then
						AldyToii:FireServer(AldyToiz);
					elseif AldyToiM[AldyToiWE(20341)] == AldyToiWE(20291) and AldyToiH.Mythical then
						AldyToii:FireServer(AldyToiz);
					elseif AldyToiM[AldyToiWE(20341)] == "\083\069\067\082\069\084" and AldyToiH.Secret then
						AldyToii:FireServer(AldyToiz);
					end;
				end;
			end;
		end;
		if type(AldyToiM) == AldyToiWE(20523) and (AldyToiM[AldyToiWE(20277)] and (AldyToiM.InventoryItem.Metadata and AldyToiM.InventoryItem.Metadata.VariantId)) then
			local AldyToiz = AldyToiM.InventoryItem.UUID;
			local AldyToiZ = AldyToiM[AldyToiWE(20277)].Metadata[AldyToiWE(20434)];
			if table.find(AldyToiUc, AldyToiZ) then
				AldyToii:FireServer(AldyToiz);
			end;
		end;
	end;
	if AldyToio.AutoSell and AldyToiq1 >= AldyToiZc then
		AldyToiq1 = 0;
		AldyToiE1();
	end;
	if AldyToio.autoFarming and AldyToiF1 >= AldyToiyc then
		AldyToiF1 = 0;
		task.wait(.8);
		AldyToiFc();
	end;
	if AldyToio[AldyToiWE(20387)] then
		AldyToic1();
	end;
end);
task.spawn(function()
	while true do
		task.wait(7);
		AldyToiw1();
		local AldyToiz = tick() - AldyToiI;
		AldyToiA1();
		if AldyToiz > tonumber(AldyToizc) and (AldyToio[AldyToiWE(20322)] and AldyToio.autoRespawn) then
			AldyToiD1();
			AldyToiI = tick();
		end;
	end;
end);
AldyToiy[AldyToiWE(20483)]:Connect(function(AldyToiz)
	local AldyToiM = AldyToif[AldyToiWE(20671)]:FindFirstChild(AldyToie.Name);
	local AldyToiZ = game[AldyToiWE(20533)].LocalPlayer[AldyToiWE(20441)]:WaitForChild(AldyToiWE(20500));
	for AldyToiz, AldyToiM in pairs(AldyToiN) do
		if tostring(AldyToiM[AldyToiWE(20433)]) == tostring(AldyToiT) then
			AldyToim = AldyToiM[AldyToiWE(20313)];
			break;
		end;
	end;
	AldyToiO1();
	local AldyToiq = AldyToio[AldyToiWE(20322)];
	AldyToiv1:Set(AldyToiq);
	AldyToio1(AldyToiq);
end);
AldyToiA:Select();
AldyToiW:Load();